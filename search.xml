<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>JAVA笔记-忘写了</title>
    <url>/2021/08/09/java-bi-ji-wang-xie-liao/</url>
    <content><![CDATA[<h1 id="JAVA笔记-忘写了-抱歉"><a href="#JAVA笔记-忘写了-抱歉" class="headerlink" title="JAVA笔记-忘写了[抱歉]"></a>JAVA笔记-忘写了[抱歉]</h1><hr>
<h6 id="首先在这里跟大家说声抱歉，前面三天我在学习JAVA的时候，我有一些朋友也在和我一起学，几乎都是看的我的笔记学的，他们说这个笔记比较详细，通过注释大部分都能看明白，我也挺欣慰的，毕竟是自己的东西得到了大家的认可，但是呢。由于八月九日这一天，手机店里的维修比较忙，便早早的就去帮忙了一直帮到了晚上九点半才结束，回到家的时候已经是十点半左右了，再加上今天挺累的，就忘记了学习这个事情，想起来的时候已经快第二天了，所以便写了这篇笔记。"><a href="#首先在这里跟大家说声抱歉，前面三天我在学习JAVA的时候，我有一些朋友也在和我一起学，几乎都是看的我的笔记学的，他们说这个笔记比较详细，通过注释大部分都能看明白，我也挺欣慰的，毕竟是自己的东西得到了大家的认可，但是呢。由于八月九日这一天，手机店里的维修比较忙，便早早的就去帮忙了一直帮到了晚上九点半才结束，回到家的时候已经是十点半左右了，再加上今天挺累的，就忘记了学习这个事情，想起来的时候已经快第二天了，所以便写了这篇笔记。" class="headerlink" title="首先在这里跟大家说声抱歉，前面三天我在学习JAVA的时候，我有一些朋友也在和我一起学，几乎都是看的我的笔记学的，他们说这个笔记比较详细，通过注释大部分都能看明白，我也挺欣慰的，毕竟是自己的东西得到了大家的认可，但是呢。由于八月九日这一天，手机店里的维修比较忙，便早早的就去帮忙了一直帮到了晚上九点半才结束，回到家的时候已经是十点半左右了，再加上今天挺累的，就忘记了学习这个事情，想起来的时候已经快第二天了，所以便写了这篇笔记。"></a>首先在这里跟大家说声抱歉，前面三天我在学习JAVA的时候，我有一些朋友也在和我一起学，几乎都是看的我的笔记学的，他们说这个笔记比较详细，通过注释大部分都能看明白，我也挺欣慰的，毕竟是自己的东西得到了大家的认可，但是呢。由于八月九日这一天，手机店里的维修比较忙，便早早的就去帮忙了一直帮到了晚上九点半才结束，回到家的时候已经是十点半左右了，再加上今天挺累的，就忘记了学习这个事情，想起来的时候已经快第二天了，所以便写了这篇笔记。</h6><h6 id="八月十号我回尽快赶进度，尽量多学点东西，笔记也多记一些，知识点也记全一些"><a href="#八月十号我回尽快赶进度，尽量多学点东西，笔记也多记一些，知识点也记全一些" class="headerlink" title="八月十号我回尽快赶进度，尽量多学点东西，笔记也多记一些，知识点也记全一些"></a>八月十号我回尽快赶进度，尽量多学点东西，笔记也多记一些，知识点也记全一些</h6><hr>
]]></content>
      <categories>
        <category>JAVA笔记</category>
        <category>致歉</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>面向对象编程语言</tag>
      </tags>
  </entry>
  <entry>
    <title>JAVA笔记day1</title>
    <url>/2021/08/06/java-bi-ji-day1/</url>
    <content><![CDATA[<h1 id="JAVA笔记-Day1"><a href="#JAVA笔记-Day1" class="headerlink" title="JAVA笔记-Day1"></a>JAVA笔记-Day1</h1><hr>
<h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><hr>
<p>面向过程：以步骤为单位，一步一步完成某一个具体事情</p>
<p>面向对象：以对象为单位，通过调度组合不同的对象来完成某一个事情</p>
<hr>
<p><strong>一、什么是面向对象：</strong></p>
<p>1、面向对象是一种编程思想。</p>
<p>2、面向对象是一种思考问题的思维方式。</p>
<p><strong>二、建立面向对象思维方式：</strong></p>
<p>1、先整体，再局部</p>
<p>2、先抽象，再具体</p>
<p>3、能做什么，再怎么做</p>
<p><strong>三、如何学习面向对象</strong></p>
<p>1、掌握一门面向对象语言的语法</p>
<p>2、熟悉面向对象的设计原则</p>
<p>3、熟悉面向对象设计模式</p>
<hr>
<h3 id="类与对象"><a href="#类与对象" class="headerlink" title="类与对象"></a>类与对象</h3><hr>
<p><strong>什么是类？</strong></p>
<p>1、类是：分类、类别。</p>
<p>2、通过分类，我们可以区别不同的事物种类，在日常生活当中，我们常常这样做</p>
<p>3、所以，类是一组具有相同特性(属性)与行为(方法)的事物集合。</p>
<p><strong>类与对象的关系</strong></p>
<p>1、类表示一个共性的产物，是一个<u>综合</u>的特征，而对象，是一个<u>个性</u>的产物，是一个<u>个体</u>的特征。</p>
<p>2、类由属性和方法组成：</p>
<ul>
<li>属性：就相当于一个个的特征</li>
<li>方法：就相当于人的一个个的行为，Such as：说话、吃饭、唱歌、睡觉</li>
</ul>
<p>为了方便理解(类与对象即为包含关系，类包含对象，例如：人类是一个类，然后我、你、李小龙、彭于晏即为对象)</p>
<hr>
]]></content>
      <categories>
        <category>JAVA笔记</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>面向对象编程语言</tag>
      </tags>
  </entry>
  <entry>
    <title>JAVA笔记day2</title>
    <url>/2021/08/07/java-bi-ji-day2/</url>
    <content><![CDATA[<h1 id="JAVA笔记-Day2"><a href="#JAVA笔记-Day2" class="headerlink" title="JAVA笔记-Day2"></a>JAVA笔记-Day2</h1><h3 id="昨日回顾"><a href="#昨日回顾" class="headerlink" title="昨日回顾"></a>昨日回顾</h3><hr>
<h4 id="类与对象"><a href="#类与对象" class="headerlink" title="类与对象"></a>类与对象</h4><hr>
<p><strong>什么是类？</strong></p>
<p>1、类是：分类、类别。</p>
<p>2、通过分类，我们可以区别不同的事物种类，在日常生活当中，我们常常这样做</p>
<p>3、所以，类是一组具有相同特性(属性)与行为(方法)的事物集合。</p>
<p><strong>类与对象的关系</strong></p>
<p>1、类表示一个共性的产物，是一个综合的特征，而对象，是一个个性的产物，是一个个体的特征。</p>
<p>2、类由属性和方法组成：</p>
<ul>
<li>属性：就相当于一个个的特征</li>
<li>方法：就相当于人的一个个的行为，Such as：说话、吃饭、唱歌、睡觉</li>
</ul>
<p>为了方便理解(类与对象即为包含关系，类包含对象，例如：人类是一个类，然后我、你、李小龙、彭于晏即为对象)</p>
<hr>
<h3 id="类和对象的定义格式"><a href="#类和对象的定义格式" class="headerlink" title="类和对象的定义格式"></a>类和对象的定义格式</h3><hr>
<p>在Java中可以使用以下的语句定义一个类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> 类名称</span>&#123;</span><br><span class="line">	属性名称;</span><br><span class="line">	返回值类型 方法名称()&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>对象的定义：</p>
<p>一个类要想真正的进行操作，则必须依靠对象，对象的定义格式如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">类名称 对象名称 = <span class="keyword">new</span> 类名称();</span><br></pre></td></tr></table></figure>

<p>按照以上的格式就可以产生对象了。 </p>
<p>如果要想访问类中的属性或方法(方法的定义) .</p>
<p>则可以依靠以下的语法形式：</p>
<p>访问类中的属性：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">对象.属性;</span><br></pre></td></tr></table></figure>

<p>调用类中的方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">对象.方法();</span><br></pre></td></tr></table></figure>

<p>在java中对象声明有两种含义：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">声明对象：Man man = <span class="keyword">null</span>;</span><br><span class="line"><span class="comment">//表示声明了一个对象，但是此对象无法使用，man没有具体的内存指向，需要实例化一下也就是通常所说的new一下</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">实例化对象: man = <span class="keyword">new</span> Man();</span><br><span class="line"><span class="comment">//表示实例化了对象，也就是常说的new了一下对象，接下开就可以使用它了</span></span><br></pre></td></tr></table></figure>

<hr>
<p><strong>定义类、定义对象、定义方法、访问对象的属性、调用对象的方法例子：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">	此代码编译时会出现两个.class文件</span></span><br><span class="line"><span class="comment">	一个类就是一个.class</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Day2</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Man man = <span class="keyword">null</span>;   <span class="comment">//声明一个类的变量(除了八种基本数据类型以外，都是引用数据类型，包括数组)</span></span><br><span class="line">        <span class="comment">//表示声明了一个对象，但是此对象无法使用，man没有具体的内存指向</span></span><br><span class="line">        man = <span class="keyword">new</span> Man();  <span class="comment">//创建一个Man类型的对象,实例化对象</span></span><br><span class="line">        <span class="comment">//有了对象，就可以调用对象的属性和方法</span></span><br><span class="line">        man.name = <span class="string">&quot;小轩同学&quot;</span>;</span><br><span class="line">        man.age = <span class="number">21</span>;</span><br><span class="line">        </span><br><span class="line">        man.walk(); <span class="comment">//调用walk方法，那么方法就会被执行。</span></span><br><span class="line">        man.code(); <span class="comment">//调用code方法，那么方法就会被执行。</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">//匿名对象：只能使用一次，用完后，该对象就会被释放</span></span><br><span class="line">        <span class="keyword">new</span> Man().code();</span><br><span class="line">        </span><br><span class="line">        man = <span class="keyword">null</span>; <span class="comment">//把对象释放</span></span><br><span class="line">        <span class="comment">//man.code(); //当对象不存在时，调用该对象的属性和方法将报错(空指针)</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//自定义一个类(类型)</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Man</span></span>&#123;</span><br><span class="line">    <span class="comment">//在类中定义属性(特征)</span></span><br><span class="line">    String name;	<span class="comment">//字符串是引用类型变量,不是基本数据类型变量</span></span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    <span class="comment">//在类中定义方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">walk</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;我是&quot;</span>+name+<span class="string">&quot;我&quot;</span>+age+<span class="string">&quot;岁，我能走路&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">code</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;我能写代码,尽管写的不好&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>此代码运行之后的结果：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">我是小轩同学我<span class="number">21</span>岁，我能走路</span><br><span class="line">我能写代码,尽管写的不好</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="对象内存分析"><a href="#对象内存分析" class="headerlink" title="对象内存分析"></a>对象内存分析</h3><hr>
<p>1、new关键字表示创建一个对象</p>
<p>2、new关键字表示实例化一个对象</p>
<p>3、new关键字表示申请内存空间</p>
<p><em>注意：如果使用一个没有申请内存空间的对象，会报空指针异常</em></p>
<p><code>java.lang.NullPointerException</code></p>
<hr>
<p><strong>对象在内存中的结构：</strong></p>
<p>Man man = null;</p>
<p><img src="https://z3.ax1x.com/2021/08/07/fMP7b6.png" alt="fMP7b6.png"></p>
<p>man = new Man();</p>
<p><img src="https://z3.ax1x.com/2021/08/07/fMPTDx.png" alt="fMPTDx.png"></p>
<p><strong>给对象的属性赋值</strong></p>
<p>man.name = “小轩同学”</p>
<p>man.age = 21</p>
<p>则堆内存中的 name = “小轩同学” age = 21</p>
<p><strong>一个类下创建多个对象</strong></p>
<p>各个对象指向堆内存各自的内存空间</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Man man1 = <span class="keyword">null</span>;</span><br><span class="line">Man man2 = <span class="keyword">null</span>;</span><br><span class="line">man1 = <span class="keyword">new</span> Man();</span><br><span class="line">man2 = <span class="keyword">new</span> Man();</span><br><span class="line">man1.name = <span class="string">&quot;小轩同学&quot;</span>;</span><br><span class="line">man1.age = <span class="number">21</span>;</span><br><span class="line">man2.name = <span class="string">&quot;小张同学&quot;</span>;</span><br><span class="line">man2.age = <span class="number">22</span>;</span><br></pre></td></tr></table></figure>

<p><strong>对象之间的赋值</strong></p>
<p>各个对象指向堆内存同一个内存空间</p>
<p>如果在此时更改其中一个对象的属性，另一个对象的相对应的属性也会发生变化，因为这两个对象其实为同一个对象，更改的为同一个“东西”</p>
<figure class="highlight abnf"><table><tr><td class="code"><pre><span class="line">Man man1 = null<span class="comment">;</span></span><br><span class="line">Man man2 = null<span class="comment">;</span></span><br><span class="line"><span class="attribute">man1</span> = new Man()<span class="comment">;</span></span><br><span class="line">man1.name = <span class="string">&quot;小轩同学&quot;</span><span class="comment">;</span></span><br><span class="line">man1.age = <span class="number">21</span><span class="comment">;</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">man2</span> = man1<span class="comment">;//对象之间的赋值，相同类型才可以赋值</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>如果堆内存的一个空间没有被栈内存所指向，那么虚拟机会认为此堆内存是垃圾内存，会被进行回收</p>
<hr>
<h3 id="类与对象小结"><a href="#类与对象小结" class="headerlink" title="类与对象小结"></a>类与对象小结</h3><ol>
<li>new关键字：表示向内存申请空间，也表示实例化一个对象，创建一个对象。</li>
<li>一个对象在内存中的大小，由该对象的所有属性所占的内存大小的总和。引用类型变量在32位系统上占4个字节，在64位系统上占8个字节。加上额外的对象隐性数据所占大小。</li>
<li>相同的类型才可以赋值</li>
<li>不同的引用，指向同一个对象，任何一个引用改变对象的值，其它引用都会反映出来。</li>
<li>编程时要注意的问题，在确定不使用对象时，要尽早释放对象：引用 = null;</li>
<li>当一个堆中的对象没有被任何引用变量所指向时，该对象会被JVM的GC程序认为是垃圾对象，从而被回收。</li>
</ol>
<hr>
]]></content>
      <categories>
        <category>JAVA笔记</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>面向对象编程语言</tag>
      </tags>
  </entry>
  <entry>
    <title>JAVA笔记day3</title>
    <url>/2021/08/08/java-bi-ji-day3/</url>
    <content><![CDATA[<h1 id="JAVA笔记-Day3"><a href="#JAVA笔记-Day3" class="headerlink" title="JAVA笔记-Day3"></a>JAVA笔记-Day3</h1><hr>
<h2 id="封装性"><a href="#封装性" class="headerlink" title="封装性"></a>封装性</h2><h5 id="一、封装性的概念"><a href="#一、封装性的概念" class="headerlink" title="一、封装性的概念"></a>一、封装性的概念</h5><ol>
<li><p>封装性是面向对象思想的三大特征之一</p>
</li>
<li><p>封装就是隐藏实现细节，仅对外提供访问接口。</p>
<p>​    封装有：</p>
</li>
</ol>
<p>属性的封装、方法的封装、类的封装、组件的封装、模块化封装、系统级封装…</p>
<p><em>理解封装的概念可以从生活中的事物来思考，封装起来的东西就是相对独立的整体，比如一个书包，一张桌子，一个冰箱等等，而这些东西组成了一个家。</em></p>
<h5 id="二、封装的好处"><a href="#二、封装的好处" class="headerlink" title="二、封装的好处"></a>二、封装的好处</h5><ol>
<li>模块化</li>
<li>信息隐藏</li>
<li>代码重查</li>
<li>插件化易于调试</li>
<li>具有安全性</li>
</ol>
<p><em>封装缺点：会影响执行效率</em></p>
<p>封装性<br>    如果属性没有封装，那么在本类之外创建对象后，可以直接访问属性<br>    Private关键字：访问权限修饰符。<br>    public 公有的 公有的属性和方法，可以被本类外部的其他类访问<br>    private 私有的，私有的属性或方法，只能在本类中访问</p>
<p>​    想要在类外部访问私有属性，我们需要提供公有的方法来间接访问<br>​    通常在一个类中，属性都私有化，并对外提供getter and setter方法</p>
<p><strong>未封装代码</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">	封装性</span></span><br><span class="line"><span class="comment">	如果属性没有封装，那么在本类之外创建对象后，可以直接访问属性</span></span><br><span class="line"><span class="comment">	Private关键字：访问权限修饰符。</span></span><br><span class="line"><span class="comment">	public 公有的 公有的属性和方法，可以被本类外部的其他类访问    </span></span><br><span class="line"><span class="comment">	private 私有的，私有的属性或方法，只能在本类中访问</span></span><br><span class="line"><span class="comment">	</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Day3</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Person p1 = <span class="keyword">new</span> Person();</span><br><span class="line">        p1.name = <span class="string">&quot;小轩同学&quot;</span>;</span><br><span class="line">        p1.age = <span class="number">21</span>;</span><br><span class="line">        System.out.println(p1.name);</span><br><span class="line">        System.out.println(p1.age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//没有封装之前</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">    <span class="comment">//属性的封装</span></span><br><span class="line">    String name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>封装后代码</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">	想要在类外部访问私有属性，我们需要提供公有的方法来间接访问</span></span><br><span class="line"><span class="comment">	通常在一个类中，属性都私有化，并对外提供getter and setter方法</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Day3</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Person p1 = <span class="keyword">new</span> Person();</span><br><span class="line">        p1.setName(<span class="string">&quot;小轩同学&quot;</span>);</span><br><span class="line">        p1.setAge(<span class="number">21</span>);</span><br><span class="line">        System.out.println(p1.getName());</span><br><span class="line">  		System.out.println(p1.getAge());</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//属性的封装</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//getter and setter写法</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//对外提供一个为name属性设置的方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="comment">//this.name中的name指的是p1这个对象的变量name</span></span><br><span class="line">        <span class="comment">//name指的是此方法中的参数name</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//对外提供一个获取name属性的方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//此代码运行的结果</span></span><br><span class="line">小轩同学</span><br><span class="line"><span class="number">21</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>JAVA笔记</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>面向对象编程语言</tag>
      </tags>
  </entry>
  <entry>
    <title>JAVA笔记day4＆day5</title>
    <url>/2021/08/11/java-bi-ji-day4-day5/</url>
    <content><![CDATA[<h1 id="JAVA笔记-Day4-＆-Day5"><a href="#JAVA笔记-Day4-＆-Day5" class="headerlink" title="JAVA笔记-Day4 ＆ Day5"></a>JAVA笔记-Day4 ＆ Day5</h1><hr>
<h3 id="成员变量和局部变量"><a href="#成员变量和局部变量" class="headerlink" title="成员变量和局部变量"></a>成员变量和局部变量</h3><hr>
<ol>
<li>在类中的位置不同<br>成员变量：在类中定义<br>局部变量：在方法中定义或者方法的参数</li>
<li>在内存中的位置不同<br>成员变量：在堆内存（成员变量属于对象，对象进堆内存）<br>局部变量：在栈内存（局部变量属于方法，方法进栈内存）</li>
<li>生命周期不同<br>成员变量：随着对象的创建而存在，随着对象的销毁而消失<br>局部变量：随着方法的调用而存在，随着方法的调用完毕而消失</li>
<li>初始化值不同<br>成员变量：有默认初始化值，引用类型默认为null<br>局部变量：没有默认初始化值，必须定义，赋值，然后才能使用</li>
</ol>
<p>注意： 局部变量名称可以和成员变量名称一样，在方法中使用的时候，采用的是就近原则。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">	<span class="keyword">private</span> String name;	<span class="comment">//成员变量，在类中定义</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> age;		<span class="comment">//成员变量，在类中定义</span></span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">(<span class="keyword">int</span> len)</span></span>&#123;<span class="comment">//参数也是局部变量</span></span><br><span class="line">		<span class="keyword">int</span> m = len;		<span class="comment">//m也是局部变量</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="构造方法"><a href="#构造方法" class="headerlink" title="构造方法"></a>构造方法</h3><hr>
<p><strong>什么是构造方法</strong></p>
<ol>
<li>构造方法就是类构造对象时调用的方法，用于对象的初始化工作</li>
<li>构造方法是实例化一个类的对象时，也就是new的时候，最先调用的方法</li>
</ol>
<p>构造方法的定义</p>
<p>构造方法是在类中定义的，构造方法的定义格式：方法名称与类名称相同，无返回值类型的声明</p>
<p>对象的实例化语法：</p>
<p>Dog dog = new Dog(); //new Dog 后面有个括号，带括号表示调用了方法，此时调用的方法就是构造方法了</p>
<p><strong>构造方法重载</strong></p>
<p>无参构造方法：</p>
<p>public Dog(){}</p>
<p>带参构造方法</p>
<p>public Dog(String name,int age){</p>
<p>​    this,name = name;</p>
<p>​    this.age = age;</p>
<p>}</p>
]]></content>
      <categories>
        <category>JAVA笔记</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>面向对象编程语言</tag>
      </tags>
  </entry>
  <entry>
    <title>Wox+Everything结合使用</title>
    <url>/2021/08/06/wox-everything-jie-he-shi-yong/</url>
    <content><![CDATA[<p>前段时间通过朋友介绍了解了WOX这款软件，真的觉得挺好用的，在此推荐给大家</p>
<p>这个软件主要是可以帮助大家提高工作效率，真是的墙裂推荐</p>
<p><img src="http://imgconvert.csdnimg.cn/aHR0cHM6Ly90eXBvcmEtb3NzLm9zcy1jbi1iZWlqaW5nLmFsaXl1bmNzLmNvbS9pbWFnZS0yMDIwMDgwNzEwMDgzNzI3My5wbmc?x-oss-process=image/format,png" alt="image-20210806"></p>
<p>​        看到这里应该大多数人都猜到了，没错，你猜的没错，就是这么一款集快速本地索引，网络搜索、批处理于一体的轻量软件</p>
<p>​        这就是 Wox，主界面就是这么的简洁，一个输入框用于接收输入内容，一个列表用于显示结果，切换选择使用键盘方向键，就连打开它也只是需要一个组合快捷键。然而不只是视觉上的简洁，就连使用也是相当的方便、快捷，算得上名副其实的效率工具</p>
<p>​        在实际的使用过程中，Wox 处于后台运行状态，需要使用时，使用快捷键 Alt Space 就能打开。</p>
<p>​        先来试试打开文件或程序吧。比如：你想用 Wox 打开一个文件，你只需要知道这个文件名是什么，直接在搜索框里输入就行了，下面自然会出现筛选结果，你只需要轻轻地敲一下回车就行了。</p>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">Tips:</span> Wox 支持模糊查找，不过搜索关键词越为详细结果越为准确。</span><br></pre></td></tr></table></figure>

<p>​        同时，对于输入中文进行查询还支持拼音首字母，比如微信，那么我只需要输入 wx就行了</p>
<p>​        <img src="http://imgconvert.csdnimg.cn/aHR0cHM6Ly90eXBvcmEtb3NzLm9zcy1jbi1iZWlqaW5nLmFsaXl1bmNzLmNvbS9pbWFnZS0yMDIwMDgwNzEwMTAzNjk1Ny5wbmc?x-oss-process=image/format,png" alt="image-2021080502"></p>
<p>在文章的开始提到过它还支持网站查找，上面讲的有些不太清楚，详细点讲是支持网页的打开，以及特定网站内的搜索。先来看看网页的打开。</p>
<p><img src="http://imgconvert.csdnimg.cn/aHR0cHM6Ly90eXBvcmEtb3NzLm9zcy1jbi1iZWlqaW5nLmFsaXl1bmNzLmNvbS9pbWFnZS0yMDIwMDgwNzEwMTI1NzQ0NS5wbmc?x-oss-process=image/format,png" alt="image-20210806003"></p>
<p>可以看到，只要你在输入框内输入了一个网址，它就能自动识别，怎么样是不是很方便。再来看一下更方便的事情，比如，你现在想去google搜一下dalianpai 的其他信息，那么你只需要在在输入框内输入 g dalianpai 即可。</p>
<p><img src="http://imgconvert.csdnimg.cn/aHR0cHM6Ly90eXBvcmEtb3NzLm9zcy1jbi1iZWlqaW5nLmFsaXl1bmNzLmNvbS9pbWFnZS0yMDIwMDgwNzEwMTIyMzYxNC5wbmc?x-oss-process=image/format,png" alt="image-2021080600321"></p>
<p>bd 是触发关键词，中间是一个空格，后面再加上你所想搜索的内容即可，Wox 内置了多个网站搜索，下面我列举几个内置在 Wox 中网页搜索的例子。以 网站 + 触发关键字的形式。</p>
<ul>
<li><p>谷歌搜索 g</p>
</li>
<li><p>谷歌学术 sc</p>
</li>
<li><p>维基百科 wiki</p>
</li>
<li><p>Github github</p>
</li>
<li><p>百度 bd</p>
<p>哦，对了，这个 Wox 还支持使用命令行。而且它默认屏蔽 Windows 系统的 Win R 快捷键。如果想用命令行的小伙伴，直接使用 Win R 打开程序，然后输入命令行即可。不过你依然可以使用 Alt Space 之后再输入命令，不过这时候你就先需要输入 &gt; ，这是命令行的触发关键字</p>
<p><img src="http://imgconvert.csdnimg.cn/aHR0cHM6Ly90eXBvcmEtb3NzLm9zcy1jbi1iZWlqaW5nLmFsaXl1bmNzLmNvbS9pbWFnZS0yMDIwMDgwNzEwMTQyMjY5NC5wbmc?x-oss-process=image/format,png" alt="image-202108060321254"></p>
<p>怎么样？Wox 是不是很强大，着急去下载然后试试？</p>
</li>
</ul>
<p>​        WOX远不止这些功能，这只是罗列出了一部分，更多的功能可以去仔细探索</p>
<p>​        WOX下载地址：<a href="https://github.com/Wox-launcher/Wox/releases">https://github.com/Wox-launcher/Wox/releases</a></p>
<p>​        WOX官方文档：<a href="http://doc.getwox.com/">http://doc.getwox.com/</a></p>
]]></content>
      <categories>
        <category>实用软件</category>
      </categories>
      <tags>
        <tag>实用软件</tag>
        <tag>快捷办公</tag>
      </tags>
  </entry>
  <entry>
    <title>JAVA笔记day6</title>
    <url>/2021/09/03/java-bi-ji-day6/</url>
    <content><![CDATA[<h1 id="JAVA笔记-Day6"><a href="#JAVA笔记-Day6" class="headerlink" title="JAVA笔记-Day6"></a>JAVA笔记-Day6</h1><hr>
<h3 id="this关键字"><a href="#this关键字" class="headerlink" title="this关键字"></a>this关键字</h3><p>在JAVA基础中，this关键字是一个最重要的概念。使用this关键字可以完成以下的操作：</p>
<ul>
<li>调用类中的属性</li>
<li>调用类中的方法或构造方法</li>
<li>表示当前对象</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 	调用类中的属性</span></span><br><span class="line"><span class="comment">    调用类中的方法或构造方法</span></span><br><span class="line"><span class="comment">	表示当前对象:在方法被调用的过程中，哪个对象调用了方法，在方法内的this就表示谁</span></span><br><span class="line"><span class="comment">	类名.this来表示谁的对象：System.out.println(&quot;我是&quot;+Cat.this.getName()+&quot;,我现在&quot;+Cat.this.getAge()+&quot;岁,我爱吃鱼&quot;);</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="keyword">package</span> D06;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">D06</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</span><br><span class="line">		</span><br><span class="line">		Cat cat = <span class="keyword">new</span> Cat();</span><br><span class="line">		cat.setName(<span class="string">&quot;喵喵&quot;</span>);</span><br><span class="line">		cat.setAge(<span class="number">3</span>);</span><br><span class="line">		cat.eat();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span></span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">private</span> String name;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.name = name; 	<span class="comment">//this代表的是当前对象</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> name;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.age = age;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> age;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="comment">//在方法中使用this调用类中的其他方法或属性，this可以省略，this前面可以使用当前的类名.this</span></span><br><span class="line">		<span class="comment">//在后面的内部类只是中会涉及到</span></span><br><span class="line">		System.out.println(<span class="string">&quot;我是&quot;</span>+<span class="keyword">this</span>.getName()+<span class="string">&quot;,我现在&quot;</span>+<span class="keyword">this</span>.getAge()+<span class="string">&quot;岁,我爱吃鱼&quot;</span>);</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//System.out.println(&quot;我是&quot;+this.name+&quot;,我现在&quot;+this.age+&quot;岁,我爱吃鱼&quot;);</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">运行结果：我是喵喵,我现在<span class="number">3</span>岁,我爱吃鱼</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>JAVA笔记</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>面向对象编程语言</tag>
      </tags>
  </entry>
  <entry>
    <title>一篇关于博客的自述</title>
    <url>/2021/08/04/ni-hao-shi-jie/</url>
    <content><![CDATA[<h2 id="一篇关于博客的自述"><a href="#一篇关于博客的自述" class="headerlink" title="一篇关于博客的自述"></a>一篇关于博客的自述</h2><h4 id="你好-世界"><a href="#你好-世界" class="headerlink" title="你好 世界"></a>你好 世界</h4><p>​    你好 世界，作为本世纪的博客我想我应该做点什么</p>
<p>​    先来个自我介绍，大家好，我是一名JAVA开发的程序员，这是我人生第一次写博客，之前也曾听说过写博客是程序员最好的成长方式之一，因为各种原因或者说是惰性思想而没有开始，今晚是项目上线的时间，在等待测试验证的时间突然萌生了写博客的想法，那就开始吧。</p>
<p>​    第一篇呢，就先分享一下自己当程序员的感受吧。就个人而言，我觉得程序员是一个特别需要被认可的行业，希望自己被别人认可，也希望自己的代码被别人认可。每当自己一个字母一个字母亲手敲打出来的代码，实现了某个新的业务功能的时候，当自己的代码实现了功能，又很少出bug或者没有bug的时候，心里总是带有一种成就感和喜悦感的！尤其是自己用了新的思路或者新的办法解决问题的时候，恨不得告诉全世界自己的成长，但是呢，又怕别人说自己太过浮夸，就自己分享这份喜悦吧。所以有人说，程序员是孤独的，嗯，确实是这样。</p>
<p>​    同时，程序员也是焦虑的，迷茫的。会为了学不到东西，害怕没办法成长而焦虑；又会为了学什么技术，从什么入手而迷茫，如：不知道该先学jvm，还是先学多线程，或者先学设计模式和算法。既然没有人指路，那就自己闯闯呗。学一学自己感兴趣的，或者经常用到的，或者面试经常问到的。</p>
<p>​    于是，年前买了一门多线程的课，看了几章觉得受益匪浅，越看越起劲，然后过年放假，又因为去年可恶的新冠状病毒而导致的假期延长。已经玩了很久，也放松了很久了。直到上上周新加入一个项目组，开始了一些开发工作，思想才慢慢的被拉回正轨，意识到自己很久没有学习了，发现自己年前看过的知识点已经忘记的七七八八了。写这篇博客的一个目的也是为了促进一下自己的学习，也想试一下写博客，是否真的能让我学到的东西记得更深一些</p>
<p>​    我也会在博客发表一些关于自己的学习心得，供大家参考，希望大家都能变成自己所目标上的人物，不管是前端也好，后端也罢，总有一款你喜欢的。</p>
<p>​    大家可以一起学习，一起进步</p>
]]></content>
      <categories>
        <category>文章</category>
      </categories>
      <tags>
        <tag>博客自述</tag>
      </tags>
  </entry>
  <entry>
    <title>关于自建博客的报告</title>
    <url>/2021/08/05/guan-yu-zi-jian-bo-ke-de-bao-gao/</url>
    <content><![CDATA[<h1 id="关于自建博客的概述"><a href="#关于自建博客的概述" class="headerlink" title="关于自建博客的概述"></a>关于自建博客的概述</h1><hr>
<h4 id="一、着手准备"><a href="#一、着手准备" class="headerlink" title="一、着手准备"></a>一、着手准备</h4><p>​    这个博客我从2021.08.02下午六点还是动手搭建，刚开始我的想法是在Gitee找个大佬的PHP手撕博客上传到自己的服务器，找了很多不是不会用就是文件很大，都知道上传FTP的速度不是很快。再加上要配置什么数据库啥啥啥静态public啥啥啥的也比较麻烦，所以我干脆放弃，寻找了其他方法，后来发现了hexo这个玩意儿，基于node.js的玩意儿，就开始去琢磨琢磨。</p>
<h4 id="二、准备过程"><a href="#二、准备过程" class="headerlink" title="二、准备过程"></a>二、准备过程</h4><p>​    查阅了大量资料和视频之后得知hexo是基于node.js的，所以去官网下载了node.js，因为在不是在工作室，而是放假的时候在家里搭建的，家里电脑的操作系统是win7的，最新版的只支持win8及更高，所以又去找老版[其实版本新或老无影响，只是当时折腾了一会儿=W=].</p>
<p>​    如果大家也想搭建的话在这里给大家推荐程序羊的视频，讲解得很仔细，很有条理，玩意最后还是不会可以联系我，顶部关于我里面有我的个人信息。</p>
<p>​    视频地址: <a href="https://www.bilibili.com/video/BV1Yb411a7ty?from=search&amp;seid=12214169833465401234">https://www.bilibili.com/video/BV1Yb411a7ty?from=search&amp;seid=12214169833465401234</a></p>
<p>​    操作步骤基本就是：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="code">		1.现在node.js并安装</span></span><br><span class="line"><span class="code"></span></span><br><span class="line">​		2.安装cnpm淘宝云镜像(具体原因我就不说了，视频里有)</span><br><span class="line"></span><br><span class="line">​		3.安装hexo.</span><br><span class="line"></span><br><span class="line">​		4.配置hexo</span><br><span class="line"></span><br><span class="line">​		5.部署至github</span><br></pre></td></tr></table></figure>

<h4 id="三、个人心得"><a href="#三、个人心得" class="headerlink" title="三、个人心得"></a>三、个人心得</h4><p>​    其实很多事情看起来很复杂，刚开始做的时候很多都不懂，照葫芦画瓢都画不出来，但是只要坚持下去，不停地查阅资料，总会完成的。</p>
<p>​    就像这次搭建博客，当时看了不下于十篇文章，五个视频，依然不会，后来慢慢琢磨琢磨就搞成功了。</p>
<h4 id="四、结尾"><a href="#四、结尾" class="headerlink" title="四、结尾"></a>四、结尾</h4><p>​    好了，本章文章就到此结束了，希望大家也能成功搭建好自己的博客。</p>
<hr>
]]></content>
      <categories>
        <category>文章</category>
      </categories>
      <tags>
        <tag>博客来源</tag>
      </tags>
  </entry>
  <entry>
    <title>福利-百度文库免费下载</title>
    <url>/2021/08/12/fu-li-bai-du-wen-ku-mian-fei-xia-zai/</url>
    <content><![CDATA[<h1 id="百度文库免费下载"><a href="#百度文库免费下载" class="headerlink" title="百度文库免费下载"></a>百度文库免费下载</h1><hr>
<p>​    前几天有朋友问我如何下载百度文库里面的资料，我叫他把链接发我， 我便帮他下载好了，心想每次都帮他下载，这样显得我有点呆=W=，便把方法教给他，其实方法很简单，当然我这可能不是最好用的方法，如果大家有什么更好的方法可以在下方评论，文件的下载链接我会放在文章视频结尾。</p>
<p>​    首先我们下载一个软件，叫做冰点下载，如图：<a href="https://imgtu.com/i/f0yFGn"><img src="https://z3.ax1x.com/2021/08/12/f0yFGn.png" alt="f0yFGn.png"></a></p>
<p>下载完成之后只需要将百度文库的链接复制在上面的文本框中点击下载就可以了，如图：<a href="https://imgtu.com/i/f0yYqO"><img src="https://z3.ax1x.com/2021/08/12/f0yYqO.png" alt="f0yYqO.png"></a></p>
<p>下载完成之后在左边你的已下载里面就可以看到刚才下载的文件了，我们右键刚才下载的文件，点击打开保存文件夹就可以看到下载的文件了。<a href="https://imgtu.com/i/f06lTg"><img src="https://z3.ax1x.com/2021/08/12/f06lTg.png" alt="f06lTg.png"></a></p>
<p>​    最后就是软件的下载地址了：<a href="https://mnxt.lanzoui.com/iIn8hsjvepc">https://mnxt.lanzoui.com/iIn8hsjvepc</a></p>
<p>​    是不是很好用呢，如果你觉得文章不错的话，可以分享给你的好朋友们喔。</p>
]]></content>
      <categories>
        <category>实用软件</category>
      </categories>
      <tags>
        <tag>实用软件</tag>
      </tags>
  </entry>
  <entry>
    <title>2.炫酷CSS</title>
    <url>/2021/08/05/2-xuan-ku-css/</url>
    <content><![CDATA[<h2 id="HTML与CSS的关系"><a href="#HTML与CSS的关系" class="headerlink" title="HTML与CSS的关系"></a>HTML与CSS的关系</h2><p> CSS（Cascade Style Sheets）层叠样式表, 是一种用来表现HTML文件样式的计算机语言。</p>
<p> CSS 目前最新版本为 CSS3，是能够真正做到网页表现与内容分离的一种样式设计语言。相对于传统<br>HTML 的表现而言，CSS 能够对网页中的对象的位置排版进行像素级的精确控制，支持几乎所有的字体<br>字号样式，拥有对网页对象和模型样式编辑的能力，并能够进行初步交互设计，是目前基于文本展示最<br>优秀的表现设计语言。CSS能够根据不同使用者的理解能力，简化或者优化写法，针对各类人群，有较<br>强的易读性。</p>
<p> CSS是用来美化网页用的，没有网页则CSS毫无用处，所以CSS需要依赖HTML展示其功能。</p>
<h2 id="CSS语法格式"><a href="#CSS语法格式" class="headerlink" title="CSS语法格式"></a>CSS语法格式</h2><h3 id="2-1-注释"><a href="#2-1-注释" class="headerlink" title="2.1. 注释"></a>2.1. 注释</h3><p> 可以将注释插入 CSS代码中，这样可以提高其可读性，使代码更易被人理解。浏览器会忽略注释，<br>也不会显示它们。</p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">COPY</span><span class="comment">/* 这里的内容就是注释 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">	也可以这样多行注释</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<h3 id="2-2-行内式"><a href="#2-2-行内式" class="headerlink" title="2.2. 行内式"></a>2.2. 行内式</h3><p> 行内式将样式定义在具体html元素的style属性中。以行内式写的CSS耦合度高，只适用于当前元<br>素，在设定某个元素的样式时比较常用。但是这种写法会使得页面非常杂乱无章，真正开发中实际上是<br>使用嵌入式或引入外联样式文件的方式来进行渲染的。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">COPY<span class="comment">&lt;!-- 设置指定的div的宽度和高度，背景色为黑色 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width:200px;height:300px;background:black;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-3-嵌入式"><a href="#2-3-嵌入式" class="headerlink" title="2.3. 嵌入式"></a>2.3. 嵌入式</h3><p> 嵌入式通过在html页面内容开辟一段属于css的代码区域，通常做法为在 <code>&lt; head&gt;</code> 标签中嵌套<code>&lt;style&gt;</code> 标签，在 <code>&lt;style&gt;</code> 中通过==选择器==的方式调用指定的元素并设置相关 CSS。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">COPY选择器名称 &#123;</span><br><span class="line">    属性:属性值;</span><br><span class="line">    ...</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">    <span class="comment">/* 使用元素选择器给所有div设置宽度和高度，背景色为黑色 */</span></span></span><br><span class="line"><span class="css">    <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="css">        <span class="attribute">width</span>:<span class="number">200px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">height</span>:<span class="number">300px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">background</span>:black;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>注意：</strong></p>
<ul>
<li>css 声明要以分号 ; 结束，声明以 {} 括起来</li>
<li>建议一行书写一个属性</li>
<li>若值为若干单词，则要给值加引号，如<code>font-family: &quot;agency fb&quot;</code> ;</li>
</ul>
<h3 id="2-4-引入外联样式文件"><a href="#2-4-引入外联样式文件" class="headerlink" title="2.4. 引入外联样式文件"></a>2.4. 引入外联样式文件</h3><p> 在实际开发当中，很多时候都使用引入外联样式文件，这种形式可以使html页面更加清晰，而且可<br>以达到更好的重用效果。</p>
<p>style.css</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">COPY<span class="comment">/* 使用元素选择器给所有div设置宽度和高度，背景色为黑色 */</span></span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">background</span>:black;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>index.html</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">COPY&lt;link <span class="attribute">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attribute">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attribute">href</span>=<span class="string">&quot;style.css&quot;</span> /&gt;</span><br></pre></td></tr></table></figure>

<p> <code>rel</code> : 规定当前文档与被链接文档之间的关系。<br>​ <code>stylesheet</code> : 文档的外部样式表。<br>​ 很多时候，大量的 HTML 页面使用了同一个CSS。那么就可以将这些 CSS 样式保存在一个单独<br>的 <code>.css</code> 文件中，然后通过 <code>&lt;link /&gt;</code> 元素去引入它。</p>
<h2 id="CSS选择器"><a href="#CSS选择器" class="headerlink" title="CSS选择器"></a>CSS选择器</h2><p> 在 CSS 中，选择器是一种模式，用于选择需要添加样式的元素。<br>​ CSS 选择器有很多，掌握常用的即可。</p>
<h3 id="3-1-基本选择器"><a href="#3-1-基本选择器" class="headerlink" title="3.1. 基本选择器"></a>3.1. 基本选择器</h3><h4 id="3-1-1-通用选择器"><a href="#3-1-1-通用选择器" class="headerlink" title="3.1.1. * 通用选择器"></a>3.1.1. * 通用选择器</h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">COPY<span class="comment">/* 初始所有元素的内外间距为0 */</span></span><br><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="3-1-2-元素选择器"><a href="#3-1-2-元素选择器" class="headerlink" title="3.1.2. 元素选择器"></a>3.1.2. 元素选择器</h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">COPY选择器名称 &#123;</span><br><span class="line">    属性:属性值;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 使用元素选择器给所有div设置宽度和高度，背景色为黑色 */</span></span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">background</span>:black;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="3-1-3-类选择器"><a href="#3-1-3-类选择器" class="headerlink" title="3.1.3. . 类选择器"></a>3.1.3. . 类选择器</h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">COPY<span class="selector-class">.class</span>属性值 &#123;</span><br><span class="line">    属性:属性值;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 使用类选择器给所有class=&quot;dv&quot;的元素设置宽度和高度，背景色为黑色 */</span></span><br><span class="line"><span class="selector-class">.dv</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">background</span>:black;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="3-1-4-id选择器"><a href="#3-1-4-id选择器" class="headerlink" title="3.1.4. # id选择器"></a>3.1.4. # id选择器</h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">COPY<span class="selector-id">#id</span>属性值 &#123;    </span><br><span class="line">    属性:属性值;    </span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 使用id选择器给id=&quot;dv&quot;的元素设置宽度和高度，背景色为黑色 */</span></span><br><span class="line"><span class="selector-id">#dv</span> &#123;    </span><br><span class="line">    <span class="attribute">width</span>:<span class="number">200px</span>;    </span><br><span class="line">    <span class="attribute">height</span>:<span class="number">300px</span>;    </span><br><span class="line">    <span class="attribute">background</span>:black;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="3-1-5-分组选择器"><a href="#3-1-5-分组选择器" class="headerlink" title="3.1.5. 分组选择器"></a>3.1.5. 分组选择器</h4><p> 当几个元素样式属性一样时，可以共同调用一个声明，元素之间用逗号分隔。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">COPY选择器<span class="number">1</span>,选择器<span class="number">2</span>, ...&#123;    </span><br><span class="line">    属性:属性值;    </span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*  使用元素选择器给所有p元素    </span></span><br><span class="line"><span class="comment">    使用id选择器给id=&quot;name&quot;的元素    </span></span><br><span class="line"><span class="comment">    设置字体颜色为红色，字体大小为20px</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-tag">p</span>,<span class="selector-id">#name</span> &#123;    </span><br><span class="line">    <span class="attribute">color</span>: red;    </span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="3-2-2、组合选择器"><a href="#3-2-2、组合选择器" class="headerlink" title="3.2. 2、组合选择器"></a>3.2. 2、组合选择器</h4><p> CSS 组合选择器说明了两个选择器直接的关系。 CSS组合选择符包括各种简单选择符的组合方式。</p>
<h4 id="3-2-1-后代选择器（派生选择器）"><a href="#3-2-1-后代选择器（派生选择器）" class="headerlink" title="3.2.1. 后代选择器（派生选择器）"></a>3.2.1. 后代选择器（派生选择器）</h4><p> 用于选择指定标签元素下的后辈元素，以空格分隔。</p>
<figure class="highlight dts"><table><tr><td class="code"><pre><span class="line">COPY父元素 子元素(可以继续获取子元素的子元素) &#123;    </span><br><span class="line">    属性:属性值;    </span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*    使用类选择器给所有class=&quot;food&quot;的元素    的所有子元素li设置蓝色的边框*/</span></span><br><span class="line">.food <span class="class">li </span>&#123;    </span><br><span class="line"><span class="symbol">border:</span> <span class="number">1</span>px solid blue;&#125;</span><br><span class="line"><span class="comment">/*  使用类选择器给所有class=&quot;food&quot;的元素</span></span><br><span class="line"><span class="comment">	的所有子元素li</span></span><br><span class="line"><span class="comment">	的所有子元素ul</span></span><br><span class="line"><span class="comment">	的所有子元素li设置红色的边框</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">.food li ul <span class="class">li </span>&#123;    </span><br><span class="line"><span class="symbol">	border:</span> <span class="number">1</span>px solid red;</span><br><span class="line">&#125;</span><br><span class="line">COPY<span class="params">&lt;h1&gt;</span>食物<span class="params">&lt;/h1&gt;</span></span><br><span class="line"><span class="params">&lt;ul class=&quot;food&quot;&gt;</span></span><br><span class="line">	<span class="params">&lt;li&gt;</span>水果 <span class="params">&lt;ul&gt;</span></span><br><span class="line">			<span class="params">&lt;li&gt;</span>香蕉<span class="params">&lt;/li&gt;</span></span><br><span class="line">			<span class="params">&lt;li&gt;</span>苹果<span class="params">&lt;/li&gt;</span></span><br><span class="line">			<span class="params">&lt;li&gt;</span>梨<span class="params">&lt;/li&gt;</span></span><br><span class="line">		<span class="params">&lt;/ul&gt;</span></span><br><span class="line">	<span class="params">&lt;/li&gt;</span></span><br><span class="line">	<span class="params">&lt;li&gt;</span>蔬菜 <span class="params">&lt;ul&gt;</span></span><br><span class="line">			<span class="params">&lt;li&gt;</span>白菜<span class="params">&lt;/li&gt;</span></span><br><span class="line">			<span class="params">&lt;li&gt;</span>油菜<span class="params">&lt;/li&gt;</span></span><br><span class="line">			<span class="params">&lt;li&gt;</span>卷心菜<span class="params">&lt;/li&gt;</span></span><br><span class="line">		<span class="params">&lt;/ul&gt;</span></span><br><span class="line">	<span class="params">&lt;/li&gt;</span></span><br><span class="line"><span class="params">&lt;/ul&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="CSS常用属性"><a href="#CSS常用属性" class="headerlink" title="CSS常用属性"></a>CSS常用属性</h2><h3 id="4-1-背景"><a href="#4-1-背景" class="headerlink" title="4.1. 背景"></a>4.1. 背景</h3><p> 背景属性用于定义HTML元素的背景效果。</p>
<h4 id="4-1-1-background-color"><a href="#4-1-1-background-color" class="headerlink" title="4.1.1. background-color"></a>4.1.1. background-color</h4><p> 设置元素的背景颜色。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">COPY<span class="comment">/*    设置body元素的背景色为灰色    两种方式效果一致*/</span></span><br><span class="line"><span class="selector-tag">body</span> &#123;    </span><br><span class="line">	<span class="attribute">background-color</span>:gray;    </span><br><span class="line"><span class="comment">/* 另一种方式 */</span>    </span><br><span class="line">	<span class="attribute">background</span>:gray;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="4-1-2-background-image"><a href="#4-1-2-background-image" class="headerlink" title="4.1.2. background-image"></a>4.1.2. background-image</h4><p> 设置元素的背景图像，默认情况下，背景图像进行平铺重复显示，以覆盖整个元素实体。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">COPY<span class="comment">/*    设置body元素的背景为图片    两种方式效果一致*/</span></span><br><span class="line"><span class="selector-tag">body</span> &#123;    </span><br><span class="line">	<span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">img/Daniel_Wu.jpg</span>);    </span><br><span class="line"><span class="comment">/* 另一种方式 */</span>    </span><br><span class="line">	<span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">img/Daniel_Wu.jpg</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="4-1-3-background-repeat"><a href="#4-1-3-background-repeat" class="headerlink" title="4.1.3. background-repeat"></a>4.1.3. background-repeat</h4><p> 设置是否重复图像及如何重复背景图像。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">COPY<span class="comment">/*    设置body元素的背景为图片，图片不重复显示    两种方式效果一致*/</span></span><br><span class="line"><span class="selector-tag">body</span> &#123;    </span><br><span class="line">	<span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">img/Daniel_Wu.jpg</span>);    </span><br><span class="line">	<span class="attribute">background-repeat</span>: no-repeat;    </span><br><span class="line"><span class="comment">/* 另一种方式 */</span></span><br><span class="line">	<span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">img/Daniel_Wu.jpg</span>) no-repeat;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p> <code>background-repeat</code> 可选的值。</p>
<table>
<thead>
<tr>
<th>值</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>repeat</td>
<td>默认。背景图像将在垂直和水平方向重复</td>
</tr>
<tr>
<td>no-repeat</td>
<td>背景图像仅显示一次</td>
</tr>
<tr>
<td>repeat-x</td>
<td>背景图像水平方向重复</td>
</tr>
<tr>
<td>repeat-y</td>
<td>背景图像垂直方向重复</td>
</tr>
</tbody></table>
<h3 id="4-2-文本"><a href="#4-2-文本" class="headerlink" title="4.2. 文本"></a>4.2. 文本</h3><h4 id="4-2-1-color"><a href="#4-2-1-color" class="headerlink" title="4.2.1. color"></a>4.2.1. color</h4><p> 设置文本的颜色。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">COPY<span class="comment">/* 字体颜色蓝色 */</span></span><br><span class="line"><span class="selector-tag">body</span> &#123;	</span><br><span class="line">	<span class="attribute">color</span>:blue;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 字体颜色绿色 */</span></span><br><span class="line"><span class="selector-tag">h1</span> &#123;	</span><br><span class="line">	<span class="attribute">color</span>:<span class="number">#00ff00</span>;&#125;</span><br><span class="line"><span class="comment">/* 字体颜色红色 */</span></span><br><span class="line"><span class="selector-tag">h2</span> &#123;	</span><br><span class="line">	<span class="attribute">color</span>:<span class="built_in">rgb</span>(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="4-2-2-text-align"><a href="#4-2-2-text-align" class="headerlink" title="4.2.2. text-align"></a>4.2.2. text-align</h4><p> 设置文本对齐方式，center（居中），lex（左对齐），right（右对齐）。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">COPYbody &#123;	</span><br><span class="line">	<span class="attribute">text-align</span>:center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="4-2-3-text-decoration"><a href="#4-2-3-text-decoration" class="headerlink" title="4.2.3. text-decoration"></a>4.2.3. text-decoration</h4><p> 规定添加到文本的修饰，属性值：none、underline、overline、line-through。</p>
<ul>
<li>underline：对文本添加下划线。</li>
<li>overline：对文本添加上划线。</li>
<li>line-through：对文本添加中划线。</li>
<li>none：关闭原本应用到元素上的所有横线样式。</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">COPYh3 &#123;	</span><br><span class="line">	<span class="attribute">text-decoration</span>:underline;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="4-2-4-text-indent"><a href="#4-2-4-text-indent" class="headerlink" title="4.2.4. text-indent"></a>4.2.4. text-indent</h4><p> 设置文本首行缩进。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">COPYp &#123;	</span><br><span class="line">	<span class="attribute">text-indent</span>: <span class="number">2em</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="4-3-字体"><a href="#4-3-字体" class="headerlink" title="4.3. 字体"></a>4.3. 字体</h3><h4 id="4-3-1-font-family"><a href="#4-3-1-font-family" class="headerlink" title="4.3.1. font-family"></a>4.3.1. font-family</h4><p> 文本字体，该属性设置文本的字体。<br>​ <code>font-family</code> 属性应该设置几个字体名称作为一种”后备”机制，如果浏览器不支持第一种字体，<br>他将尝试下一种字体，所以尽量将不常见的字体靠前，将最常见的字体放置在最后，作为替补。<br><strong>注意：</strong></p>
<ul>
<li>只有当字体名中含有空格或符号或汉字时，才需要在font-family声明中加引号：</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">COPYbody &#123;	</span><br><span class="line">	<span class="attribute">font-family</span>: <span class="string">&quot;arial black&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>多个字体系列是用一个逗号分隔指明</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">COPY<span class="comment">/* 靠前的先生效 */</span></span><br><span class="line"><span class="selector-tag">p</span> &#123;	</span><br><span class="line">	<span class="attribute">font-family</span>: <span class="string">&quot;微软雅黑&quot;</span>, <span class="string">&quot;黑体&quot;</span>, <span class="string">&quot;agency fb&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="4-3-2-font-size"><a href="#4-3-2-font-size" class="headerlink" title="4.3.2. font-size"></a>4.3.2. font-size</h4><p> 文本大小</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">COPY<span class="comment">/* 字体大小50px */</span></span><br><span class="line"><span class="selector-tag">body</span> &#123;	</span><br><span class="line">	<span class="attribute">font-size</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 字体大小25px */</span></span><br><span class="line"><span class="selector-id">#span1</span> &#123;	</span><br><span class="line">	<span class="attribute">font-size</span>: <span class="number">25px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="4-3-3-font-weight"><a href="#4-3-3-font-weight" class="headerlink" title="4.3.3. font-weight"></a>4.3.3. font-weight</h4><p> 字体加粗，该属性设置文本的粗细。100 ~ 900：为字体指定了 9 级加粗度。<br>​ <code>font-weight: blod;</code> 可以将文本设置为粗体。<br>​ 400 等价于 normal；<br>​ 700 等价于 bold。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">COPYbody &#123;    </span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">100</span>;    </span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">900</span>;    </span><br><span class="line"><span class="comment">/* 下面两种方式效果一致 */</span>    </span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">700</span>;    </span><br><span class="line">    <span class="attribute">font-weight</span>: blod;    </span><br><span class="line"><span class="comment">/* 下面两种方式效果一致 */</span>    </span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">400</span>;    </span><br><span class="line">    <span class="attribute">font-weight</span>: normal;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="4-4-列表"><a href="#4-4-列表" class="headerlink" title="4.4. 列表"></a>4.4. 列表</h3><h4 id="4-4-1-list-style"><a href="#4-4-1-list-style" class="headerlink" title="4.4.1. list-style"></a>4.4.1. list-style</h4><p> 设置列表样式， list-style 可选的值。</p>
<table>
<thead>
<tr>
<th>值</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>none</td>
<td>无标记</td>
</tr>
<tr>
<td>disc</td>
<td>默认，标记是实心圆</td>
</tr>
<tr>
<td>circle</td>
<td>标记是空心圆</td>
</tr>
<tr>
<td>square</td>
<td>标记是实心方块</td>
</tr>
<tr>
<td>decimal</td>
<td>标记是数字</td>
</tr>
<tr>
<td>decimal-leading-zero</td>
<td>标记是0开头数字(01, 02, 03…)</td>
</tr>
<tr>
<td>lower-roman</td>
<td>标记是小写罗马数字(ⅰ, ⅱ, ⅲ,…)</td>
</tr>
<tr>
<td>upper-roman</td>
<td>标记大写罗马数字(Ⅰ, Ⅱ, Ⅲ,…)</td>
</tr>
<tr>
<td>lower-alpha</td>
<td>标记是小写英文字母(a, b, c,…)</td>
</tr>
<tr>
<td>upper-alpha</td>
<td>标记是大写英文字母(A, B, C,…)</td>
</tr>
</tbody></table>
<figure class="highlight dsconfig"><table><tr><td class="code"><pre><span class="line"><span class="string">COPY</span>/* 列表样式无标记 */</span><br><span class="line">.<span class="string">food</span> <span class="string">li</span> <span class="string">ul</span> <span class="string">li</span> &#123;	</span><br><span class="line">	<span class="built_in">list-style:</span> <span class="string">none</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="4-5-对齐方式"><a href="#4-5-对齐方式" class="headerlink" title="4.5. 对齐方式"></a>4.5. 对齐方式</h3><h4 id="4-5-1-text-align"><a href="#4-5-1-text-align" class="headerlink" title="4.5.1. text-align"></a>4.5.1. text-align</h4><p> 规定元素中的文本的水平对齐方式。属性值如下。</p>
<table>
<thead>
<tr>
<th>值</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>lex</td>
<td>默认值，文本排列到左边</td>
</tr>
<tr>
<td>right</td>
<td>文本排列到右边</td>
</tr>
<tr>
<td>center</td>
<td>文本排列到中间</td>
</tr>
<tr>
<td>justify</td>
<td>文本两端对齐</td>
</tr>
</tbody></table>
<h4 id="4-5-2-display"><a href="#4-5-2-display" class="headerlink" title="4.5.2. display"></a>4.5.2. display</h4><p> display属性用于定义元素的显示类型。</p>
<p> 属性值如下。</p>
<table>
<thead>
<tr>
<th>值</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>none</td>
<td>此元素不会被显示</td>
</tr>
<tr>
<td>block</td>
<td>此元素将被显示为块级元素，此元素前后会带有换行符</td>
</tr>
<tr>
<td>inline</td>
<td>此元素被显示为内联元素，元素前后没有换行符</td>
</tr>
<tr>
<td>inline-block</td>
<td>行内块元素，li中使用会变为类似导航的效果</td>
</tr>
</tbody></table>
<h3 id="4-6-盒子模型"><a href="#4-6-盒子模型" class="headerlink" title="4.6. 盒子模型"></a>4.6. 盒子模型</h3><p> border、padding、margin三个属性构成了盒子模型。</p>
<p><img src="https://dao-1306038680.cos.ap-shanghai.myqcloud.com/img/image-20210623075716875.png" alt="image-20210623075716875"></p>
<h4 id="4-6-1-border"><a href="#4-6-1-border" class="headerlink" title="4.6.1. border"></a>4.6.1. border</h4><p> 设置所有的边框属性。</p>
<p> 1.可同时设置边框的宽度、样式、颜色</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">COPY<span class="comment">/* 设置边框和宽高 */</span></span><br><span class="line"><span class="selector-tag">div</span>&#123;    </span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid black;<span class="comment">/* 设置粗细为1px的黑色实心线边框 */</span>    </span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;<span class="comment">/* 宽 */</span>    </span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;<span class="comment">/* 高 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p> 2.使用border-width、border-style、border-color单独设置</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">COPYdiv &#123;    </span><br><span class="line">	<span class="attribute">border-width</span>: <span class="number">1px</span>;<span class="comment">/* 粗细1px */</span>    </span><br><span class="line">	<span class="attribute">border-style</span>: solid;<span class="comment">/* 实心线 */</span>    </span><br><span class="line">	<span class="attribute">border-color</span>: black;<span class="comment">/* 黑色 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p> <code>border-style</code> 的属性</p>
<table>
<thead>
<tr>
<th>值</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>none</td>
<td>无边框</td>
</tr>
<tr>
<td>dotted</td>
<td>点状边框</td>
</tr>
<tr>
<td>dashed</td>
<td>虚线边框</td>
</tr>
<tr>
<td>solid</td>
<td>实心线边框</td>
</tr>
<tr>
<td>double</td>
<td>双实线边框</td>
</tr>
</tbody></table>
<h4 id="4-6-2-padding"><a href="#4-6-2-padding" class="headerlink" title="4.6.2. padding"></a>4.6.2. padding</h4><p> 设置元素所有内边距的宽度，默认按照上右下左的顺序设定，或者设置各边上内边距的宽度。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">COPY<span class="comment">/* 设置上右下左的内边距 */</span></span><br><span class="line"><span class="selector-tag">div</span> &#123;	</span><br><span class="line">	<span class="attribute">padding</span>:<span class="number">10px</span> <span class="number">5px</span> <span class="number">15px</span> <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p> 单独设置各边的内边距： <code>padding-top</code> 、 <code>padding-left</code> 、 <code>padding-bottom</code> 、 <code>paddingrigh</code> 。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">COPY<span class="comment">/* 设置上右下左的内边距 */</span></span><br><span class="line"><span class="selector-tag">div</span> &#123;    </span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">10px</span>;    </span><br><span class="line">    <span class="attribute">padding-left</span>: <span class="number">5px</span>;    </span><br><span class="line">    <span class="attribute">padding-bottom</span>: <span class="number">15px</span>;    </span><br><span class="line">    <span class="attribute">padding-right</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="4-6-3-margin"><a href="#4-6-3-margin" class="headerlink" title="4.6.3. margin"></a>4.6.3. margin</h4><p> 设置一个元素所有外边距的宽度，或者设置各边上外边距的宽度。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">COPY<span class="comment">/* 设置上右下左的外边距 */</span></span><br><span class="line"><span class="selector-tag">div</span> &#123;	</span><br><span class="line">	<span class="attribute">margin</span>:<span class="number">10px</span> <span class="number">5px</span> <span class="number">15px</span> <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p> 单独设置各边的外边距： <code>margin-top</code> 、 <code>margin-left</code> 、 <code>margin-bottom</code> 、 <code>margin-right</code> 。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">COPY<span class="comment">/* 设置上右下左的外边距 */</span></span><br><span class="line"><span class="selector-tag">div</span> &#123;    </span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">10px</span>;    </span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">5px</span>;    </span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">15px</span>;    </span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p> auto 可以设置居中效果。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">COPYdiv &#123;	<span class="attribute">margin</span>: <span class="number">0px</span> auto;&#125;</span><br></pre></td></tr></table></figure>

<p> auto：自动，可以理解为居中的意思，浏览器自动计算外边距。</p>
<p> <code>margin: 0px auto;</code> <code>0</code> 或者 <code>0px</code> 表示上下间距为0px，auto表示左右外边距自动计算，表现为居中状态。</p>
<p> 测试</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">COPY<span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">			<span class="selector-class">.a_div</span> &#123;</span></span><br><span class="line"><span class="css">				<span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">border</span>: <span class="number">1px</span> solid red;</span></span><br><span class="line"><span class="css">				<span class="comment">/* 设置上右下左的外边距 */</span></span></span><br><span class="line"><span class="css">				<span class="attribute">margin</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">			&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">			<span class="selector-class">.b_div</span> &#123;</span></span><br><span class="line"><span class="css">				<span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">background</span>: yellow;</span></span><br><span class="line"><span class="css">				<span class="comment">/* 设置左外边距 */</span></span></span><br><span class="line"><span class="css">				<span class="attribute">margin-left</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="css">				<span class="comment">/* 设置上外边距 */</span></span></span><br><span class="line"><span class="css">				<span class="attribute">margin-top</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="css">				<span class="comment">/* 设置上右下左的内边距 */</span></span></span><br><span class="line"><span class="css">				<span class="attribute">padding</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="css">			&#125;</span></span><br><span class="line"><span class="css">		</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;a_div&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;b_div&quot;</span>&gt;</span>你好<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="5-CSS定位和浮动"><a href="#5-CSS定位和浮动" class="headerlink" title="5.CSS定位和浮动"></a>5.CSS定位和浮动</h3><p> CSS 定位 (positioning) 属性允许你对元素进行定位 ，定位的基本思想很简单，它允许你定义元素框<br>相对于其正常位置应该出现的位置，或者相对于父元素、另一个元素甚至浏览器窗口本身的位置。<br>​ CSS 有三种基本的定位机制：普通流、浮动和定位<br>​ 除非专门指定，否则所有框都在普通流中定位，即普通流中的元素的位置由元素在HTML 中的位置<br>决定浏览器在读取 HTML 源代码的时候是根据元素在代码出现的顺序读取，最终元素的呈现方式是依据<br>元素的盒子模型来决定的。行内元素是从左到右，块状元素是从上到下。默认的书写方式即是普通流。</p>
<h4 id="5-1-定位position"><a href="#5-1-定位position" class="headerlink" title="5.1. 定位position"></a>5.1. 定位position</h4><p> 通过使用 position 属性，我们可以选择 4 种不同类型的定位，这会影响元素框生成的方式。</p>
<table>
<thead>
<tr>
<th>值</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>static</td>
<td>默认值，普通流</td>
</tr>
<tr>
<td>relative</td>
<td>相对定位，其子元素如果使用定位相对于它的位置改变</td>
</tr>
<tr>
<td>absolute</td>
<td>绝对定位，相对于其父元素的位置作为参照物</td>
</tr>
<tr>
<td>fixed</td>
<td>固定定位，相对于浏览器窗口作为参照物</td>
</tr>
</tbody></table>
<p> static：默认值，普通流（忽略 <code>left</code> ， <code>top</code> ， <code>right</code> ， <code>bottom</code> 或者 <code>z-index</code> 声明）。<br>​ relative：生成相对定位的元素，相对于其正常位置进行定位。元素的位置通过 <code>left</code> ， <code>top</code> ，<br><code>right</code> ， <code>bottom</code> 属性进行改变，其子元素如果使用定位相对于它的位置改变。<br>​ absolute：生成绝对定位的元素，相对于其第一个父元素进行定位，如果父元素没有设置<br><code>0</code>relative 属性，则向上继续寻找，直到body元素。元素的位置通过 <code>left</code> ， <code>top</code> ， <code>right</code> ，<br><code>bottom</code> 属性进行规定。<br>​ fixed：生成绝对定位的元素，相对于浏览器窗口进行定位。元素的位置通过 <code>left</code> ， <code>top</code> ，<br><code>right</code> ， <code>bottom</code> 属性进行规定。</p>
<h4 id="5-2-浮动float"><a href="#5-2-浮动float" class="headerlink" title="5.2. 浮动float"></a>5.2. 浮动float</h4><p> float 的属性值有 <code>none</code> 、 <code>left</code> 、 <code>right</code> 。</p>
<table>
<thead>
<tr>
<th>值</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>none</td>
<td>默认值，不浮动</td>
</tr>
<tr>
<td>lex</td>
<td>左浮动，元素从左边开始并列显示为一行</td>
</tr>
<tr>
<td>right</td>
<td>右浮动，元素从右边开始并列显示为一行</td>
</tr>
</tbody></table>
<h4 id="5-3-测试"><a href="#5-3-测试" class="headerlink" title="5.3. 测试"></a>5.3. 测试</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">COPY<span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>CSS定位和浮动<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">			<span class="selector-class">.a_div</span> &#123;</span></span><br><span class="line"><span class="css">				<span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">background</span>: black;</span></span><br><span class="line"><span class="css">				<span class="comment">/* 相对定位，其子元素如果使用定位相对于它的位置改变 */</span></span></span><br><span class="line"><span class="css">				<span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="css">				<span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="css">			&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">			<span class="selector-class">.b_div</span> &#123;</span></span><br><span class="line"><span class="css">				<span class="attribute">width</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">background</span>: yellow;</span></span><br><span class="line"><span class="css">				<span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="css">绝对定位，相对于其第一个父元素进行定位，</span></span></span><br><span class="line"><span class="comment"><span class="css">如果父元素没有设置relative属性，则向上继续寻找，直到body元素</span></span></span><br><span class="line"><span class="comment"><span class="css">*/</span></span></span><br><span class="line"><span class="css">				<span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">				<span class="attribute">top</span>: <span class="number">0px</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">left</span>: <span class="number">0px</span>;</span></span><br><span class="line"><span class="css">			&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">			<span class="selector-class">.c_div</span> &#123;</span></span><br><span class="line"><span class="css">				<span class="attribute">width</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="css">				<span class="comment">/* 相对浏览器绝对定位 */</span></span></span><br><span class="line"><span class="css">				<span class="attribute">position</span>: fixed;</span></span><br><span class="line"><span class="css">				<span class="attribute">bottom</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">right</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">background</span>: blue;</span></span><br><span class="line"><span class="css">			&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">			<span class="selector-id">#div1</span> &#123;</span></span><br><span class="line"><span class="css">				<span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">background</span>: red;</span></span><br><span class="line"><span class="css">				<span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="css">				<span class="comment">/* 左浮动 */</span></span></span><br><span class="line"><span class="css">			&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">			<span class="selector-id">#div2</span> &#123;</span></span><br><span class="line"><span class="css">				<span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">background</span>: blueviolet;</span></span><br><span class="line"><span class="css">				<span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="css">				<span class="comment">/* 左浮动 */</span></span></span><br><span class="line"><span class="css">			&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">			<span class="selector-id">#div3</span> &#123;</span></span><br><span class="line"><span class="css">				<span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">background</span>: darkcyan;</span></span><br><span class="line"><span class="css">				<span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="css">				<span class="comment">/* 左浮动 */</span></span></span><br><span class="line"><span class="css">			&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">			<span class="selector-id">#div4</span> &#123;</span></span><br><span class="line"><span class="css">				<span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">background</span>: darksalmon;</span></span><br><span class="line"><span class="css">				<span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="css">				<span class="comment">/* 左浮动 */</span></span></span><br><span class="line"><span class="css">			&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">			<span class="comment">/* 鼠标移动至指定元素时修改样式 */</span></span></span><br><span class="line"><span class="css">			<span class="selector-id">#div4</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="css">				<span class="attribute">background</span>: black;</span></span><br><span class="line"><span class="css">			&#125;</span></span><br><span class="line"><span class="css">		</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;a_div&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;b_div&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;c_div&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div4&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="6-案例练习：百度注册"><a href="#6-案例练习：百度注册" class="headerlink" title="6.案例练习：百度注册"></a>6.案例练习：百度注册</h3><p> 百度注册，利用HTML+CSS+DIV开发百度注册页面。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">COPY<span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>注册百度账号<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 引入外部css文件 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/baidu.css&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- --------------------头部 begin-------------------- --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;head&quot;</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 百度logo --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;head_logo&quot;</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.baidu.com&quot;</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/baidu.gif&quot;</span> /&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 百度登录 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;head_login&quot;</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">span</span>&gt;</span>我已注册，现在就<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;登录&quot;</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- --------------------头部 end---------------------- --&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- --------------------导航 begin-------------------- --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;nav&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/reg_hr.png&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- --------------------导航 end---------------------- --&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- --------------------注册 begin-------------------- --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;register&quot;</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 注册表单 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;reg_form&quot;</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">					<span class="comment">&lt;!-- 输入框 --&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">label</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">placeholder</span>=<span class="string">&quot;请设置用户名&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">label</span>&gt;</span>手机号<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">placeholder</span>=<span class="string">&quot;可用于登录和找回密码&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">label</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">placeholder</span>=<span class="string">&quot;请设置登录密码&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">label</span>&gt;</span>验证码<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入验证码&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 190px;&quot;</span> /&gt;</span></span><br><span class="line">						<span class="comment">&lt;!-- 短信按钮 --&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;reg_form_msg&quot;</span>&gt;</span>获取短信验证码<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">					<span class="comment">&lt;!-- 注册协议 --&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;reg_form_isCheck&quot;</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 14px;height: 14px;&quot;</span> /&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">span</span>&gt;</span>阅读并接受<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>《百度用户协议》<span class="tag">&lt;/<span class="name">a</span>&gt;</span>及<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>《百度隐私权保护声明》<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">					<span class="comment">&lt;!-- 注册按钮 --&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;reg_form_btn&quot;</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 注册二维码 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;reg_qrcode&quot;</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/qrcode.png&quot;</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- --------------------注册 end---------------------- --&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- --------------------版权信息 begin----------------- --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;copyright&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">p</span>&gt;</span>2018 <span class="symbol">&amp;copy;</span>Baidu<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- --------------------版权信息 end------------------- --&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>baidu.css</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">COPY<span class="comment">/* 采用什么编码解析文件 */</span></span><br><span class="line"><span class="keyword">@charset</span> <span class="string">&quot;utf-8&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* ------------------------头部 begin---------------------- */</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 使用id选择器渲染id=&quot;head&quot;标签的样式</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-id">#head</span> &#123;</span><br><span class="line">	<span class="attribute">width</span>: <span class="number">1000px</span>;</span><br><span class="line">	<span class="comment">/* 宽度1000px */</span></span><br><span class="line">	<span class="comment">/* 上外边距20px 左外边距自动计算居中 下外边距0px 右外边距自动计算居中 */</span></span><br><span class="line">	<span class="attribute">margin</span>: <span class="number">20px</span> auto <span class="number">0px</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 使用id选择器定位到id=&quot;head&quot;标签</span></span><br><span class="line"><span class="comment">* 然后渲染其子标签id=&quot;head_logo&quot;的样式</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-id">#head</span> <span class="selector-id">#head_logo</span> &#123;</span><br><span class="line">	<span class="attribute">width</span>: <span class="number">330px</span>;</span><br><span class="line">	<span class="comment">/* 宽度330px */</span></span><br><span class="line">	<span class="comment">/* 设置背景图片不重复并靠右 */</span></span><br><span class="line">	<span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">../img/logo.png</span>) right no-repeat;</span><br><span class="line">	<span class="comment">/* 设置背景的位置 y轴上移5px */</span></span><br><span class="line">	<span class="attribute">background-position</span>-y: -<span class="number">5px</span>;</span><br><span class="line">	<span class="attribute">cursor</span>: pointer;</span><br><span class="line">	<span class="comment">/* 鼠标变手势 */</span></span><br><span class="line">	<span class="attribute">float</span>: left;</span><br><span class="line">	<span class="comment">/* 左浮动 */</span></span><br><span class="line">	<span class="comment">/* 内下间距5px 为了和导航之间保持距离 */</span></span><br><span class="line">	<span class="attribute">padding-bottom</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 使用id选择器定位到id=&quot;head&quot;标签</span></span><br><span class="line"><span class="comment">* 然后渲染其子标签id=&quot;head_login&quot;的样式</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-id">#head</span> <span class="selector-id">#head_login</span> &#123;</span><br><span class="line">	<span class="attribute">float</span>: right;</span><br><span class="line">	<span class="comment">/* 右浮动 */</span></span><br><span class="line">	<span class="attribute">font-size</span>: <span class="number">10px</span>;</span><br><span class="line">	<span class="comment">/* 字体大小 */</span></span><br><span class="line">	<span class="attribute">margin-top</span>: <span class="number">10px</span>;</span><br><span class="line">	<span class="comment">/* 上外间距10px */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 使用id选择器定位到id=&quot;head&quot;标签</span></span><br><span class="line"><span class="comment">* 然后渲染其子标签id=&quot;head_login&quot;的子标签input的样式</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-id">#head</span> <span class="selector-id">#head_login</span> <span class="selector-tag">input</span> &#123;</span><br><span class="line">	<span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">	<span class="comment">/* 加粗 */</span></span><br><span class="line">	<span class="attribute">color</span>: <span class="number">#666</span>;</span><br><span class="line">	<span class="comment">/* 字体颜色 */</span></span><br><span class="line">	<span class="attribute">height</span>: <span class="number">32px</span>;</span><br><span class="line">	<span class="comment">/* 输入框高度 */</span></span><br><span class="line">	<span class="attribute">width</span>: <span class="number">64px</span>;</span><br><span class="line">	<span class="comment">/* 输入框宽度 */</span></span><br><span class="line">	<span class="attribute">border</span>: <span class="number">0</span>;</span><br><span class="line">	<span class="comment">/* 边框为0 */</span></span><br><span class="line">	<span class="comment">/* 设置背景图片不重复并通过具体坐标获取显示部分 */</span></span><br><span class="line">	<span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">../img/reg_icons.png</span>) no-repeat <span class="number">0</span> -<span class="number">48px</span>;</span><br><span class="line">	<span class="attribute">font-family</span>: Arial, <span class="string">&quot;宋体&quot;</span>;</span><br><span class="line">	<span class="comment">/* 字体种类 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* ------------------------头部 end---------------------- */</span></span><br><span class="line"><span class="comment">/* ------------------------导航 begin---------------------- */</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 使用id选择器渲染id=&quot;nav&quot;标签的样式</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-id">#nav</span> &#123;</span><br><span class="line">	<span class="attribute">width</span>: <span class="number">1200px</span>;</span><br><span class="line">	<span class="comment">/* 宽度1200px */</span></span><br><span class="line">	<span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">	<span class="comment">/* 上外间距0px 居中 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* ------------------------导航 end---------------------- */</span></span><br><span class="line"><span class="comment">/* ------------------------注册 begin---------------------- */</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 使用id选择器渲染id=&quot;register&quot;标签的样式</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-id">#register</span> &#123;</span><br><span class="line">	<span class="attribute">width</span>: <span class="number">950px</span>;</span><br><span class="line">	<span class="comment">/* 宽度950px */</span></span><br><span class="line">	<span class="comment">/* 上外边距20px 左外边距自动计算居中 下外边距0px 右外边距自动计算居中 */</span></span><br><span class="line">	<span class="attribute">margin</span>: <span class="number">20px</span> auto <span class="number">0px</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 使用id选择器渲染id=&quot;register&quot;标签的样式</span></span><br><span class="line"><span class="comment">* 然后渲染其子标签id=&quot;reg_form&quot;的样式</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-id">#register</span> <span class="selector-id">#reg_form</span> &#123;</span><br><span class="line">	<span class="attribute">float</span>: left;</span><br><span class="line">	<span class="comment">/* 左浮动 */</span></span><br><span class="line">	<span class="attribute">text-align</span>: right;</span><br><span class="line">	<span class="comment">/* 文本靠右 */</span></span><br><span class="line">	<span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">	<span class="comment">/* 字体大小 */</span></span><br><span class="line">	<span class="attribute">color</span>: <span class="number">#666</span>;</span><br><span class="line">	<span class="comment">/* 字体颜色 */</span></span><br><span class="line">	<span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">	<span class="comment">/* 字体粗细 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 使用id选择器渲染id=&quot;register&quot;标签的样式</span></span><br><span class="line"><span class="comment">* 然后渲染其子标签id=&quot;reg_form&quot;的子标签label的样式</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-id">#register</span> <span class="selector-id">#reg_form</span> <span class="selector-tag">label</span> &#123;</span><br><span class="line">	<span class="attribute">margin-right</span>: <span class="number">10px</span>;</span><br><span class="line">	<span class="comment">/* 右外间距10px */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 使用id选择器渲染id=&quot;register&quot;标签的样式</span></span><br><span class="line"><span class="comment">* 然后渲染其子标签id=&quot;reg_form&quot;的子标签p的子标签input的样式</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-id">#register</span> <span class="selector-id">#reg_form</span> <span class="selector-tag">p</span> <span class="selector-tag">input</span> &#123;</span><br><span class="line">	<span class="attribute">height</span>: <span class="number">38px</span>;</span><br><span class="line">	<span class="comment">/* 高度38px */</span></span><br><span class="line">	<span class="attribute">width</span>: <span class="number">350px</span>;</span><br><span class="line">	<span class="comment">/* 宽度350px */</span></span><br><span class="line">	<span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ddd</span>;</span><br><span class="line">	<span class="comment">/* 边框1px 实心线 颜色#ddd */</span></span><br><span class="line">	<span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">	<span class="comment">/* 字体大小 */</span></span><br><span class="line">	<span class="attribute">color</span>: <span class="number">#666</span>;</span><br><span class="line">	<span class="comment">/* 字体颜色 */</span></span><br><span class="line">	<span class="attribute">margin-bottom</span>: <span class="number">6px</span>;</span><br><span class="line">	<span class="comment">/* 每个input底部外间距6px */</span></span><br><span class="line">	<span class="attribute">text-indent</span>: <span class="number">10px</span>;</span><br><span class="line">	<span class="comment">/* 首行缩进10px */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 使用id选择器渲染id=&quot;register&quot;标签的样式</span></span><br><span class="line"><span class="comment">* 然后渲染其子标签id=&quot;reg_form&quot;的子标签id=&quot;reg_form_msg&quot;的样式</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-id">#register</span> <span class="selector-id">#reg_form</span> <span class="selector-id">#reg_form_msg</span> &#123;</span><br><span class="line">	<span class="attribute">height</span>: <span class="number">42px</span>;</span><br><span class="line">	<span class="comment">/* 高度42px */</span></span><br><span class="line">	<span class="attribute">width</span>: <span class="number">156px</span>;</span><br><span class="line">	<span class="comment">/* 宽度156px */</span></span><br><span class="line">	<span class="attribute">background</span>: <span class="number">#f7f7f7</span>;</span><br><span class="line">	<span class="comment">/* 背景颜色 */</span></span><br><span class="line">	<span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">	<span class="comment">/* 字体大小 */</span></span><br><span class="line">	<span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ddd</span>;</span><br><span class="line">	<span class="comment">/* 边框1px 实心线 颜色#ddd */</span></span><br><span class="line">	<span class="attribute">cursor</span>: pointer;</span><br><span class="line">	<span class="comment">/* 鼠标变手势 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 鼠标移动至指定标签改变样式 */</span></span><br><span class="line"><span class="selector-id">#register</span> <span class="selector-id">#reg_form</span> <span class="selector-id">#reg_form_msg</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">	<span class="attribute">background-color</span>: <span class="number">#eee</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 使用id选择器渲染id=&quot;register&quot;标签的样式</span></span><br><span class="line"><span class="comment">* 然后渲染其子标签id=&quot;reg_form_isCheck&quot;的样式</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-id">#register</span> <span class="selector-id">#reg_form_isCheck</span> &#123;</span><br><span class="line">	<span class="attribute">font-size</span>: <span class="number">10px</span>;</span><br><span class="line">	<span class="comment">/* 字体大小 */</span></span><br><span class="line">	<span class="attribute">font-weight</span>: <span class="number">400</span>;</span><br><span class="line">	<span class="comment">/* 字体粗细 */</span></span><br><span class="line">	<span class="attribute">margin-right</span>: <span class="number">30px</span>;</span><br><span class="line">	<span class="comment">/* 设置右外间距30px */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 使用id选择器渲染id=&quot;register&quot;标签的样式</span></span><br><span class="line"><span class="comment">* 然后渲染其子标签id=&quot;reg_form_isCheck&quot;的子标签a的样式</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-id">#register</span> <span class="selector-id">#reg_form_isCheck</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">	<span class="attribute">text-decoration</span>: none;</span><br><span class="line">	<span class="comment">/* 去除所有字体横线样式 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 使用id选择器渲染id=&quot;register&quot;标签的样式</span></span><br><span class="line"><span class="comment">* 然后渲染其子标签id=&quot;reg_form_btn&quot;的子标签button的样式</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-id">#register</span> <span class="selector-id">#reg_form_btn</span> <span class="selector-tag">button</span> &#123;</span><br><span class="line">	<span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">	<span class="comment">/* 高度50px */</span></span><br><span class="line">	<span class="attribute">width</span>: <span class="number">352px</span>;</span><br><span class="line">	<span class="comment">/* 宽度352px */</span></span><br><span class="line">	<span class="attribute">background</span>: <span class="number">#4490f7</span>;</span><br><span class="line">	<span class="comment">/* 背景颜色 */</span></span><br><span class="line">	<span class="attribute">border</span>: <span class="number">0</span>;</span><br><span class="line">	<span class="comment">/* 边框0 */</span></span><br><span class="line">	<span class="attribute">color</span>: white;</span><br><span class="line">	<span class="comment">/* 字体颜色 */</span></span><br><span class="line">	<span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">	<span class="comment">/* 字体大小 */</span></span><br><span class="line">	<span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">	<span class="comment">/* 字体粗细 */</span></span><br><span class="line">	<span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">	<span class="comment">/* 边框变圆角 */</span></span><br><span class="line">	<span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line">	<span class="comment">/* 上外间距20px */</span></span><br><span class="line">	<span class="attribute">font-family</span>: Arial, <span class="string">&quot;宋体&quot;</span>;</span><br><span class="line">	<span class="comment">/* 字体类型 */</span></span><br><span class="line">	<span class="attribute">cursor</span>: pointer;</span><br><span class="line">	<span class="comment">/* 鼠标变手势 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 使用id选择器渲染id=&quot;register&quot;标签的样式</span></span><br><span class="line"><span class="comment">* 然后渲染其子标签id=&quot;reg_qrcode&quot;的样式</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-id">#register</span> <span class="selector-id">#reg_qrcode</span> &#123;</span><br><span class="line">	<span class="attribute">float</span>: right;</span><br><span class="line">	<span class="comment">/* 右浮动 */</span></span><br><span class="line">	<span class="attribute">margin-top</span>: <span class="number">15px</span>;</span><br><span class="line">	<span class="comment">/* 上外间距15px */</span></span><br><span class="line">	<span class="attribute">margin-right</span>: -<span class="number">10px</span>;</span><br><span class="line">	<span class="comment">/* 右外间距-10px */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* ------------------------注册 end---------------------- */</span></span><br><span class="line"><span class="comment">/* ---------------------版权信息 begin------------------- */</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 使用id选择器渲染id=&quot;copyright&quot;标签的样式</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-id">#copyright</span> &#123;</span><br><span class="line">	<span class="attribute">text-align</span>: center;</span><br><span class="line">	<span class="comment">/* 文本居中 */</span></span><br><span class="line">	<span class="attribute">color</span>: <span class="number">#7a77c8</span>;</span><br><span class="line">	<span class="comment">/* 字体颜色 */</span></span><br><span class="line">	<span class="attribute">font-size</span>: <span class="number">10px</span>;</span><br><span class="line">	<span class="comment">/* 字体大小 */</span></span><br><span class="line">	<span class="attribute">margin-top</span>: <span class="number">520px</span>;</span><br><span class="line">	<span class="comment">/* 上外间距520px */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* ---------------------版权信息 end------------------- */</span></span><br></pre></td></tr></table></figure>



<p> 演示效果：</p>
<p><img src="https://dao-1306038680.cos.ap-shanghai.myqcloud.com/img/image-20210623082444972.png" alt="image-20210623082444972"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>常用的几种编码方式及其特点</title>
    <url>/2021/08/05/chang-yong-de-ji-chong-bian-ma-fang-shi-ji-qi-te-dian/</url>
    <content><![CDATA[<h1 id="几种编码方式的特点"><a href="#几种编码方式的特点" class="headerlink" title="几种编码方式的特点"></a>几种编码方式的特点</h1><h3 id="1-ASCII编码"><a href="#1-ASCII编码" class="headerlink" title="1.ASCII编码"></a>1.ASCII编码</h3><p>ASCII ((American Standard Code for Information Interchange): 美国信息交换标准代码）是基于<a href="https://baike.baidu.com/item/%E6%8B%89%E4%B8%81%E5%AD%97%E6%AF%8D/1936851">拉丁字母</a>的一套电脑<a href="https://baike.baidu.com/item/%E7%BC%96%E7%A0%81/80092">编码</a>系统，主要用于显示现代<a href="https://baike.baidu.com/item/%E8%8B%B1%E8%AF%AD/109997">英语</a>和其他<a href="https://baike.baidu.com/item/%E8%A5%BF%E6%AC%A7/3028649">西欧</a>语言。它是最通用的<a href="https://baike.baidu.com/item/%E4%BF%A1%E6%81%AF%E4%BA%A4%E6%8D%A2/716328">信息交换</a>标准，并等同于<a href="https://baike.baidu.com/item/%E5%9B%BD%E9%99%85/766689">国际</a>标准ISO/IEC 646。ASCII第一次以规范标准的类型发表是在1967年，最后一次更新则是在1986年，到目前为止共定义了128个字符 。</p>
<p>ASCII码表具体如下所示</p>
<table>
<thead>
<tr>
<th>Bin(二进制)</th>
<th>Oct(八进制)</th>
<th>Dec(十进制)</th>
<th>Hex(十六进制)</th>
<th>缩写/字符</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>0000 0000</td>
<td>00</td>
<td>0</td>
<td>0x00</td>
<td>NUL(null)</td>
<td>空字符</td>
</tr>
<tr>
<td>0000 0001</td>
<td>01</td>
<td>1</td>
<td>0x01</td>
<td>SOH(start of headline)</td>
<td>标题开始</td>
</tr>
<tr>
<td>0000 0010</td>
<td>02</td>
<td>2</td>
<td>0x02</td>
<td>STX (start of text)</td>
<td>正文开始</td>
</tr>
<tr>
<td>0000 0011</td>
<td>03</td>
<td>3</td>
<td>0x03</td>
<td>ETX (end of text)</td>
<td>正文结束</td>
</tr>
<tr>
<td>0000 0100</td>
<td>04</td>
<td>4</td>
<td>0x04</td>
<td>EOT (end of transmission)</td>
<td>传输结束</td>
</tr>
<tr>
<td>0000 0101</td>
<td>05</td>
<td>5</td>
<td>0x05</td>
<td>ENQ (enquiry)</td>
<td>请求</td>
</tr>
<tr>
<td>0000 0110</td>
<td>06</td>
<td>6</td>
<td>0x06</td>
<td>ACK (acknowledge)</td>
<td>收到通知</td>
</tr>
<tr>
<td>0000 0111</td>
<td>07</td>
<td>7</td>
<td>0x07</td>
<td>BEL (bell)</td>
<td>响铃</td>
</tr>
<tr>
<td>0000 1000</td>
<td>010</td>
<td>8</td>
<td>0x08</td>
<td>BS (backspace)</td>
<td>退格</td>
</tr>
<tr>
<td>0000 1001</td>
<td>011</td>
<td>9</td>
<td>0x09</td>
<td>HT (horizontal tab)</td>
<td>水平制表符</td>
</tr>
<tr>
<td>0000 1010</td>
<td>012</td>
<td>10</td>
<td>0x0A</td>
<td>LF (NL line feed, new line)</td>
<td>换行键</td>
</tr>
<tr>
<td>0000 1011</td>
<td>013</td>
<td>11</td>
<td>0x0B</td>
<td>VT (vertical tab)</td>
<td>垂直制表符</td>
</tr>
<tr>
<td>0000 1100</td>
<td>014</td>
<td>12</td>
<td>0x0C</td>
<td>FF (NP form feed, new page)</td>
<td>换页键</td>
</tr>
<tr>
<td>0000 1101</td>
<td>015</td>
<td>13</td>
<td>0x0D</td>
<td>CR (carriage return)</td>
<td>回车键</td>
</tr>
<tr>
<td>0000 1110</td>
<td>016</td>
<td>14</td>
<td>0x0E</td>
<td>SO (shift out)</td>
<td>不用切换</td>
</tr>
<tr>
<td>0000 1111</td>
<td>017</td>
<td>15</td>
<td>0x0F</td>
<td>SI (shift in)</td>
<td>启用切换</td>
</tr>
<tr>
<td>0001 0000</td>
<td>020</td>
<td>16</td>
<td>0x10</td>
<td>DLE (data link escape)</td>
<td>数据链路转义</td>
</tr>
<tr>
<td>0001 0001</td>
<td>021</td>
<td>17</td>
<td>0x11</td>
<td>DC1 (device control 1)</td>
<td>设备控制1</td>
</tr>
<tr>
<td>0001 0010</td>
<td>022</td>
<td>18</td>
<td>0x12</td>
<td>DC2 (device control 2)</td>
<td>设备控制2</td>
</tr>
<tr>
<td>0001 0011</td>
<td>023</td>
<td>19</td>
<td>0x13</td>
<td>DC3 (device control 3)</td>
<td>设备控制3</td>
</tr>
<tr>
<td>0001 0100</td>
<td>024</td>
<td>20</td>
<td>0x14</td>
<td>DC4 (device control 4)</td>
<td>设备控制4</td>
</tr>
<tr>
<td>0001 0101</td>
<td>025</td>
<td>21</td>
<td>0x15</td>
<td>NAK (negative acknowledge)</td>
<td>拒绝接收</td>
</tr>
<tr>
<td>0001 0110</td>
<td>026</td>
<td>22</td>
<td>0x16</td>
<td>SYN (synchronous idle)</td>
<td>同步空闲</td>
</tr>
<tr>
<td>0001 0111</td>
<td>027</td>
<td>23</td>
<td>0x17</td>
<td>ETB (end of trans. block)</td>
<td>结束传输块</td>
</tr>
<tr>
<td>0001 1000</td>
<td>030</td>
<td>24</td>
<td>0x18</td>
<td>CAN (cancel)</td>
<td>取消</td>
</tr>
<tr>
<td>0001 1001</td>
<td>031</td>
<td>25</td>
<td>0x19</td>
<td>EM (end of medium)</td>
<td>媒介结束</td>
</tr>
<tr>
<td>0001 1010</td>
<td>032</td>
<td>26</td>
<td>0x1A</td>
<td>SUB (substitute)</td>
<td>代替</td>
</tr>
<tr>
<td>0001 1011</td>
<td>033</td>
<td>27</td>
<td>0x1B</td>
<td>ESC (escape)</td>
<td>换码(溢出)</td>
</tr>
<tr>
<td>0001 1100</td>
<td>034</td>
<td>28</td>
<td>0x1C</td>
<td>FS (file separator)</td>
<td>文件分隔符</td>
</tr>
<tr>
<td>0001 1101</td>
<td>035</td>
<td>29</td>
<td>0x1D</td>
<td>GS (group separator)</td>
<td>分组符</td>
</tr>
<tr>
<td>0001 1110</td>
<td>036</td>
<td>30</td>
<td>0x1E</td>
<td>RS (record separator)</td>
<td>记录分隔符</td>
</tr>
<tr>
<td>0001 1111</td>
<td>037</td>
<td>31</td>
<td>0x1F</td>
<td>US (unit separator)</td>
<td>单元分隔符</td>
</tr>
<tr>
<td>0010 0000</td>
<td>040</td>
<td>32</td>
<td>0x20</td>
<td>(space)</td>
<td>空格</td>
</tr>
<tr>
<td>0010 0001</td>
<td>041</td>
<td>33</td>
<td>0x21</td>
<td>!</td>
<td>叹号</td>
</tr>
<tr>
<td>0010 0010</td>
<td>042</td>
<td>34</td>
<td>0x22</td>
<td>“</td>
<td>双引号</td>
</tr>
<tr>
<td>0010 0011</td>
<td>043</td>
<td>35</td>
<td>0x23</td>
<td>#</td>
<td>井号</td>
</tr>
<tr>
<td>0010 0100</td>
<td>044</td>
<td>36</td>
<td>0x24</td>
<td>$</td>
<td>美元符</td>
</tr>
<tr>
<td>0010 0101</td>
<td>045</td>
<td>37</td>
<td>0x25</td>
<td>%</td>
<td>百分号</td>
</tr>
<tr>
<td>0010 0110</td>
<td>046</td>
<td>38</td>
<td>0x26</td>
<td>&amp;</td>
<td>和号</td>
</tr>
<tr>
<td>0010 0111</td>
<td>047</td>
<td>39</td>
<td>0x27</td>
<td>‘</td>
<td>闭单引号</td>
</tr>
<tr>
<td>0010 1000</td>
<td>050</td>
<td>40</td>
<td>0x28</td>
<td>(</td>
<td>开括号</td>
</tr>
<tr>
<td>0010 1001</td>
<td>051</td>
<td>41</td>
<td>0x29</td>
<td>)</td>
<td>闭括号</td>
</tr>
<tr>
<td>0010 1010</td>
<td>052</td>
<td>42</td>
<td>0x2A</td>
<td>*</td>
<td>星号</td>
</tr>
<tr>
<td>0010 1011</td>
<td>053</td>
<td>43</td>
<td>0x2B</td>
<td>+</td>
<td>加号</td>
</tr>
<tr>
<td>0010 1100</td>
<td>054</td>
<td>44</td>
<td>0x2C</td>
<td>,</td>
<td>逗号</td>
</tr>
<tr>
<td>0010 1101</td>
<td>055</td>
<td>45</td>
<td>0x2D</td>
<td>-</td>
<td>减号/破折号</td>
</tr>
<tr>
<td>0010 1110</td>
<td>056</td>
<td>46</td>
<td>0x2E</td>
<td>.</td>
<td>句号</td>
</tr>
<tr>
<td>0010 1111</td>
<td>057</td>
<td>47</td>
<td>0x2F</td>
<td>/</td>
<td>斜杠</td>
</tr>
<tr>
<td>0011 0000</td>
<td>060</td>
<td>48</td>
<td>0x30</td>
<td>0</td>
<td>字符0</td>
</tr>
<tr>
<td>0011 0001</td>
<td>061</td>
<td>49</td>
<td>0x31</td>
<td>1</td>
<td>字符1</td>
</tr>
<tr>
<td>0011 0010</td>
<td>062</td>
<td>50</td>
<td>0x32</td>
<td>2</td>
<td>字符2</td>
</tr>
<tr>
<td>0011 0011</td>
<td>063</td>
<td>51</td>
<td>0x33</td>
<td>3</td>
<td>字符3</td>
</tr>
<tr>
<td>0011 0100</td>
<td>064</td>
<td>52</td>
<td>0x34</td>
<td>4</td>
<td>字符4</td>
</tr>
<tr>
<td>0011 0101</td>
<td>065</td>
<td>53</td>
<td>0x35</td>
<td>5</td>
<td>字符5</td>
</tr>
<tr>
<td>0011 0110</td>
<td>066</td>
<td>54</td>
<td>0x36</td>
<td>6</td>
<td>字符6</td>
</tr>
<tr>
<td>0011 0111</td>
<td>067</td>
<td>55</td>
<td>0x37</td>
<td>7</td>
<td>字符7</td>
</tr>
<tr>
<td>0011 1000</td>
<td>070</td>
<td>56</td>
<td>0x38</td>
<td>8</td>
<td>字符8</td>
</tr>
<tr>
<td>0011 1001</td>
<td>071</td>
<td>57</td>
<td>0x39</td>
<td>9</td>
<td>字符9</td>
</tr>
<tr>
<td>0011 1010</td>
<td>072</td>
<td>58</td>
<td>0x3A</td>
<td>:</td>
<td>冒号</td>
</tr>
<tr>
<td>0011 1011</td>
<td>073</td>
<td>59</td>
<td>0x3B</td>
<td>;</td>
<td>分号</td>
</tr>
<tr>
<td>0011 1100</td>
<td>074</td>
<td>60</td>
<td>0x3C</td>
<td>&lt;</td>
<td>小于</td>
</tr>
<tr>
<td>0011 1101</td>
<td>075</td>
<td>61</td>
<td>0x3D</td>
<td>=</td>
<td>等号</td>
</tr>
<tr>
<td>0011 1110</td>
<td>076</td>
<td>62</td>
<td>0x3E</td>
<td>&gt;</td>
<td>大于</td>
</tr>
<tr>
<td>0011 1111</td>
<td>077</td>
<td>63</td>
<td>0x3F</td>
<td>?</td>
<td>问号</td>
</tr>
<tr>
<td>0100 0000</td>
<td>0100</td>
<td>64</td>
<td>0x40</td>
<td>@</td>
<td>电子邮件符号</td>
</tr>
<tr>
<td>0100 0001</td>
<td>0101</td>
<td>65</td>
<td>0x41</td>
<td>A</td>
<td>大写字母A</td>
</tr>
<tr>
<td>0100 0010</td>
<td>0102</td>
<td>66</td>
<td>0x42</td>
<td>B</td>
<td>大写字母B</td>
</tr>
<tr>
<td>0100 0011</td>
<td>0103</td>
<td>67</td>
<td>0x43</td>
<td>C</td>
<td>大写字母C</td>
</tr>
<tr>
<td>0100 0100</td>
<td>0104</td>
<td>68</td>
<td>0x44</td>
<td>D</td>
<td>大写字母D</td>
</tr>
<tr>
<td>0100 0101</td>
<td>0105</td>
<td>69</td>
<td>0x45</td>
<td>E</td>
<td>大写字母E</td>
</tr>
<tr>
<td>0100 0110</td>
<td>0106</td>
<td>70</td>
<td>0x46</td>
<td>F</td>
<td>大写字母F</td>
</tr>
<tr>
<td>0100 0111</td>
<td>0107</td>
<td>71</td>
<td>0x47</td>
<td>G</td>
<td>大写字母G</td>
</tr>
<tr>
<td>0100 1000</td>
<td>0110</td>
<td>72</td>
<td>0x48</td>
<td>H</td>
<td>大写字母H</td>
</tr>
<tr>
<td>0100 1001</td>
<td>0111</td>
<td>73</td>
<td>0x49</td>
<td>I</td>
<td>大写字母I</td>
</tr>
<tr>
<td>01001010</td>
<td>0112</td>
<td>74</td>
<td>0x4A</td>
<td>J</td>
<td>大写字母J</td>
</tr>
<tr>
<td>0100 1011</td>
<td>0113</td>
<td>75</td>
<td>0x4B</td>
<td>K</td>
<td>大写字母K</td>
</tr>
<tr>
<td>0100 1100</td>
<td>0114</td>
<td>76</td>
<td>0x4C</td>
<td>L</td>
<td>大写字母L</td>
</tr>
<tr>
<td>0100 1101</td>
<td>0115</td>
<td>77</td>
<td>0x4D</td>
<td>M</td>
<td>大写字母M</td>
</tr>
<tr>
<td>0100 1110</td>
<td>0116</td>
<td>78</td>
<td>0x4E</td>
<td>N</td>
<td>大写字母N</td>
</tr>
<tr>
<td>0100 1111</td>
<td>0117</td>
<td>79</td>
<td>0x4F</td>
<td>O</td>
<td>大写字母O</td>
</tr>
<tr>
<td>0101 0000</td>
<td>0120</td>
<td>80</td>
<td>0x50</td>
<td>P</td>
<td>大写字母P</td>
</tr>
<tr>
<td>0101 0001</td>
<td>0121</td>
<td>81</td>
<td>0x51</td>
<td>Q</td>
<td>大写字母Q</td>
</tr>
<tr>
<td>0101 0010</td>
<td>0122</td>
<td>82</td>
<td>0x52</td>
<td>R</td>
<td>大写字母R</td>
</tr>
<tr>
<td>0101 0011</td>
<td>0123</td>
<td>83</td>
<td>0x53</td>
<td>S</td>
<td>大写字母S</td>
</tr>
<tr>
<td>0101 0100</td>
<td>0124</td>
<td>84</td>
<td>0x54</td>
<td>T</td>
<td>大写字母T</td>
</tr>
<tr>
<td>0101 0101</td>
<td>0125</td>
<td>85</td>
<td>0x55</td>
<td>U</td>
<td>大写字母U</td>
</tr>
<tr>
<td>0101 0110</td>
<td>0126</td>
<td>86</td>
<td>0x56</td>
<td>V</td>
<td>大写字母V</td>
</tr>
<tr>
<td>0101 0111</td>
<td>0127</td>
<td>87</td>
<td>0x57</td>
<td>W</td>
<td>大写字母W</td>
</tr>
<tr>
<td>0101 1000</td>
<td>0130</td>
<td>88</td>
<td>0x58</td>
<td>X</td>
<td>大写字母X</td>
</tr>
<tr>
<td>0101 1001</td>
<td>0131</td>
<td>89</td>
<td>0x59</td>
<td>Y</td>
<td>大写字母Y</td>
</tr>
<tr>
<td>0101 1010</td>
<td>0132</td>
<td>90</td>
<td>0x5A</td>
<td>Z</td>
<td>大写字母Z</td>
</tr>
<tr>
<td>0101 1011</td>
<td>0133</td>
<td>91</td>
<td>0x5B</td>
<td>[</td>
<td>开方括号</td>
</tr>
<tr>
<td>0101 1100</td>
<td>0134</td>
<td>92</td>
<td>0x5C</td>
<td>\</td>
<td>反斜杠</td>
</tr>
<tr>
<td>0101 1101</td>
<td>0135</td>
<td>93</td>
<td>0x5D</td>
<td>]</td>
<td>闭方括号</td>
</tr>
<tr>
<td>0101 1110</td>
<td>0136</td>
<td>94</td>
<td>0x5E</td>
<td>^</td>
<td>脱字符</td>
</tr>
<tr>
<td>0101 1111</td>
<td>0137</td>
<td>95</td>
<td>0x5F</td>
<td>_</td>
<td>下划线</td>
</tr>
<tr>
<td>0110 0000</td>
<td>0140</td>
<td>96</td>
<td>0x60</td>
<td>`</td>
<td>开单引号</td>
</tr>
<tr>
<td>0110 0001</td>
<td>0141</td>
<td>97</td>
<td>0x61</td>
<td>a</td>
<td>小写字母a</td>
</tr>
<tr>
<td>0110 0010</td>
<td>0142</td>
<td>98</td>
<td>0x62</td>
<td>b</td>
<td>小写字母b</td>
</tr>
<tr>
<td>0110 0011</td>
<td>0143</td>
<td>99</td>
<td>0x63</td>
<td>c</td>
<td>小写字母c</td>
</tr>
<tr>
<td>0110 0100</td>
<td>0144</td>
<td>100</td>
<td>0x64</td>
<td>d</td>
<td>小写字母d</td>
</tr>
<tr>
<td>0110 0101</td>
<td>0145</td>
<td>101</td>
<td>0x65</td>
<td>e</td>
<td>小写字母e</td>
</tr>
<tr>
<td>0110 0110</td>
<td>0146</td>
<td>102</td>
<td>0x66</td>
<td>f</td>
<td>小写字母f</td>
</tr>
<tr>
<td>0110 0111</td>
<td>0147</td>
<td>103</td>
<td>0x67</td>
<td>g</td>
<td>小写字母g</td>
</tr>
<tr>
<td>0110 1000</td>
<td>0150</td>
<td>104</td>
<td>0x68</td>
<td>h</td>
<td>小写字母h</td>
</tr>
<tr>
<td>0110 1001</td>
<td>0151</td>
<td>105</td>
<td>0x69</td>
<td>i</td>
<td>小写字母i</td>
</tr>
<tr>
<td>0110 1010</td>
<td>0152</td>
<td>106</td>
<td>0x6A</td>
<td>j</td>
<td>小写字母j</td>
</tr>
<tr>
<td>0110 1011</td>
<td>0153</td>
<td>107</td>
<td>0x6B</td>
<td>k</td>
<td>小写字母k</td>
</tr>
<tr>
<td>0110 1100</td>
<td>0154</td>
<td>108</td>
<td>0x6C</td>
<td>l</td>
<td>小写字母l</td>
</tr>
<tr>
<td>0110 1101</td>
<td>0155</td>
<td>109</td>
<td>0x6D</td>
<td>m</td>
<td>小写字母m</td>
</tr>
<tr>
<td>0110 1110</td>
<td>0156</td>
<td>110</td>
<td>0x6E</td>
<td>n</td>
<td>小写字母n</td>
</tr>
<tr>
<td>0110 1111</td>
<td>0157</td>
<td>111</td>
<td>0x6F</td>
<td>o</td>
<td>小写字母o</td>
</tr>
<tr>
<td>0111 0000</td>
<td>0160</td>
<td>112</td>
<td>0x70</td>
<td>p</td>
<td>小写字母p</td>
</tr>
<tr>
<td>0111 0001</td>
<td>0161</td>
<td>113</td>
<td>0x71</td>
<td>q</td>
<td>小写字母q</td>
</tr>
<tr>
<td>0111 0010</td>
<td>0162</td>
<td>114</td>
<td>0x72</td>
<td>r</td>
<td>小写字母r</td>
</tr>
<tr>
<td>0111 0011</td>
<td>0163</td>
<td>115</td>
<td>0x73</td>
<td>s</td>
<td>小写字母s</td>
</tr>
<tr>
<td>0111 0100</td>
<td>0164</td>
<td>116</td>
<td>0x74</td>
<td>t</td>
<td>小写字母t</td>
</tr>
<tr>
<td>0111 0101</td>
<td>0165</td>
<td>117</td>
<td>0x75</td>
<td>u</td>
<td>小写字母u</td>
</tr>
<tr>
<td>0111 0110</td>
<td>0166</td>
<td>118</td>
<td>0x76</td>
<td>v</td>
<td>小写字母v</td>
</tr>
<tr>
<td>0111 0111</td>
<td>0167</td>
<td>119</td>
<td>0x77</td>
<td>w</td>
<td>小写字母w</td>
</tr>
<tr>
<td>0111 1000</td>
<td>0170</td>
<td>120</td>
<td>0x78</td>
<td>x</td>
<td>小写字母x</td>
</tr>
<tr>
<td>0111 1001</td>
<td>0171</td>
<td>121</td>
<td>0x79</td>
<td>y</td>
<td>小写字母y</td>
</tr>
<tr>
<td>0111 1010</td>
<td>0172</td>
<td>122</td>
<td>0x7A</td>
<td>z</td>
<td>小写字母z</td>
</tr>
<tr>
<td>0111 1011</td>
<td>0173</td>
<td>123</td>
<td>0x7B</td>
<td>{</td>
<td>开花括号</td>
</tr>
<tr>
<td>0111 1100</td>
<td>0174</td>
<td>124</td>
<td>0x7C</td>
<td>|</td>
<td>垂线</td>
</tr>
<tr>
<td>0111 1101</td>
<td>0175</td>
<td>125</td>
<td>0x7D</td>
<td>}</td>
<td>闭花括号</td>
</tr>
<tr>
<td>0111 1110</td>
<td>0176</td>
<td>126</td>
<td>0x7E</td>
<td>~</td>
<td>波浪号</td>
</tr>
<tr>
<td>0111 1111</td>
<td>0177</td>
<td>127</td>
<td>0x7F</td>
<td>DEL (delete)</td>
<td>删除</td>
</tr>
</tbody></table>
<h3 id="2-扩展ASCII码"><a href="#2-扩展ASCII码" class="headerlink" title="2.扩展ASCII码"></a>2.扩展ASCII码</h3><p>在英语中，用128个符号编码便可以表示所有，但是用来表示其他语言，128个符号是不够的。比如，在<a href="https://baike.baidu.com/item/%E6%B3%95%E8%AF%AD/660115">法语</a>中，字母上方有注音符号，它就无法用 ASCII 码表示。于是，一些欧洲国家就决定，利用字节中闲置的最高位编入新的符号。比如，法语中的é的编码为130（二进制10000010）。这样一来，这些欧洲国家使用的编码体系，可以表示最多256个符号 [5] 。</p>
<p>但是，这里又出现了新的问题。不同的国家有不同的字母，因此，哪怕它们都使用256个符号的编码方式，代表的字母却不一样。比如，130在<a href="https://baike.baidu.com/item/%E6%B3%95%E8%AF%AD/660115">法语</a>编码中代表了é，在<a href="https://baike.baidu.com/item/%E5%B8%8C%E4%BC%AF%E6%9D%A5%E8%AF%AD/2612441">希伯来语</a>编码中却代表了字母Gimel (ג)，在<a href="https://baike.baidu.com/item/%E4%BF%84%E8%AF%AD/315852">俄语</a>编码中又会代表另一个符号。但是不管怎样，所有这些编码方式中，0–127表示的符号是一样的，不一样的只是128–255的这一段 [5] 。</p>
<p>至于<a href="https://baike.baidu.com/item/%E4%BA%9A%E6%B4%B2/133681">亚洲</a>国家的文字，使用的符号就更多了，汉字就多达10万左右。一个字节只能表示256种符号，肯定是不够的，就必须使用多个字节表达一个符号。比如，简体中文常见的编码方式是 <a href="https://baike.baidu.com/item/GB2312/483170">GB2312</a>，使用两个字节表示一个汉字，所以理论上最多可以表示 256 x 256 = 65536 个符号 [5] 。</p>
<h3 id="3-GB2312-80编码"><a href="#3-GB2312-80编码" class="headerlink" title="3.GB2312-80编码"></a>3.GB2312-80编码</h3><p>《信息交换用汉字编码字符集》是由中国<a href="https://baike.baidu.com/item/%E5%9B%BD%E5%AE%B6%E6%A0%87%E5%87%86%E6%80%BB%E5%B1%80">国家标准总局</a>1980年发布，1981年5月1日开始实施的一套国家标准，标准号是[GB 2312](<a href="https://baike.baidu.com/item/GB">https://baike.baidu.com/item/GB</a> 2312)—1980。</p>
<p>GB2312编码适用于汉字处理、汉字通信等系统之间的信息交换，通行于中国大陆；新加坡等地也采用此编码。中国大陆几乎所有的中文系统和国际化的软件都支持GB 2312。</p>
<p>基本集共收入汉字6763个和非汉字图形字符682个。整个字符集分成94个区，每区有94个位。每个区位上只有一个字符，因此可用所在的区和位来对汉字进行编码，称为<a href="https://baike.baidu.com/item/%E5%8C%BA%E4%BD%8D%E7%A0%81/11027286">区位码</a>。</p>
<p>GB 2312标准共收录6763个汉字，其中一级汉字3755个，二级汉字3008个；同时，GB 2312收录了包括<a href="https://baike.baidu.com/item/%E6%8B%89%E4%B8%81%E5%AD%97%E6%AF%8D">拉丁字母</a>、<a href="https://baike.baidu.com/item/%E5%B8%8C%E8%85%8A%E5%AD%97%E6%AF%8D">希腊字母</a>、日文平假名及片假名字母、俄语西里尔字母在内的682个<a href="https://baike.baidu.com/item/%E5%85%A8%E8%A7%92%E5%AD%97%E7%AC%A6">全角字符</a>。</p>
<p>GB 2312的出现，基本满足了汉字的计算机处理需要，它所收录的汉字已经覆盖中国大陆99.75%的使用频率。</p>
<p>对于人名、古汉语等方面出现的罕用字，GB 2312不能处理，这导致了后来<a href="https://baike.baidu.com/item/GBK">GBK</a>及GB 18030汉字字符集的出现。</p>
<h3 id="4-GBK编码"><a href="#4-GBK编码" class="headerlink" title="4.GBK编码"></a>4.GBK编码</h3><p>GBK全称《汉字内码扩展规范》（GBK即“国标”、“扩展”汉语拼音的第一个字母，英文名称：Chinese Internal Code Specification） ，<a href="https://baike.baidu.com/item/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD/106554">中华人民共和国</a>全国信息技术标准化技术委员会1995年12月1日制订，<a href="https://baike.baidu.com/item/%E5%9B%BD%E5%AE%B6%E6%8A%80%E6%9C%AF%E7%9B%91%E7%9D%A3%E5%B1%80/8963422">国家技术监督局</a>标准化司、电子工业部科技与<a href="https://baike.baidu.com/item/%E8%B4%A8%E9%87%8F%E7%9B%91%E7%9D%A3">质量监督</a>司1995年12月15日联合以技监标函1995 229号文件的形式，将它确定为技术规范指导性文件。</p>
<p>GBK编码，是在<a href="https://baike.baidu.com/item/GB2312-80">GB2312-80</a>标准基础上的<a href="https://baike.baidu.com/item/%E5%86%85%E7%A0%81">内码</a>扩展规范，使用了双<a href="https://baike.baidu.com/item/%E5%AD%97%E8%8A%82">字节</a>编码方案，其编码范围从8140至FEFE（剔除xx7F），共23940个码位，共收录了21003个汉字，完全兼容<a href="https://baike.baidu.com/item/GB2312-80">GB2312-80</a>标准，支持国际标准ISO/IEC10646-1和国家标准GB13000-1中的全部中日韩汉字，并包含了<a href="https://baike.baidu.com/item/BIG5/1780793">BIG5</a>编码中的所有汉字。GBK编码方案于1995年10月制定， 1995年12月正式发布，中文版的<a href="https://baike.baidu.com/item/WIN95">WIN95</a>、WIN98、[WINDOWS NT](<a href="https://baike.baidu.com/item/WINDOWS">https://baike.baidu.com/item/WINDOWS</a> NT)以及WINDOWS 2000、WINDOWS XP、WIN 7等都支持GBK编码方案。</p>
<h3 id="5-GB18030编码"><a href="#5-GB18030编码" class="headerlink" title="5.GB18030编码"></a>5.GB18030编码</h3><p>国家标准GB18030-2000《信息交换用汉字编码<a href="https://baike.baidu.com/item/%E5%AD%97%E7%AC%A6%E9%9B%86">字符集</a>基本集的补充》是我国继GB2312-1980和GB13000-1993之后最重要的汉字编码标准，是我国计算机系统必须遵循的基础性标准之一。</p>
<p>GB18030-2000编码标准是由信息产业部和国家质量技术监督局在2000年 3月17日联合发布的，并且将作为一项国家标准在2001年的1月正式强制执行。</p>
<p>GB18030-2005《信息技术中文编码<a href="https://baike.baidu.com/item/%E5%AD%97%E7%AC%A6">字符</a>集》是我国制订的以汉字为主并包含多种我国少数民族文字（如藏、蒙古、傣、彝、朝鲜、维吾尔文等）的超大型中文编码字符集强制性标准，其中收入汉字70000余个。</p>
<h3 id="6-Unicode编码"><a href="#6-Unicode编码" class="headerlink" title="6.Unicode编码"></a>6.Unicode编码</h3><p>统一码，也叫万国码、单一码（Unicode）是计算机科学领域里的一项业界标准，包括字符集、编码方案等。Unicode 是为了解决传统的字符编码方案的局限而产生的，它为每种语言中的每个字符设定了统一并且唯一的<a href="https://baike.baidu.com/item/%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%BC%96%E7%A0%81/1758517">二进制编码</a>，以满足跨语言、跨平台进行文本转换、处理的要求。1990年开始研发，1994年正式发布1.0版本，2020年发布13.0版本。</p>
<p><a href="https://baike.baidu.com/item/Unicode/750500">Unicode</a>是国际组织制定的可以容纳世界上所有文字和符号的<a href="https://baike.baidu.com/item/%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81/8446880">字符编码</a>方案。Unicode用数字0-0x10FFFF来映射这些字符，最多可以容纳1114112个字符，或者说有1114112个码位。码位就是可以分配给字符的数字。<a href="https://baike.baidu.com/item/UTF-8/481798">UTF-8</a>、<a href="https://baike.baidu.com/item/UTF-16/9032026">UTF-16</a>、<a href="https://baike.baidu.com/item/UTF-32/734460">UTF-32</a>都是将数字转换到程序数据的编码方案。</p>
<h3 id="7-UTF-8编码"><a href="#7-UTF-8编码" class="headerlink" title="7.UTF-8编码"></a>7.UTF-8编码</h3><p>UTF-8（8位元，Universal Character Set/Unicode Transformation Format）是针对Unicode的一种可变长度字符编码。它可以用来表示Unicode标准中的任何字符，而且其编码中的第一个字节仍与<a href="https://baike.baidu.com/item/ASCII/309296">ASCII</a>相容，使得原来处理ASCII字符的软件无须或只进行少部分修改后，便可继续使用。因此，它逐渐成为<a href="https://baike.baidu.com/item/%E7%94%B5%E5%AD%90%E9%82%AE%E4%BB%B6/111106">电子邮件</a>、<a href="https://baike.baidu.com/item/%E7%BD%91%E9%A1%B5/99347">网页</a>及其他存储或传送文字的应用中，优先采用的编码。</p>
<p>Unicode只是一组字符设定或者说是从数字和字符之间的逻辑映射的概念编码，但是它并没有指定代码点如何在计算机上存储。UCS4、UTF-8、UTF-16（UTF后的数字代表编码的最小单位，如UTF-8表示最小单位1字节（=8 bits）,所以它可以使用1、2、3字节等进行编码，UTF-16表示最小单位2字节，所以它可以使用2、4字节进行编码）都是Unicode的编码方案。其中UTF-8因可以兼容<a href="https://baike.baidu.com/item/ASCII/309296">ASCII</a>而被广泛使用。</p>
]]></content>
      <categories>
        <category>常用易忘内容</category>
      </categories>
      <tags>
        <tag>编码</tag>
      </tags>
  </entry>
  <entry>
    <title>1.HTML基础</title>
    <url>/2021/08/05/1-html-ji-chu/</url>
    <content><![CDATA[<h2 id="1-HTTP和WEB工作原理"><a href="#1-HTTP和WEB工作原理" class="headerlink" title="1.HTTP和WEB工作原理"></a>1.HTTP和WEB工作原理</h2><p> 超文本传输协议（HTTP，HyperText Transfer Protocol）是互联网上应用最为广泛的一种网络协议。所有的 WWW 文件都必须遵守这个标准。</p>
<p> WEB 本意是蜘蛛网和网的意思。现广泛译作网络、互联网等技术领域。表现为三种形式，即超文本（hypertext）、超媒体（hypermedia）、超文本传输协议（HTTP）等。</p>
<p> 当你想进入一个网页，或者其他网络资源的时候，通常你要首先在你的浏览器上键入你想访问网页的统一资源定位符（Uniform Resource Locator)，或者通过超链接方式链接到那个网页或网络资源。这之后的工作首先是 URL 的服务器名部分，被名为域名系统的分布于全球的因特网数据库解析，并根据解析结果决定进入哪一个 IP 地址。</p>
<p> 接下来的步骤是给所要访问的网页，向在那个IP地址工作的服务器发送一个 HTTP 请求。在通常情况下，HTML 文本、图片和构成该网页的一切其他文件很快会被逐一请求并发送回用户。</p>
<p> 网络浏览器接下来的工作是把 HTML、CSS 和其他接受到的文件所描述的内容，加上图像、链接和其他必须的资源，显示给用户。这些就构成了你所看到的“网页”。</p>
<p> 大多数的网页自身包含有超链接指向其他相关网页，可能还有下载、源文献、定义和其他网络资源。像这样通过超链接，把有用的相关资源组织在一起的集合，就形成了一个所谓的信息的“网”。这个网在因特网上被方便使用，就构成了最早在 1990 年代初蒂姆·伯纳斯-李所说的万维网。</p>
<h2 id="2-什么是HTML"><a href="#2-什么是HTML" class="headerlink" title="2.什么是HTML"></a>2.什么是HTML</h2><p> HTML 就是万维网中的超文本，HTML 也叫做超文本标记语言。“超文本”就是表示页面内可以包含非文字元素，如：图片、链接、音乐等等。在Web服务中，信息一般是使用 HTML 格式以超文本和超媒体方式传送的，所使用的 Internet 协议是 HTTP 协议。</p>
<p>HTML 是用来描述网页的一种语言。</p>
<ul>
<li>HTML 指的是超文本标记语言 (Hyper Text Markup Language)</li>
<li>HTML 是一种标记语言 (markup language)</li>
<li>标记语言是一套标记标签 (markup tag)</li>
<li>HTML 使用标记标签来描述网页</li>
</ul>
<p> 它是一种建立网页文件的语言，通过标记式的指令（Tag），将影像、声音、图片、文字等链接显示出来。这种标记性语言是因特网上网页的主要语言。</p>
<p> HTML 网页文件可以使用记事本、写字板、HBuilder、Sublime 等编辑工具来编写，以 <code>.htm</code> 或<code>.html </code>为文件后缀名保存。将 HTML 网页文件用浏览器打开显示，若测试没有问题则可以放到服务器（Server）上，对外发布信息。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">COPY<span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="3-HTML基础语法"><a href="#3-HTML基础语法" class="headerlink" title="3. HTML基础语法"></a>3. HTML基础语法</h2><h3 id="3-1-lt-DOCTYPE-html-gt"><a href="#3-1-lt-DOCTYPE-html-gt" class="headerlink" title="3.1. &lt;!DOCTYPE html&gt;"></a>3.1. <code>&lt;!DOCTYPE html&gt;</code></h3><p> 格式一： <code>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;</code></p>
<p> 格式二： <code>&lt;!DOCTYPE html&gt;</code> 推荐的方式 Document Type HyperText Mark-up Language，文档中超文本标记语言的类型，可告知浏览器怎么解析该文档。</p>
<p> 由于使用的场景或者版本的更替间，HTML 使用的标准不同，所以需要浏览器按照不同的标准来解析 HTML 文本内容，这就需要告知浏览器我当前的 HTML 页面是按照那种方式进行编写的。没有该声明，将是你 HTML 噩梦的开始。这行代码必须写且务必在文档首行。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">COPY<span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span><span class="comment">&lt;!-- 必须写在HTML文件首行 --&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-2-lt-html-gt-lt-html-gt"><a href="#3-2-lt-html-gt-lt-html-gt" class="headerlink" title="3.2. &lt;html&gt;&lt;/html&gt;"></a>3.2. <code>&lt;html&gt;&lt;/html&gt;</code></h3><p><code>&lt;html&gt;</code> 标签用于 HTML 文档的最开始，用来标识 HTML 文档的开始。而 <code>&lt;/html&gt;</code> 标志放在HTML 文档的结束，用来标识 HTML 文档的结束，两个标志必须一块使用。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">COPY<span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span><span class="comment">&lt;!-- 必须写在HTML文件首行 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span><span class="comment">&lt;!-- HTML文档的开始 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span><span class="comment">&lt;!-- HTML文档的结束 --&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-3-lt-head-gt-lt-head-gt"><a href="#3-3-lt-head-gt-lt-head-gt" class="headerlink" title="3.3. &lt;head&gt;&lt;/head&gt;"></a>3.3. <code>&lt;head&gt;&lt;/head&gt;</code></h3><p> <code>&lt;head&gt;</code> 和 <code>&lt;/head&gt;</code> 构成 HTML 文档的开头部分。 <code>&lt;head&gt;</code> 和 <code>&lt;/head&gt;</code> 标签之间的内容是不会在浏览器的框内显示出来的，两个标志必须一块使用。</p>
<p> 在此标志对之间可以使用 <code>&lt;title&gt;&lt;/title&gt;</code> 、 <code>&lt;meta&gt;</code> 、 <code>&lt;link&gt;</code> 、 <code>&lt;script&gt;&lt;/script&gt;</code>等标签。</p>
<p> <code>&lt;meta&gt;</code> ：用来提供关于文档的信息，起始属性为： <code>charset=&quot;utf8&quot;</code> 。表示告诉浏览器页面采用什么编码解析文档，一般来说我们就用 utf8。当然，文件保存的时候也是 utf8，而浏览器也设置 utf8即可正确显示。</p>
<p> <code>&lt;link&gt;</code> ：用来引入 CSS 文件。</p>
<p> <code>&lt;style&gt;&lt;/style&gt;</code> ：编写 CSS 代码。</p>
<p> <code>&lt;script&gt;&lt;/script&gt;</code> ：用来引入 JS 文件或编写 JS 代码。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">COPY<span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span><span class="comment">&lt;!-- 必须写在HTML文件首行 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- HTML文档的开始 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- HTML文档的开头部分 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><span class="comment">&lt;!-- 文档属性 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="comment">&lt;!-- 文档标题 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;css文件的路径&quot;</span> /&gt;</span><span class="comment">&lt;!-- 引入css文件 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span><span class="comment">&lt;!-- 编写css代码 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js文件的路径&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span><span class="comment">&lt;!-- 引入js文件或者编写js代码 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span><span class="comment">&lt;!-- HTML文档的开头结束 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span><span class="comment">&lt;!-- HTML文档的结束 --&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-4-lt-title-gt-lt-title-gt"><a href="#3-4-lt-title-gt-lt-title-gt" class="headerlink" title="3.4. &lt;title&gt;&lt;/title&gt;"></a>3.4. <code>&lt;title&gt;&lt;/title&gt;</code></h3><p> <code>&lt;title&gt;</code> 定义文档的标题。浏览器会以特殊的方式来使用标题，并且通常把它放置在浏览器窗口<br>的标题栏或状态栏上。同样，当把文档加入用户的链接列表或者收藏夹或书签列表时，标题将成为该文<br>档链接的默认名称。</p>
<p> 注意： <code>&lt;title&gt;</code> 标签位于 <code>&lt;head&gt;</code> 标签内，是 <code>&lt;head&gt;</code> 标签中唯一要求包含的东西。</p>
<h3 id="3-5-lt-meta-gt-lt-meta-gt"><a href="#3-5-lt-meta-gt-lt-meta-gt" class="headerlink" title="3.5. &lt;meta&gt;&lt;/meta&gt;"></a>3.5. <code>&lt;meta&gt;&lt;/meta&gt;</code></h3><p> <code>&lt;meta/&gt;</code>用来提供关于文档的信息。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">COPY<span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span><span class="comment">&lt;!-- 必须写在HTML文件首行 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- HTML文档的开始 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- HTML文档的开头部分 --&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- SEO搜索引擎优化策略 --&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 网站标题 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 详细描述 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;description&quot;</span> <span class="attr">content</span>=<span class="string">&quot;这里写网站内容描述&quot;</span> /&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 关键词 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;keywords&quot;</span> <span class="attr">content</span>=<span class="string">&quot;这里写关键词&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span><span class="comment">&lt;!-- HTML文档的开头结束 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span><span class="comment">&lt;!-- HTML文档的结束 --&gt;</span></span><br></pre></td></tr></table></figure>

<p> 以上三部分是SEO搜索引擎优化的主要部分。</p>
<h3 id="3-6-lt-body-gt-lt-body-gt"><a href="#3-6-lt-body-gt-lt-body-gt" class="headerlink" title="3.6. &lt;body&gt;&lt;/body&gt;"></a>3.6. <code>&lt;body&gt;&lt;/body&gt;</code></h3><p> 一般情况下浏览器上显示的内容的都放在body中，不排除其他标签可以不用body，比如frameset框架集标签。<br>​ <code>&lt;body&gt;</code> 和 <code>&lt;/body&gt;</code> 是HTML文档的主体部分，在此标志对之间可包含<code> &lt;p&gt;&lt;/p&gt;</code> 、 <code>&lt;h1&gt;&lt;/h1&gt;</code> 、 <code>&lt;br&gt;</code>、 <code>&lt;hr&gt;</code> 等众多的标志。它们所定义的文本、图像等将会在浏览器的框内显示出来。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">COPY<span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span><span class="comment">&lt;!-- 必须写在HTML文件首行 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- HTML文档的开始 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- HTML文档的开头部分 --&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- SEO搜索引擎优化策略 --&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 网站标题 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 详细描述 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;description&quot;</span> <span class="attr">content</span>=<span class="string">&quot;这里写网站内容描述&quot;</span> /&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 关键词 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;keywords&quot;</span> <span class="attr">content</span>=<span class="string">&quot;这里写关键词&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span><span class="comment">&lt;!-- HTML文档的开头结束 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- HTML文档的主体部分开始 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="comment">&lt;!-- HTML文档的主体部分结束 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span><span class="comment">&lt;!-- HTML文档的结束 --&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="4-HTML常用标签和属性"><a href="#4-HTML常用标签和属性" class="headerlink" title="4.HTML常用标签和属性"></a>4.HTML常用标签和属性</h2><p> HTML 页面是由标签组成，不同的标签浏览器对其进行不同样式和内容的渲染 ，我们需要记忆常用<br>的标签即可。大致可分为如下几类：头标签、标题、水平线、段落、换行、图片、表格、超链接、列<br>表、表单、下拉列表、div 和 span、格式化文字的。</p>
<p> HTML 标签可以拥有属性。属性提供了有关 HTML 元素的更多的信息。</p>
<p> 属性总是以名称/值对的形式出现，比如：name=”value”。</p>
<p> 属性总是在 HTML 元素的开始标签中规定。</p>
<h3 id="4-1-HTML标题"><a href="#4-1-HTML标题" class="headerlink" title="4.1. HTML标题"></a>4.1. HTML标题</h3><p> HTML 标题（Heading）是通过 <code>&lt;h1&gt;</code> - <code>&lt;h6&gt;</code> 等标签进行定义的。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">COPY<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- HTML 标题（Heading）是通过 &lt;h1&gt; - &lt;h6&gt; 等标签进行定义的 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>This is a heading<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>This is a heading<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>This is a heading<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>This is a heading<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h5</span>&gt;</span>This is a heading<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h6</span>&gt;</span>This is a heading<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="4-2-HTML段落"><a href="#4-2-HTML段落" class="headerlink" title="4.2. HTML段落"></a>4.2. HTML段落</h3><p> HTML 段落是通过 <code>&lt;p&gt;</code> 标签进行定义的。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">COPY<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- HTML 段落是通过 &lt;p&gt; 标签进行定义的 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>This is a paragraph.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>This is another paragraph.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">COPY **注意**：浏览器会自动地在标题和段落的前后添加空行。  </span><br></pre></td></tr></table></figure>

<h3 id="4-3-HTML水平线"><a href="#4-3-HTML水平线" class="headerlink" title="4.3. HTML水平线"></a>4.3. HTML水平线</h3><p> <code>&lt;hr /&gt;</code> 标签在 HTML 页面中创建水平线。 <code>&lt;hr /&gt;</code>元素可用于分隔内容。</p>
<h3 id="4-4-HTML注释"><a href="#4-4-HTML注释" class="headerlink" title="4.4. HTML注释"></a>4.4. HTML注释</h3><p> 可以将注释插入 HTML 代码中，这样可以提高其可读性，使代码更易被人理解。浏览器会忽略注<br>释，也不会显示它们。 <code>&lt;!-- This is a comment --&gt;</code></p>
<h3 id="4-5-HTML换行"><a href="#4-5-HTML换行" class="headerlink" title="4.5. HTML换行"></a>4.5. HTML换行</h3><p><code>&lt;br /&gt;</code> 元素是一个空的 HTML 元素。由于关闭标签没有任何意义，因此它没有结束标签。<br><code>&lt;br&gt;</code> 还是<code>&lt;br /&gt;</code> 您也许发现 <code>&lt;br&gt;</code> 与 <code>&lt;br /&gt;</code> 很相似。在 XHTML、XML 以及未来的 HTML<br>版本中，不允许使用没有结束标签（闭合标签）的 HTML 元素。<br>即使 <code>&lt;br /&gt;</code> 在所有浏览器中的显示都没有问题，使用 <code>&lt;br /&gt;</code> 也是更长远的保障。</p>
<h3 id="4-6-HTML链接"><a href="#4-6-HTML链接" class="headerlink" title="4.6. HTML链接"></a>4.6. HTML链接</h3><p> HTML 链接是通过 <code>&lt;a&gt;</code> 标签进行定义的。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">COPY<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- HTML 链接是通过 &lt;a&gt; 标签进行定义的 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.shsxt.com&quot;</span>&gt;</span>This is a link<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="4-7-HTML图像"><a href="#4-7-HTML图像" class="headerlink" title="4.7. HTML图像"></a>4.7. HTML图像</h3><p> HTML 图像是通过 <code>&lt;img /&gt;</code> 标签进行定义的。<br>​ 图像的名称和尺寸是以属性的形式提供的。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">COPY<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- HTML 图像是通过 &lt;img /&gt; 标签进行定义的 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/1.jpg&quot;</span> <span class="attr">title</span>=<span class="string">&quot;这是一个图片&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="4-8-HTML格式化-了解"><a href="#4-8-HTML格式化-了解" class="headerlink" title="4.8. HTML格式化(了解)"></a>4.8. HTML格式化(了解)</h3><p> 文本格式化标签。</p>
<table>
<thead>
<tr>
<th>标签</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>&lt; b &gt;</td>
<td>定义粗体文本</td>
</tr>
<tr>
<td>&lt; big &gt;</td>
<td>定义大号字</td>
</tr>
<tr>
<td>&lt; em &gt;</td>
<td>定义着重文字</td>
</tr>
<tr>
<td>&lt; i &gt;</td>
<td>定义斜体字</td>
</tr>
<tr>
<td>&lt; small &gt;</td>
<td>定义小号字</td>
</tr>
<tr>
<td>&lt; strong &gt;</td>
<td>定义加重语气</td>
</tr>
<tr>
<td>&lt; sub &gt;</td>
<td>定义下标字</td>
</tr>
<tr>
<td>&lt; sup &gt;</td>
<td>定义上标字</td>
</tr>
<tr>
<td>&lt; ins &gt;</td>
<td>定义插入字</td>
</tr>
<tr>
<td>&lt; del &gt;</td>
<td>定义删除字</td>
</tr>
</tbody></table>
<h3 id="4-9-HTML元素"><a href="#4-9-HTML元素" class="headerlink" title="4.9. HTML元素"></a>4.9. HTML元素</h3><p> HTML 文档是由 HTML 元素定义的。<br>​ HTML 元素指的是从开始标签（start tag）到结束标签（end tag）的所有代码。</p>
<table>
<thead>
<tr>
<th>开始标签</th>
<th>元素内容</th>
<th>结束标签</th>
</tr>
</thead>
<tbody><tr>
<td>&lt; p &gt;</td>
<td>This is a paragraph</td>
<td>&lt; /p &gt;</td>
</tr>
<tr>
<td>&lt; a href=”default.htm” &gt;</td>
<td>This is a link</td>
<td>&lt; /a &gt;</td>
</tr>
<tr>
<td>&lt; br /&gt;</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<p> <strong>注意</strong>：开始标签常被称为开放标签（opening tag），结束标签常称为闭合标签（closing tag）。</p>
<h4 id="4-9-1-HTML语法"><a href="#4-9-1-HTML语法" class="headerlink" title="4.9.1. HTML语法"></a>4.9.1. HTML语法</h4><ul>
<li>HTML 元素以开始标签起始</li>
<li>HTML 元素以结束标签终止</li>
<li>元素的内容是开始标签与结束标签之间的内容</li>
<li>某些 HTML 元素具有空内容（empty content）</li>
<li>空元素在开始标签中进行关闭（以开始标签的结束而结束）</li>
<li>大多数 HTML 元素可拥有属性</li>
</ul>
<h4 id="4-9-2-嵌套的-HTML-元素"><a href="#4-9-2-嵌套的-HTML-元素" class="headerlink" title="4.9.2. 嵌套的 HTML 元素"></a>4.9.2. 嵌套的 HTML 元素</h4><p> 大多数 HTML 元素可以嵌套（可以包含其他 HTML 元素）。</p>
<p> HTML 文档由嵌套的 HTML 元素构成。</p>
<h4 id="4-9-3-HTML-文档实例"><a href="#4-9-3-HTML-文档实例" class="headerlink" title="4.9.3. HTML 文档实例"></a>4.9.3. HTML 文档实例</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">COPY<span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    	<span class="tag">&lt;<span class="name">p</span>&gt;</span>This is my first paragraph.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p> 上面的例子包含三个 HTML 元素。</p>
<h4 id="4-9-4-HTML-实例解释"><a href="#4-9-4-HTML-实例解释" class="headerlink" title="4.9.4. HTML 实例解释"></a>4.9.4. HTML 实例解释</h4><h5 id="4-9-4-1-元素"><a href="#4-9-4-1-元素" class="headerlink" title="4.9.4.1.元素"></a>4.9.4.1.元素</h5><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">COPY&lt;p&gt;This <span class="keyword">is</span> <span class="keyword">my</span> <span class="keyword">first</span> <span class="built_in">paragraph</span>.&lt;/p&gt;</span><br></pre></td></tr></table></figure>

<p> 这个 <code>&lt;p&gt;</code> 元素定义了 HTML 文档中的一个段落。<br>​ 这个元素拥有一个开始标签 <code>&lt;p&gt;</code> ，以及一个结束标签 <code>&lt;/p&gt;</code> 。<br>​ 元素内容是：<code>This is my first paragraph</code> .</p>
<h5 id="4-9-4-2-lt-body-gt-元素"><a href="#4-9-4-2-lt-body-gt-元素" class="headerlink" title="4.9.4.2.&lt;body&gt; 元素"></a>4.9.4.2.<code>&lt;body&gt;</code> 元素</h5><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">COPY&lt;body&gt;</span><br><span class="line">	&lt;p&gt;This <span class="keyword">is</span> <span class="keyword">my</span> <span class="keyword">first</span> <span class="built_in">paragraph</span>.&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>

<p> <code>&lt;body&gt;</code> 元素定义了 HTML 文档的主体。<br>​ 这个元素拥有一个开始标签 <code>&lt;body&gt;</code> ，以及一个结束标签 <code>&lt;/body&gt;</code> 。<br>​ 元素内容是另一个 HTML 元素（p 元素）。</p>
<h5 id="4-9-4-3-lt-html-gt-元素"><a href="#4-9-4-3-lt-html-gt-元素" class="headerlink" title="4.9.4.3. &lt;html&gt; 元素"></a>4.9.4.3. <code>&lt;html&gt;</code> 元素</h5><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">COPY<span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    	<span class="tag">&lt;<span class="name">p</span>&gt;</span>This is my first paragraph.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p> <code>&lt;html&gt;</code> 元素定义了整个 HTML 文档。<br>​ 这个元素拥有一个开始标签 <code>&lt;html&gt;</code> ，以及一个结束标签 <code>&lt;/html&gt;</code> 。<br>​ 元素内容是另一个 HTML 元素（body 元素）。不要忘记结束标签。<br>​ 即使您忘记了使用结束标签，大多数浏览器也会正确地显示 HTML。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">COPY<span class="comment">&lt;!-- 下面的写法不推荐 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>This is my first paragraph.</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>This is my first paragraph.</span><br></pre></td></tr></table></figure>

<p> 上面的例子在大多数浏览器中都没问题，但不要依赖这种做法。忘记使用结束标签会产生不可预料<br>的结果或错误。<br>​ <strong>注意</strong>：未来的 HTML 版本不允许省略结束标签。</p>
<h5 id="4-9-4-4-空的-HTML-元素"><a href="#4-9-4-4-空的-HTML-元素" class="headerlink" title="4.9.4.4. 空的 HTML 元素"></a>4.9.4.4. 空的 HTML 元素</h5><p> 没有内容的 HTML 元素被称为空元素。空元素是在开始标签中关闭的。<br>​ <code>&lt;br&gt;</code> 就是没有关闭标签的空元素（ <code>&lt;br&gt;</code> 标签定义换行）。<br>​ 在未来版本的 HTML 中，所有元素都必须被关闭。<br>​ 在开始标签中添加斜杠，比如 <code>&lt;br /&gt;</code>，是关闭空元素的正确方法。<br>​ 即使 <code>&lt;br&gt;</code> 在所有浏览器中都是有效的，但使用 <code>&lt;br /&gt;</code> 其实是更长远的保障。</p>
<h5 id="4-9-4-5-HTML提示：使用小写标签"><a href="#4-9-4-5-HTML提示：使用小写标签" class="headerlink" title="4.9.4.5. HTML提示：使用小写标签"></a>4.9.4.5. HTML提示：使用小写标签</h5><p> HTML 标签对大小写不敏感： <code>&lt;P&gt;</code> 等同于<code>&lt;p&gt;</code> 。<br>​ W3School 使用的是小写标签，因为万维网联盟（W3C）在 HTML 4 中推荐使用小写，在未来 HTML<br>版本中强制使用小写。</p>
<h3 id="4-10-div和span"><a href="#4-10-div和span" class="headerlink" title="4.10. div和span"></a>4.10. div和span</h3><p> <code>&lt;div&gt;</code> 是一个块级元素，通常与css配合使用，用于布局。</p>
<p> <code>&lt;div&gt;</code> 标签可以把文档分割为独立的、不同的部分。它可以用作严格的组织工具，并且不使用任何格式与其关联。</p>
<p> <code>&lt;div&gt;</code> 是一个块级元素。这意味着它的内容自动地开始一个新行。实际上，换行是 <code>&lt;div&gt;</code> 固有的唯一格式表现。可以通过 <code>&lt;div&gt;</code> 的 class 或 id 应用额外的样式。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">COPY<span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>HTML_div_span<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 构建一个div 设置边框黑色1px 宽度200px高度200px 字体居中 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px solid black;width: 200px;height: 200px;textalign: center;&quot;</span>&gt;</span>这是一个div<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 构建一个span 字体为红色 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;color: red;&quot;</span>&gt;</span>这是一个span<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p> 标签的分类：HTML 中标签元素三种不同类型：块状元素，行内元素，行内块状元素。</p>
<ul>
<li><p>块级元素特点： 元素都从新的一行开始，并且其后的元素也另起一行；元素的高度、宽度、行高<br>以及顶和底边距都可设置；元素宽度在不设置的情况下，是它本身父容器的 100%（和父元素的宽<br>度一致），除非设定一个宽度。</p>
</li>
<li><p>行内元素特点 ：和其他元素都在一行上；元素的高度、宽度及顶部和底部边距不可设置；元素的<br>宽度就是它包含的文字或图片的宽度，不可改变。</p>
</li>
<li><p>行内块状元素的特点：和其他元素都在一行上；元素的高度、宽度、行高以及顶和底边距都可设<br>置。</p>
<p>可通过浏览器查看是何种元素，后期也可以通过 CSS 进行修改。</p>
</li>
</ul>
<h3 id="4-11-HTML表格"><a href="#4-11-HTML表格" class="headerlink" title="4.11. HTML表格"></a>4.11. HTML表格</h3><p> 表格由 <code>&lt;table&gt;</code> 标签来定义。每个表格均有若干行（由 <code>&lt;tr&gt;</code> 标签定义），每行被分割为若干<br>单元格（由 <code>&lt;td&gt;</code> 标签定义）。字母 td 指表格数据（table data），即数据单元格的内容。数据单<br>元格可以包含文本、图片、列表、段落、表单、水平线、表格等等。</p>
<p><strong>表格和边框属性</strong></p>
<p> 如果不定义边框属性，表格将不显示边框。有时这很有用，但是大多数时候，我们希望显示边框。</p>
<p><strong>表格的表头</strong></p>
<p> 表格的表头使用 <code>&lt;th&gt;</code> 标签进行定义。<br>​ 大多数浏览器会把表头显示为粗体居中的文本。</p>
<p><strong>表格中的空单元格</strong></p>
<p> 在一些浏览器中，没有内容的表格单元显示得不太好。如果某个单元格是空的（没有内容），浏览<br>器可能无法显示出这个单元格的边框。</p>
<p> 这个空的单元格的边框没有被显示出来。为了避免这种情况，在空单元格中添加一个空格占位符<code> </code>，就可以将边框显示出来。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">COPY<span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>HTML表格<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 表格标签 属性border=&quot;1&quot; 添加表格边框粗细为1 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 设置表格标题 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">caption</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">h3</span>&gt;</span>这是一个表格<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 定义行 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">				<span class="comment">&lt;!-- th定义列 一般写在表格首行 内容会被加粗居中 --&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">th</span>&gt;</span>Heading<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">th</span>&gt;</span>Another Heading<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">				<span class="comment">&lt;!-- td定义列 --&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>row 1, cell 1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>row 1, cell 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>row 2, cell 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="4-12-HTML列表"><a href="#4-12-HTML列表" class="headerlink" title="4.12. HTML列表"></a>4.12. HTML列表</h3><h4 id="4-12-1-无序列表"><a href="#4-12-1-无序列表" class="headerlink" title="4.12.1. 无序列表"></a>4.12.1. 无序列表</h4><p> 无序列表是一个项目的列表，此列项目使用粗体圆点（典型的小黑圆圈）进行标记。<br>​ 无序列表始于 <code>&lt;ul&gt;</code> 标签。每个列表项始于<code>&lt;li&gt;</code> 。<br>​ 列表项内部可以使用段落、换行符、图片、链接以及其他列表等等。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">COPY<span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>HTML列表<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">h4</span>&gt;</span>一个无序列表：<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">li</span>&gt;</span>咖啡<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">li</span>&gt;</span>茶<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">li</span>&gt;</span>牛奶<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="4-12-2-有序列表"><a href="#4-12-2-有序列表" class="headerlink" title="4.12.2. 有序列表"></a>4.12.2. 有序列表</h4><p> 有序列表也是一列项目，列表项目使用数字进行标记。<br>​ 有序列表始于 <code>&lt;ol&gt;</code> 标签。每个列表项始于 <code>&lt;li&gt;</code> 标签。<br>​ 列表项内部可以使用段落、换行符、图片、链接以及其他列表等等。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">COPY<span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>HTML列表<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">h4</span>&gt;</span>一个有序列表：<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">li</span>&gt;</span>咖啡<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">li</span>&gt;</span>牛奶<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">li</span>&gt;</span>茶<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">ol</span> <span class="attr">start</span>=<span class="string">&quot;50&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">li</span>&gt;</span>咖啡<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">li</span>&gt;</span>牛奶<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">li</span>&gt;</span>茶<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="4-13-HTML表单"><a href="#4-13-HTML表单" class="headerlink" title="4.13. HTML表单"></a>4.13. HTML表单</h3><h4 id="4-13-1-lt-form-gt-元素"><a href="#4-13-1-lt-form-gt-元素" class="headerlink" title="4.13.1. &lt;form&gt; 元素"></a>4.13.1. <code>&lt;form&gt;</code> 元素</h4><p> HTML 表单用于收集用户输入。<br>​ 表单元素指的是不同类型的 input 元素、复选框、单选按钮、提交按钮等等。<br>​ 表单用于向服务器传输数据。form 元素是块级元素。</p>
<p> <strong>常用属性</strong></p>
<table>
<thead>
<tr>
<th>属性</th>
<th>值</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>action</td>
<td>URL</td>
<td>规定当提交表单时向何处发送表单数据</td>
</tr>
<tr>
<td>method</td>
<td>get、post</td>
<td>规定用于发送 form-data 的 HTTP 方法</td>
</tr>
<tr>
<td>name</td>
<td>Form_name</td>
<td>规定表单的名称</td>
</tr>
</tbody></table>
<h4 id="4-13-2-lt-input-gt-元素"><a href="#4-13-2-lt-input-gt-元素" class="headerlink" title="4.13.2. &lt;input&gt; 元素"></a>4.13.2. <code>&lt;input&gt;</code> 元素</h4><p> <code>&lt;input&gt;</code> 元素是最重要的表单元素。<br>​ <code>&lt;input&gt;</code> 元素有很多形态，根据不同的 type 属性。<br>​ <strong>常用属性</strong></p>
<table>
<thead>
<tr>
<th>属性</th>
<th>值</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>alt</td>
<td>text</td>
<td>定义图像输入的替代文本</td>
</tr>
<tr>
<td>checked</td>
<td>checked</td>
<td>规定此 input 元素首次加载时应当被选中</td>
</tr>
<tr>
<td>disabled</td>
<td>disabled</td>
<td>当 input 元素加载时禁用此元素</td>
</tr>
<tr>
<td>readonly</td>
<td>readonly</td>
<td>规定输入字段为只读</td>
</tr>
<tr>
<td>maxlength</td>
<td>number</td>
<td>规定输入字段中的字符的最大长度</td>
</tr>
<tr>
<td>value</td>
<td>value</td>
<td>规定 input 元素的值</td>
</tr>
<tr>
<td>type</td>
<td>button checkbox file hidden image password radio reset submit text</td>
<td>规定 input 元素的类型按钮 复选框 文件 隐藏域 图像形按钮 密码 单选框 重置按钮 提交按钮 文 本</td>
</tr>
</tbody></table>
<h5 id="4-13-2-1-text-文本输入"><a href="#4-13-2-1-text-文本输入" class="headerlink" title="4.13.2.1. text 文本输入"></a>4.13.2.1. text 文本输入</h5><p> <code>&lt;input type=&quot;text&quot;&gt;</code> 定义用于文本输入的单行输入字段。</p>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line"><span class="keyword">COPY</span>&lt;<span class="keyword">form</span>&gt;</span><br><span class="line">	First name:&lt;<span class="keyword">br</span>&gt;</span><br><span class="line">	&lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;firstname&quot;</span> /&gt;</span><br><span class="line">	&lt;<span class="keyword">br</span>&gt; Last name:&lt;<span class="keyword">br</span>&gt;</span><br><span class="line">	&lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;lastname&quot;</span> /&gt;</span><br><span class="line">&lt;/<span class="keyword">form</span>&gt;</span><br></pre></td></tr></table></figure>

<h5 id="4-13-2-2-password-密码输入"><a href="#4-13-2-2-password-密码输入" class="headerlink" title="4.13.2.2. password 密码输入"></a>4.13.2.2. password 密码输入</h5><p> <code>&lt;input type=&quot;password&quot;&gt;</code> 定义密码字段。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">COPY<span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">	用户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">	密<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h5 id="4-13-2-3-radio-单选按钮输入"><a href="#4-13-2-3-radio-单选按钮输入" class="headerlink" title="4.13.2.3. radio 单选按钮输入"></a>4.13.2.3. radio 单选按钮输入</h5><p> <code>&lt;input type=&quot;radio&quot;&gt;</code> 定义单选按钮。</p>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line"><span class="keyword">COPY</span>&lt;<span class="keyword">form</span>&gt;</span><br><span class="line">	&lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">&quot;radio&quot;</span> name=<span class="string">&quot;sex&quot;</span> value=<span class="string">&quot;male&quot;</span> checked /&gt;Male</span><br><span class="line">	&lt;<span class="keyword">br</span>&gt;</span><br><span class="line">	&lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">&quot;radio&quot;</span> name=<span class="string">&quot;sex&quot;</span> value=<span class="string">&quot;female&quot;</span> /&gt;Female</span><br><span class="line">&lt;/<span class="keyword">form</span>&gt;</span><br></pre></td></tr></table></figure>

<h5 id="4-13-2-4-checkbox-复选框"><a href="#4-13-2-4-checkbox-复选框" class="headerlink" title="4.13.2.4. checkbox 复选框"></a>4.13.2.4. checkbox 复选框</h5><p> <code>&lt;input type=&quot;checkbox&quot;&gt;</code> 定义复选框。<br>​ 复选框允许用户在有限数量的选项中选择零个或多个选项。</p>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line"><span class="keyword">COPY</span>&lt;<span class="keyword">form</span>&gt;</span><br><span class="line">	&lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;vehicle&quot;</span> value=<span class="string">&quot;Bike&quot;</span> /&gt;I have a bike</span><br><span class="line">	&lt;<span class="keyword">br</span>&gt;</span><br><span class="line">	&lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;vehicle&quot;</span> value=<span class="string">&quot;Car&quot;</span> /&gt;I have a car</span><br><span class="line">&lt;/<span class="keyword">form</span>&gt;</span><br></pre></td></tr></table></figure>

<h5 id="4-13-2-5-submit-提交按钮"><a href="#4-13-2-5-submit-提交按钮" class="headerlink" title="4.13.2.5. submit 提交按钮"></a>4.13.2.5. submit 提交按钮</h5><p><code>&lt;input type=&quot;submit&quot;&gt;</code> 定义用于向表单处理程序（form-handler）提交表单的按钮。<br>表单处理程序通常是包含用来处理输入数据的脚本的服务器页面。</p>
<p><strong>action 属性</strong><br>action 属性定义在提交表单时执行的动作。<br>向服务器提交表单的通常做法是使用提交按钮。<br>通常，表单会被提交到 web 服务器上的网页。<br>如果省略 action 属性，则 action 会被设置为访问当前页面。</p>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line"><span class="keyword">COPY</span>&lt;<span class="keyword">form</span> action=<span class="string">&quot;http://www.shsxt.com&quot;</span>&gt;</span><br><span class="line">	First name:</span><br><span class="line">	&lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;firstname&quot;</span> value=<span class="string">&quot;Mickey&quot;</span> /&gt;</span><br><span class="line">	&lt;<span class="keyword">br</span> /&gt;</span><br><span class="line">	Last name:</span><br><span class="line">	&lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;lastname&quot;</span> value=<span class="string">&quot;Mouse&quot;</span> /&gt;</span><br><span class="line">	&lt;<span class="keyword">br</span> /&gt;&lt;<span class="keyword">br</span> /&gt;</span><br><span class="line">	&lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;Submit&quot;</span> /&gt;</span><br><span class="line">&lt;/<span class="keyword">form</span>&gt;</span><br></pre></td></tr></table></figure>

<h5 id="4-13-2-6-select-下拉列表"><a href="#4-13-2-6-select-下拉列表" class="headerlink" title="4.13.2.6. select 下拉列表"></a>4.13.2.6. select 下拉列表</h5><p> 定义一个下拉列表。</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">COPY</span>&lt;<span class="keyword">select</span> <span class="type">name</span>=&quot;city&quot;&gt;</span><br><span class="line">	&lt;<span class="keyword">option</span> <span class="keyword">value</span>=&quot;sh&quot;&gt;上海&lt;/<span class="keyword">option</span>&gt;</span><br><span class="line">	&lt;<span class="keyword">option</span> <span class="keyword">value</span>=&quot;bj&quot;&gt;北京&lt;/<span class="keyword">option</span>&gt;</span><br><span class="line">	&lt;<span class="keyword">option</span> <span class="keyword">value</span>=&quot;ah&quot;&gt;安徽&lt;/<span class="keyword">option</span>&gt;</span><br><span class="line">	&lt;<span class="keyword">option</span> <span class="keyword">value</span>=&quot;zz&quot;&gt;郑州&lt;/<span class="keyword">option</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">select</span>&gt;</span><br></pre></td></tr></table></figure>

<h5 id="4-13-2-7-textarea-文本域"><a href="#4-13-2-7-textarea-文本域" class="headerlink" title="4.13.2.7. textarea 文本域"></a>4.13.2.7. textarea 文本域</h5><p> 该标签定义多行的文本输入控件。文本区中可容纳无限数量的文本，可以通过 cols 和 rows 属性来<br>规定 textarea 的尺寸。cols 规定文本区内的可见宽度。rows 规定文本区内的可见行数。</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">COPY</span>&lt;textarea <span class="type">name</span>=&quot;message&quot; <span class="keyword">rows</span>=&quot;10&quot; cols=&quot;30&quot;&gt;</span><br><span class="line">	The cat was playing <span class="keyword">in</span> the garden.</span><br><span class="line">&lt;/textarea&gt;</span><br></pre></td></tr></table></figure>

<h5 id="4-13-2-8-button-按钮"><a href="#4-13-2-8-button-按钮" class="headerlink" title="4.13.2.8. button 按钮"></a>4.13.2.8. button 按钮</h5><p> <code>&lt;button&gt;</code> 元素定义可点击的按钮。<br>​ <strong>常用属性</strong></p>
<table>
<thead>
<tr>
<th>属性</th>
<th>值</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>disabled</td>
<td>disabled</td>
<td>禁用该按钮</td>
</tr>
<tr>
<td>type</td>
<td>button、submit、reset</td>
<td>规定按钮的类型</td>
</tr>
<tr>
<td>value</td>
<td>text</td>
<td>规定按钮的初始值</td>
</tr>
<tr>
<td>name</td>
<td>button_name</td>
<td>规定按钮的名称</td>
</tr>
</tbody></table>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">COPY<span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span>&gt;</span>Click Me!<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h5 id="4-13-2-9-label-标注标签"><a href="#4-13-2-9-label-标注标签" class="headerlink" title="4.13.2.9. label 标注标签"></a>4.13.2.9. label 标注标签</h5><p> <code>&lt;label&gt;</code> 标签为input 元素定义标注（标记）。<br>​ label元素不会呈现任何的特殊效果。label 标签的 for 属性应当与相关元素的 id 属性相同。</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">COPY&lt;label <span class="attribute">for</span>=<span class="string">&quot;username&quot;</span>&gt;用户名：&lt;/label&gt;</span><br><span class="line">&lt;input <span class="attribute">type</span>=<span class="string">&quot;text&quot;</span> <span class="attribute">id</span>=<span class="string">&quot;username&quot;</span> <span class="attribute">name</span>=<span class="string">&quot;username&quot;</span>/&gt;</span><br></pre></td></tr></table></figure>

<h3 id="4-14-HTML属性"><a href="#4-14-HTML属性" class="headerlink" title="4.14. HTML属性"></a>4.14. HTML属性</h3><p> HTML 标签可以拥有属性。属性提供了有关 HTML 元素的更多的信息。<br>​ 属性总是以名称/值对的形式出现，比如：name=”value”。<br>​ 属性总是在 HTML 元素的开始标签中规定。</p>
<h4 id="4-14-1-HTML提示：使用小写属性"><a href="#4-14-1-HTML提示：使用小写属性" class="headerlink" title="4.14.1. HTML提示：使用小写属性"></a>4.14.1. HTML提示：使用小写属性</h4><p> 属性和属性值对大小写不敏感。<br>​ 不过，万维网联盟在其 HTML 4 推荐标准中推荐小写的属性/属性值。<br>​ 而新版本的 HTML 要求使用小写属性。</p>
<h4 id="4-14-2-始终为属性值加引号"><a href="#4-14-2-始终为属性值加引号" class="headerlink" title="4.14.2. 始终为属性值加引号"></a>4.14.2. 始终为属性值加引号</h4><p> 属性值应该始终被包括在引号内。双引号是最常用的，不过使用单引号也没有问题。<br>​ 在某些个别的情况下，比如属性值本身就含有双引号，那么您必须使用单引号，例如：</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">COPY</span>&lt;<span class="keyword">input</span> <span class="type">name</span>=<span class="string">&#x27;Bill &quot;HelloWorld&quot; Gates&#x27;</span> /&gt;</span><br></pre></td></tr></table></figure>

<p>根据百度百科查询自己喜欢的人物，制作其人物简历。（css文件直接导入，按照文档样式说明使用）</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">COPY<span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 文档的属性 告诉浏览器采用什么编码解析 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>人物简历——吴彦祖<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 引入 CSS 文件 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/resume.css&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 整个页面布局 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- h1 标题标签 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">h1</span>&gt;</span>人物简历——吴彦祖<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 导航信息 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;navigation&quot;</span>&gt;</span></span><br><span class="line">				<span class="comment">&lt;!-- 无序列表 --&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">					<span class="comment">&lt;!-- a 配置了锚点 --&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#1&quot;</span>&gt;</span>基本信息<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#2&quot;</span>&gt;</span>早年经历<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#3&quot;</span>&gt;</span>演艺经历<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#4&quot;</span>&gt;</span>获奖记录<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#5&quot;</span>&gt;</span>社会活动<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#6&quot;</span>&gt;</span>联系方式<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 图片和视频 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">&quot;margin&quot;</span> <span class="attr">src</span>=<span class="string">&quot;img/Daniel_Wu.jpg&quot;</span> <span class="attr">title</span>=<span class="string">&quot;吴彦祖&quot;</span> <span class="attr">width</span>=<span class="string">&quot;200px&quot;</span> <span class="attr">height</span>=<span class="string">&quot;277px&quot;</span> /&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">video</span> <span class="attr">class</span>=<span class="string">&quot;margin&quot;</span> <span class="attr">src</span>=<span class="string">&quot;mp4/Daniel_Wu.mp4&quot;</span> <span class="attr">title</span>=<span class="string">&quot;吴彦祖晒偶像照为其庆生&quot;</span> <span class="attr">controls</span> <span class="attr">height</span>=<span class="string">&quot;277px&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 所有人物信息 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;margin&quot;</span>&gt;</span></span><br><span class="line">				<span class="comment">&lt;!-- 基本信息 --&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;word&quot;</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">h2</span>&gt;</span>基本信息<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">p</span>&gt;</span>吴彦祖（Daniel</span><br><span class="line">						Wu），1974年9月30日出生于美国旧金山，华语影视男演员、导演、制片人，毕业于美国俄勒冈大学。1998年出演了个人首部电影作品《美少年之恋》，从而踏入演艺圈；同年，凭借文艺片《玻璃之城》提名第18届香港电影金像奖最佳新演员。2001年，主演文艺片《游园惊梦》。2003年，凭借动作片《旺角黑夜》提名第24届香港电影金像奖最佳男主角；同年，首次担任电影监制并主演了惊悚片《妖夜回廊》。</span><br><span class="line">					<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">				<span class="comment">&lt;!-- 早年经历信息 --&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;word&quot;</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">h2</span>&gt;</span>早年经历<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">						吴彦祖出生于加利福尼亚州伯克利，并在奥林达长大。6岁时，吴彦祖在看完功夫电影《少林寺》后，对武术产生了兴趣。11岁时，吴彦祖便拜一名北京艺人为师开始习武，教他的师父是吴彦祖的母亲找的，而此前，他的母亲还担心他学会了功夫跟人打架，但最后还是拗不过他对习武的热情。高中时，吴彦祖也曾叛逆过，经常在街上玩滑板，听的是朋克、重金属、饶舌等地下音乐，喜欢打架更甚于学习。这一切直至他的母亲因心脏病住院才有了彻底的改变。在母亲生病期间，吴彦祖白天在学校认真读书，下课后就到医院陪母亲。为此他甚至去学习了简单的气功疗法，用来辅助母亲的治疗。</span><br><span class="line">					<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">						1993年，吴彦祖在美国俄勒冈大学攻读建筑系，并获得建筑副修奖学金。1994年，吴彦祖赢得California Martial Art</span><br><span class="line">						Competitions的亚军，并在美国西岸排名第二位。同时，吴彦祖还成立了俄勒冈大学中国武术学会，并成为第一任教练，收了二十几个徒弟，一共教了五年。1995年，吴彦祖随师父到北京什刹海武校参加集训，并获得了北京国际武术比赛长拳组第五名，太极拳组第六名。</span><br><span class="line">					<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">						1997年，毕业后的吴彦祖前往香港旅行，后在姐姐的建议下开始当模特。四个月后，导演杨凡在看到吴彦祖拍摄的服装广告后，与他接洽成为他下一部电影的演员，而吴彦祖表示自己没有表演经验而拒绝了。后来杨凡天天给吴彦祖打电话并说服了他。</span><br><span class="line">					<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">				<span class="comment">&lt;!-- 演艺经历信息 --&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;3&quot;</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">h2</span>&gt;</span>演艺经历<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">th</span>&gt;</span>时期<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">th</span>&gt;</span>经历<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">							<span class="comment">&lt;!-- td列标签 无任何效果 --&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span>1998年<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span>《美少年之恋》，他在片中饰演帅气十足的警察Sam<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span>1999年<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span>吴彦祖与成龙、舒淇合作主演的爱情喜剧片《玻璃樽》上映<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span>2000年<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span>首次与林超贤导演合作，并出演了警匪动作片《重装警察》<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span>2001年<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span>与古天乐合作出演了动作片《野兽之瞳》，在片中饰演一对拳击兄弟<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span>2002年<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span>吴彦祖与杨千嬅首次合作，并出演了爱情喜剧片《新扎师妹》<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span>2004年<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span>与张柏芝合作，出演由尔冬升执导的动作剧情片《旺角黑夜》 <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span>2005年<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span>吴彦祖与梁家辉、郑秀文合作，主演了根据同名小说改编的爱情片《长恨歌》 <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span>2006年<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span>吴彦祖执导并担任编剧的个人电影处女作《四大天王》上映<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span>2016年<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span>由邓肯·琼斯执导的奇幻动作片《魔兽》在中国内地上映，吴彦祖在片中饰演了狡猾又残忍的古尔丹<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span>2017年<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span>吴彦祖主演的功夫美剧《荒原第二季》在美国AMC电视台首播<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span>2018年<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span>与艾丽西亚·维坎德主演的动作奇幻片《古墓丽影：源起之战》在美国和中国内地同步上映<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">				<span class="comment">&lt;!-- 获奖记录信息 --&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;4&quot;</span> <span class="attr">class</span>=<span class="string">&quot;word&quot;</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">h2</span>&gt;</span>获奖记录<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">p</span>&gt;</span>作业：请参照<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://baike.baidu.com/item/%E5%90%B4%E5%BD%A6%E7%A5%96/182990?fr=aladdin#1&quot;</span></span></span><br><span class="line"><span class="tag">							<span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>吴彦祖百度百科<span class="tag">&lt;/<span class="name">a</span>&gt;</span>完成获奖记录的表格<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">				<span class="comment">&lt;!-- 社会活动信息 --&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;5&quot;</span> <span class="attr">class</span>=<span class="string">&quot;word&quot;</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">h2</span>&gt;</span>社会活动<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">p</span>&gt;</span>2006年底，在香港“SuperStars”影展及摄影集慈善义卖活动上，余文乐、吴彦祖、郭富城等300多位明星为慈善活动所拍摄的裸照曝光。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">p</span>&gt;</span>2008年6月4日，吴彦祖录制爱心视频并参与了周迅发起的“星星之火，传爱四川”行动 。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">p</span>&gt;</span>2009年2月，吴彦祖为四川地震灾区彭州小鱼洞的群众修建永久性房屋；5月10日，吴彦祖参加了“壹家人壹起走——纪念5.12汶川行”活动</span><br><span class="line">						；7月6日，吴彦祖向四川地震灾区出资捐建5间房屋，并且表示每年都会抽出几次时间去四川探访 ；9月20日，吴彦祖携手吴君如在香港出席了“仁人家园义工周”的公益活动 。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">p</span>&gt;</span>2013年11月1日，“2014爱·家庭慈善月历”在香港推出，包括吴彦祖等在内的12个明星家庭齐心推动此公益活动。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">				<span class="comment">&lt;!-- 联系方式信息 --&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;6&quot;</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">h2</span>&gt;</span>联系方式<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;mailto://124059770@qq.com&quot;</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">p</span>&gt;</span>请将你想告诉我的话发送至我的邮箱：<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">textarea</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">				<span class="comment">&lt;!-- 返回顶部超链接 --&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>返回顶部<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 版权信息 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;center&quot;</span> <span class="attr">id</span>=<span class="string">&quot;copyright&quot;</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">p</span>&gt;</span>©2018 Baidu 使用百度前必读 | 百科协议 | 隐私政策 | 百度百科合作平台 | 京ICP证030173号<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>resume.css</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">COPY<span class="comment">/* 采用什么编码解析文件 */</span></span><br><span class="line"><span class="keyword">@charset</span> <span class="string">&quot;utf-8&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 使用id选择器渲染id=&quot;container&quot;标签的样式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="selector-id">#container</span> &#123;</span><br><span class="line">	<span class="comment">/* </span></span><br><span class="line"><span class="comment">	 * 上外边距是 0px</span></span><br><span class="line"><span class="comment">	 * 右外边距是缩进15%</span></span><br><span class="line"><span class="comment">	 * 下外边距是 0px</span></span><br><span class="line"><span class="comment">	 * 左外边距是 0px</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="attribute">margin</span>: <span class="number">0</span> <span class="number">15%</span>;</span><br><span class="line">	<span class="attribute">background</span>: <span class="number">#F0F0F0</span>;<span class="comment">/* 背景色#F0F0F0 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 使用元素选择器渲染所有h1标签的样式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">	<span class="attribute">height</span>: <span class="number">70px</span>;<span class="comment">/* 高度70px */</span></span><br><span class="line">	<span class="attribute">background</span>: cornflowerblue;<span class="comment">/* 背景色矢车菊蓝德国国花 */</span></span><br><span class="line">	<span class="attribute">line-height</span>: <span class="number">70px</span>;<span class="comment">/* 行间距70px */</span></span><br><span class="line">	<span class="attribute">color</span>: white;<span class="comment">/* 字体白色 */</span></span><br><span class="line">	<span class="attribute">text-indent</span>: <span class="number">70px</span>;<span class="comment">/* 段落缩进70px */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 使用id选择器渲染id=&quot;navigation&quot;标签的样式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="selector-id">#navigation</span> &#123;</span><br><span class="line">	<span class="attribute">text-align</span>: center;<span class="comment">/* 居中 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 使用id选择器定位到id=&quot;navigation&quot;标签</span></span><br><span class="line"><span class="comment"> * 然后渲染其子标签li的样式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="selector-id">#navigation</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">	<span class="comment">/* inline-block将li元素变为行内块元素 */</span></span><br><span class="line">	<span class="attribute">display</span>: inline-block;</span><br><span class="line">	<span class="attribute">width</span>: <span class="number">100px</span>;<span class="comment">/* 宽100px */</span></span><br><span class="line">	<span class="attribute">height</span>: <span class="number">30px</span>;<span class="comment">/* 高30px */</span></span><br><span class="line">	<span class="attribute">line-height</span>: <span class="number">30px</span>;<span class="comment">/* 行间距30px */</span></span><br><span class="line">	<span class="attribute">background-color</span>: cornflowerblue;<span class="comment">/* 背景色矢车菊蓝 */</span></span><br><span class="line">	<span class="attribute">border</span>: cornflowerblue <span class="number">1px</span> solid;<span class="comment">/* 边框1px 颜色为矢车菊蓝 */</span></span><br><span class="line">	<span class="attribute">border-radius</span>: <span class="number">0</span> <span class="number">10px</span>;<span class="comment">/* 边框左下角和右上角变圆10px */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 使用id选择器定位到id=&quot;navigation&quot;标签</span></span><br><span class="line"><span class="comment"> * 然后渲染其子标签li的子标签a的样式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="selector-id">#navigation</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span>&#123;</span><br><span class="line">	<span class="attribute">color</span>: white;<span class="comment">/* 字体白色 */</span></span><br><span class="line">	<span class="attribute">text-decoration</span>: none;<span class="comment">/* 移除超链接下划线样式*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 使用id选择器定位到id=&quot;navigation&quot;标签</span></span><br><span class="line"><span class="comment"> * 然后渲染其子标签li的子标签a的样式(渲染方式鼠标移动至标签后)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="selector-id">#navigation</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">	<span class="attribute">font-weight</span>: bold;<span class="comment">/* 字体加粗 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 使用类选择器渲染所有class=&quot;center&quot;标签的样式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="selector-class">.center</span> &#123;</span><br><span class="line">	<span class="attribute">text-align</span>: center;<span class="comment">/* 居中 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 使用类选择器渲染所有class=&quot;word&quot;标签的样式</span></span><br><span class="line"><span class="comment"> * 然后渲染其子标签p的样式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="selector-class">.word</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">	<span class="attribute">text-indent</span>: <span class="number">32px</span>;<span class="comment">/* 段落缩进32px */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 使用类选择器渲染所有class=&quot;margin&quot;标签的样式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="selector-class">.margin</span> &#123;</span><br><span class="line">	<span class="attribute">margin</span>: <span class="number">0</span> <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 使用元素选择器渲染所有textarea标签的样式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="selector-tag">textarea</span> &#123;</span><br><span class="line">	<span class="attribute">width</span>: <span class="number">100%</span>;<span class="comment">/* 宽100%于父标签 */</span></span><br><span class="line">	<span class="attribute">height</span>: <span class="number">100px</span>;<span class="comment">/* 高100px */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 使用id选择器渲染id=&quot;copyright&quot;标签的样式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="selector-id">#copyright</span> &#123;</span><br><span class="line">	<span class="attribute">height</span>: <span class="number">70px</span>;<span class="comment">/* 高70px */</span></span><br><span class="line">	<span class="attribute">background</span>: cornflowerblue;<span class="comment">/* 背景色矢车菊蓝 */</span></span><br><span class="line">	<span class="attribute">text-align</span>: center;<span class="comment">/* 居中 */</span></span><br><span class="line">	<span class="attribute">color</span>: white;<span class="comment">/* 字体白色 */</span></span><br><span class="line">	<span class="attribute">line-height</span>: <span class="number">70px</span>;<span class="comment">/* 行间距70px */</span></span><br><span class="line">	<span class="attribute">font-size</span>: <span class="number">12px</span>;<span class="comment">/* 字体大小12px */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p> 演示效果：</p>
<p><img src="https://dao-1306038680.cos.ap-shanghai.myqcloud.com/img/image-20210626222036230.png" alt="image-20210626222036230"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>3.交互JavaScript</title>
    <url>/2021/08/05/3-jiao-hu-javascript/</url>
    <content><![CDATA[<h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1.简介"></a>1.简介</h2><h3 id="1-1-什么是Javascript"><a href="#1-1-什么是Javascript" class="headerlink" title="1.1. 什么是Javascript"></a>1.1. 什么是Javascript</h3><p> JavaScript 是一种具有面向对象能力的、解释型的程序设计语言。更具体一点，它是基于对象和事<br>件驱动并具有相对安全性的客户端脚本语言。它的主要目的是，验证发往服务器端的数据、增加 Web<br>互动、加强用户体验度等。</p>
<h3 id="1-2-JavaScript发展史"><a href="#1-2-JavaScript发展史" class="headerlink" title="1.2. JavaScript发展史"></a>1.2. JavaScript发展史</h3><p> 大概在1992年,一家称作Nombas的公司开始开发一种叫做C– –(C-minus-minus,简称Cmm)的嵌入式脚<br>本语言。保持与C（和C++）的相似性，以便开发人员能很快学会。Nombas最终把Cmm的名字改成了<br>ScriptEase，而这种嵌入式脚本的理念也成为因特网的一块重要的基石。<br>​ 1995年，Netscape(网景)公司的布兰登与Sun 公司联手开发一个称为 LiveScript 的脚本语言。为了营<br>销便利，之后更名为 JavaScript(目的是在 Java 这课大树下好乘凉)。一个完整的JavaScript实现是由以下<br>3个不同部分组成的。</p>
<p><img src="https://dao-1306038680.cos.ap-shanghai.myqcloud.com/img/image-20210627085139289.png" alt="image-20210627085139289"></p>
<p> ECMAScript定义的只是这门语言的基础，与Web浏览器没有依赖关系，而在基础语法上可以构建更<br>完善的脚本语言。JavaScript的运行需要一定的环境，脱离了环境JavaScript代码是不能运行的，<br>JavaScript只能够寄生在某个具体的环境中才能够工作。JavaScript运行环境一般都由宿主环境和执行期<br>环境共同构成，其中宿主环境是由外壳程序生成的，如Web浏览器就是一个外壳程序，它提供了 一个可<br>控制浏览器窗口的宿主环境。执行期环境则由嵌入到外壳程序中的JavaScript引擎（或称为JavaScript解<br>释器）生成，在这个环境中 JavaScript能够生成内置静态对象，初始化执行环境等。</p>
<p> Web浏览器自定义的DOM组件，以面向对象方式描述的文档模型。DOM定义了表示和修改文档所需<br>的对象、这些对象的行为和属性以及这些对象之间的关系。DOM对象，是我们用传统的方法(javascript)<br>获得的对象。DOM属于浏览器，而不是JavaScript语言规范里的规定的核心内容。<br>​ 前面的DOM是为了操作浏览器中的文档，而为了控制浏览器的行为和操作(BOM)，浏览器还提供了<br>BOM（浏览器对象模型）。</p>
<p>简单的说就是下面这种结构</p>
<h4 id="1-2-1-ECMAScript-基础语法"><a href="#1-2-1-ECMAScript-基础语法" class="headerlink" title="1.2.1. ECMAScript(基础语法)"></a>1.2.1. ECMAScript(基础语法)</h4><p>JavaScript的核心语法ECMAScript描述了该语言的语法和基本对象</p>
<h4 id="1-2-2-BOM-浏览器对象模型"><a href="#1-2-2-BOM-浏览器对象模型" class="headerlink" title="1.2.2. BOM(浏览器对象模型)"></a>1.2.2. BOM(浏览器对象模型)</h4><p>浏览器对象模型（BOM）—— 描述了与浏览器进行交互的方法和接口</p>
<h4 id="1-2-3-DOM-文档对象模型"><a href="#1-2-3-DOM-文档对象模型" class="headerlink" title="1.2.3. DOM(文档对象模型)"></a>1.2.3. DOM(文档对象模型)</h4><p>文档对象模型（DOM）—— 描述了处理网页内容的方法和接口</p>
<h3 id="1-3-开发工具"><a href="#1-3-开发工具" class="headerlink" title="1.3. 开发工具"></a>1.3. 开发工具</h3><p><strong>浏览器: chrome或火狐</strong><br><strong>Hbuilder或Eclipse等等</strong><br><strong>进入“控制台”console：浏览器F12</strong></p>
<h4 id="1-3-0-1-控制台的作用"><a href="#1-3-0-1-控制台的作用" class="headerlink" title="1.3.0.1. 控制台的作用"></a>1.3.0.1. 控制台的作用</h4><p>console对象代表浏览器的JavaScript控制台，用来运行JavaScript命令，常常用来显示网页运行时候<br>的错误信息。Elements用来调试网页的html和css代码。</p>
<h2 id="2-语法格式"><a href="#2-语法格式" class="headerlink" title="2.语法格式"></a>2.语法格式</h2><h3 id="2-1-注释"><a href="#2-1-注释" class="headerlink" title="2.1. 注释"></a>2.1. 注释</h3><p> 可以将注释插入 JS代码中，这样可以提高其可读性，使代码更易被人理解。浏览器会忽略注释，也<br>不会显示它们。</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">COPY<span class="regexp">//</span> 这里的内容就是注释</span><br><span class="line"><span class="regexp">/* 这里的内容就是注释 */</span></span><br><span class="line">/*</span><br><span class="line">也可以这样多行注释</span><br><span class="line">*/</span><br></pre></td></tr></table></figure>

<h3 id="2-2-行内式"><a href="#2-2-行内式" class="headerlink" title="2.2. 行内式"></a>2.2. 行内式</h3><p> 行内式将JS定义在具体html元素中。以行内式写的JS耦合度高，这种写法会使得页面非常杂乱无<br>章，真正开发中实际上是使用嵌入式或引入外部JS文件的方式。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">COPY<span class="comment">&lt;!-- 行内式 实现点击事件，点击后加载一个警告框 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;alert(&#x27;you clicked hered!!!&#x27;)&quot;</span>&gt;</span>click here<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-3-嵌入式"><a href="#2-3-嵌入式" class="headerlink" title="2.3. 嵌入式"></a>2.3. 嵌入式</h3><p> 嵌入式通过在html页面内容开辟一段属于JS的代码区域，通常做法为在 <code>&lt;body&gt;</code> 标签中嵌套<code>&lt;script&gt;</code> 标签。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">COPY<span class="comment">&lt;!-- 页面加载后执行一个警告框 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="comment">// 页面加载后执行一个警告框</span></span></span><br><span class="line"><span class="javascript">alert(<span class="string">&#x27;this is inner js code&#x27;</span>);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-4-引入外部文件"><a href="#2-4-引入外部文件" class="headerlink" title="2.4. 引入外部文件"></a>2.4. 引入外部文件</h3><p> 在实际开发当中，很多时候都使用引入外部文件，这种形式可以使html页面更加清晰。<br>​ hello.js</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">COPY<span class="regexp">//</span> 页面加载后执行一个警告框</span><br><span class="line">alert(<span class="string">&#x27;this is a outter js document&#x27;</span>);</span><br></pre></td></tr></table></figure>

<p> index.html</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">COPY<span class="comment">&lt;!-- 引入外部js文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/hello.js&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>注意：</strong><br>我们可以将JavaScript代码放在html文件中任何位置，但是我们一般放在网页的head或者body部<br>分。由于页面的加载方式是从上往下依次加载的，而这个对我们放置的js代码运行是有影响的。</p>
<p> 放在 <code>&lt;head&gt; </code>部分，最常用的方式是在页面中head部分放置 <code>&lt;script&gt;</code> 元素，浏览器解析head部<br>分就会执行这个代码，然后才解析页面的其余部分。<br>​ 放在 <code>&lt;body&gt;</code> 部分，JavaScript代码在网页读取到该语句的时候就会执行。<br>​ 在已经有了写好的js代码，直接使用是非常简单的，但是我们需要学习的是JS的写法，使用JS的基<br>本语法，结合BOM和DOM两种接口来操作浏览器中的元素，使得我们的页面能够具有动态的效果。</p>
<h2 id="3-JavaScript基础语法"><a href="#3-JavaScript基础语法" class="headerlink" title="3.JavaScript基础语法"></a>3.JavaScript基础语法</h2><h3 id="3-1-语句"><a href="#3-1-语句" class="headerlink" title="3.1. 语句"></a>3.1. 语句</h3><p> JavaScript程序的执行单位为行（line），也就是一行一行地执行。一般情况下，每一行就是一个语<br>句。<br>​ 语句（statement）是为了完成某种任务而进行的操作，语句以分号结尾，一个分号即表示一个语句<br>结束。多个语句可以写在一行内（不建议这么写代码），但是一行写多条语句时，语句必须以分号结<br>尾。<br>​ 表达式不需要分号结尾。一旦在表达式后面添加分号，则JavaScript引擎就将表达式视为语句，这<br>样会产生一些没有任何意义的语句。</p>
<figure class="highlight axapta"><table><tr><td class="code"><pre><span class="line">COPY<span class="comment">// 一条普通的语句 支持一行写多条语句 &#x27;;&#x27;分隔</span></span><br><span class="line"><span class="built_in">var</span> num = <span class="number">2</span> * <span class="number">3</span>; <span class="built_in">var</span> <span class="built_in">str</span> = <span class="string">&#x27;我是字符串&#x27;</span>;</span><br><span class="line">alert(num);</span><br><span class="line">alert(<span class="built_in">str</span>);</span><br></pre></td></tr></table></figure>

<h3 id="3-2-关键字"><a href="#3-2-关键字" class="headerlink" title="3.2. 关键字"></a>3.2. 关键字</h3><p> 关键字也称保留字，是被JavaScript征用来有特殊含义的单词</p>
<table>
<thead>
<tr>
<th>abstract</th>
<th>arguments</th>
<th>boolean</th>
<th>break</th>
<th>byte</th>
</tr>
</thead>
<tbody><tr>
<td>case</td>
<td>catch</td>
<td>char</td>
<td>class</td>
<td>const</td>
</tr>
<tr>
<td>continue</td>
<td>debugger</td>
<td>default</td>
<td>delete</td>
<td>do</td>
</tr>
<tr>
<td>double</td>
<td>else</td>
<td>enum</td>
<td>eval</td>
<td>export</td>
</tr>
<tr>
<td>extends</td>
<td>false</td>
<td>final</td>
<td>finally</td>
<td>float</td>
</tr>
<tr>
<td>for</td>
<td>function</td>
<td>goto</td>
<td>if</td>
<td>implements</td>
</tr>
<tr>
<td>import</td>
<td>in</td>
<td>instanceof</td>
<td>int</td>
<td>interface</td>
</tr>
<tr>
<td>let</td>
<td>long</td>
<td>native</td>
<td>new</td>
<td>null</td>
</tr>
<tr>
<td>package</td>
<td>private</td>
<td>protected</td>
<td>public</td>
<td>return</td>
</tr>
<tr>
<td>short</td>
<td>static</td>
<td>super</td>
<td>switch</td>
<td>synchronized</td>
</tr>
<tr>
<td>this</td>
<td>throw</td>
<td>throws</td>
<td>transient</td>
<td>true</td>
</tr>
<tr>
<td>try</td>
<td>typeof</td>
<td>var</td>
<td>void</td>
<td>volatile</td>
</tr>
<tr>
<td>while</td>
<td>with</td>
<td>yield</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h3 id="3-3-标识符"><a href="#3-3-标识符" class="headerlink" title="3.3. 标识符"></a>3.3. 标识符</h3><p> 标识符就是一个名字，用来给变量和函数进行命名，有特定规则和规范<br>​ 规则：由 <code>Unicode字母 </code>、 <code>_ </code>、 <code>$ </code>、<code>数字 </code>、 <code>中文 </code>组成</p>
<ol>
<li>不能以数字开头</li>
<li>不能是关键字和保留字</li>
<li>严格区分大小写</li>
</ol>
<p> 规范：</p>
<ol>
<li>见名知意</li>
<li>驼峰命名或下划线规则</li>
</ol>
<figure class="highlight lasso"><table><tr><td class="code"><pre><span class="line">COPYvar a = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">var</span> abc = <span class="string">&quot;1&quot;</span>;</span><br><span class="line"><span class="built_in">var</span> _test = <span class="string">&quot;test&quot;</span>;</span><br><span class="line"><span class="built_in">var</span> $name = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line"><span class="built_in">var</span> age1 = <span class="number">18</span>;</span><br><span class="line"><span class="built_in">var</span> userPwd = <span class="string">&quot;a1b2c3&quot;</span>;</span><br><span class="line"><span class="built_in">var</span> USER_AGE = <span class="number">20</span>;</span><br></pre></td></tr></table></figure>

<h3 id="3-4-变量"><a href="#3-4-变量" class="headerlink" title="3.4. 变量"></a>3.4. 变量</h3><p> 变量即一个带名字的用来存储数据的内存空间，数据可以存储到变量中，也可以从变量中取出数<br>据。万能的盒子。</p>
<h4 id="3-4-1-变量的声明"><a href="#3-4-1-变量的声明" class="headerlink" title="3.4.1. 变量的声明"></a>3.4.1. 变量的声明</h4><p> JavaScript是一种弱类型语言，在声明变量时不需要指明数据类型，直接用var修饰符进行声明。<br>​ 变量声明和赋值：</p>
<figure class="highlight oxygene"><table><tr><td class="code"><pre><span class="line"><span class="keyword">COPY</span><span class="comment">// 先声明再赋值</span></span><br><span class="line"><span class="keyword">var</span> a;</span><br><span class="line">a = <span class="number">10</span>;</span><br><span class="line"><span class="comment">// 声明同时赋值</span></span><br><span class="line"><span class="keyword">var</span> b = <span class="number">20</span>;</span><br></pre></td></tr></table></figure>

<h4 id="3-4-2-变量的注意点"><a href="#3-4-2-变量的注意点" class="headerlink" title="3.4.2. 变量的注意点"></a>3.4.2. 变量的注意点</h4><p> a. 若只声明而没有赋值，则该变量的值为undefined。</p>
<figure class="highlight processing"><table><tr><td class="code"><pre><span class="line">COPYvar <span class="built_in">box</span>;</span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">box</span>); <span class="comment">// 在浏览器F12的控制台打印</span></span><br></pre></td></tr></table></figure>

<p> b. 变量要有定义才能使用，若变量未声明就使用，JavaScript会报错，告诉你变量未定义</p>
<figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line">COPYvar <span class="built_in">max</span> = <span class="number">100</span>;</span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">max</span>);</span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">min</span>); // 未声明就使用，报错变量未定义<span class="built_in">min</span> <span class="built_in">is</span> <span class="keyword">not</span> defined</span><br></pre></td></tr></table></figure>

<p> c. 可以在同一条var命令中声明多个变量。</p>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line"><span class="keyword">COPY</span><span class="comment">// 声明了aa, bb没有赋值 声明了cc同时赋值10</span></span><br><span class="line"><span class="keyword">var</span> aa, bb, <span class="keyword">cc</span> = 10;</span><br><span class="line"><span class="keyword">var</span> a = 10, b = 10, c= 10;</span><br><span class="line">console.<span class="built_in">log</span>(aa, bb, <span class="keyword">cc</span>);</span><br></pre></td></tr></table></figure>

<p> d. 若使用var重新声明一个已经存在的变量，是无效的。</p>
<figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line">COPYvar <span class="built_in">box</span> = <span class="number">10</span></span><br><span class="line"><span class="built_in">var</span> <span class="built_in">box</span>;</span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">box</span>);</span><br></pre></td></tr></table></figure>

<p> e. 若使用var重新声明一个已经存在的变量且赋值，则会覆盖掉前面的值</p>
<figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line">COPYvar <span class="built_in">box</span> = <span class="number">10</span></span><br><span class="line"><span class="built_in">var</span> <span class="built_in">box</span> = <span class="number">25</span></span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">box</span>);</span><br></pre></td></tr></table></figure>

<p> f. JavaScript是一种动态类型、弱类型语言，也就是说，变量的类型没有限制，可以赋予各种类型的<br>值。</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">COPYvar <span class="type">box</span> = <span class="string">&#x27;hello world&#x27;</span></span><br><span class="line">console.log(<span class="type">box</span>);</span><br></pre></td></tr></table></figure>

<h3 id="3-5-数据类型"><a href="#3-5-数据类型" class="headerlink" title="3.5. 数据类型"></a>3.5. 数据类型</h3><p> 虽说JS是弱类型语言，变量没有类型，但数据本身是有类型的。针对不同的类型，我们可以进行不<br>同的操作。JavaScript 中有6 种数据类型，其中有五种简单的数据类型：undefined、Null、布尔、数值<br>和字符串。一种复杂数据类型Object。</p>
<table>
<thead>
<tr>
<th>类型</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>数 值（Number）</td>
<td>整数和小数（比如 1 和 3.14）</td>
</tr>
<tr>
<td>字符串（String）</td>
<td>字符组成的文本（比如”Hello World”）</td>
</tr>
<tr>
<td>布尔值（Boolean）</td>
<td>true（真）和 false（假）两个特定值</td>
</tr>
<tr>
<td>undefined</td>
<td>表示“未定义”或不存在，即此处目前没有任何值</td>
</tr>
<tr>
<td>Null</td>
<td>表示空缺，即此处应该有一个值，但目前为空</td>
</tr>
<tr>
<td>对象（object）(引用)</td>
<td>各种值组成的集合</td>
</tr>
</tbody></table>
<h4 id="3-5-1-undefined"><a href="#3-5-1-undefined" class="headerlink" title="3.5.1. undefined"></a>3.5.1. undefined</h4><p> undefined类型的值是undefined。<br>​ undefined 是一个表示”无”的原始值，表示值不存在。<br>​ 当声明了一个变量而没有初始化时，这个变量的值就是undefined</p>
<figure class="highlight processing"><table><tr><td class="code"><pre><span class="line">COPYvar <span class="built_in">box</span>;</span><br><span class="line">console.<span class="built_in">log</span>(<span class="string">&#x27;box-----&#x27;</span> + <span class="built_in">box</span>); <span class="comment">// undefined</span></span><br></pre></td></tr></table></figure>

<h4 id="3-5-2-null"><a href="#3-5-2-null" class="headerlink" title="3.5.2. null"></a>3.5.2. null</h4><p> null类型是只有一个值的数据类型，即特殊的值null。<br>​ undefined派生自null，所以等值比较返回值是true。<br>​ 它表示空值，即该处的值现在为空，它表示一个空对象引用。</p>
<figure class="highlight processing"><table><tr><td class="code"><pre><span class="line">COPYvar <span class="built_in">box</span> = <span class="keyword">null</span>;<span class="comment">// 空值</span></span><br></pre></td></tr></table></figure>

<h4 id="3-5-3-boolean-布尔"><a href="#3-5-3-boolean-布尔" class="headerlink" title="3.5.3. boolean 布尔"></a>3.5.3. boolean 布尔</h4><p> 布尔类型有两个值：true、false。常用来做判断和循环的条件。</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">COPYvar flag</span> = true;</span><br></pre></td></tr></table></figure>

<h4 id="3-5-4-数值型"><a href="#3-5-4-数值型" class="headerlink" title="3.5.4. 数值型"></a>3.5.4. 数值型</h4><p> 数值型包含两种数值：整型和浮点型。</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">COPYvar</span> num<span class="number">1</span> = <span class="number">1</span>;// 整型</span><br><span class="line"><span class="attribute">var</span> num<span class="number">2</span> = <span class="number">1</span>.<span class="number">23</span>;// 浮点型</span><br></pre></td></tr></table></figure>

<h4 id="3-5-5-字符串"><a href="#3-5-5-字符串" class="headerlink" title="3.5.5. 字符串"></a>3.5.5. 字符串</h4><p> 使用 <code>&#39;&#39; </code>或 <code>&quot;&quot; </code>引起来，如：<code>&#39;sxt&#39; </code>， <code>&quot;good&quot; </code>。<br>​ 使用加号 <code>+ </code>可以进行字符串的拼接，如： <code>console.log(&#39;hello&#39; + &#39; everybody&#39;); </code>，结果<br>为 <code>&#39;helloeverybody&#39; </code>。</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">COPYvar</span> str1 = <span class="string">&#x27;sxt&#x27;</span>;</span><br><span class="line"><span class="attribute">var</span> str2 = <span class="string">&quot;good&quot;</span>;</span><br><span class="line"><span class="attribute">var</span> str3 = <span class="string">&#x27;hello&#x27;</span> + <span class="string">&#x27; everybody&#x27;</span>;</span><br></pre></td></tr></table></figure>

<h4 id="3-5-6-函数"><a href="#3-5-6-函数" class="headerlink" title="3.5.6. 函数"></a>3.5.6. 函数</h4><p> 函数是具有某个功能的代码块</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">COPYfunction <span class="function"><span class="title">f</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line"><span class="comment">// 具有功能的代码块</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-6-类型转换"><a href="#3-6-类型转换" class="headerlink" title="3.6. 类型转换"></a>3.6. 类型转换</h3><p> 很多时候，我们在进行数据运算或输出等操作时需要将数据在不同类型之间进行转换，这里我们主<br>要掌握数值型和字符串。</p>
<h4 id="3-6-1-数值型-转换函数"><a href="#3-6-1-数值型-转换函数" class="headerlink" title="3.6.1. 数值型(转换函数)"></a>3.6.1. 数值型(转换函数)</h4><p> JS提供了 <code>parseInt() </code>和 <code>parseFloat() </code>两个全局转换函数。前者把值转换成整数，后者把值转<br>换成浮点数。只有对String类型调用这些方法，这两个函数才能正确运行；对其他类型返回的都是<br><code>NaN(Not a Number) </code>。</p>
<h5 id="3-6-1-1-parseInt"><a href="#3-6-1-1-parseInt" class="headerlink" title="3.6.1.1. parseInt()"></a>3.6.1.1. parseInt()</h5><p><code>parseInt() </code>在转换之前，首先会分析该字符串，判断位置为0处的字符，判断它是否是个有效数<br>字，如果不是，则直接返回NaN，不再继续，如果是则继续，直到找到非字符。</p>
<figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">COPYconsole.<span class="built_in">log</span>(<span class="built_in">parseInt</span>(<span class="string">&quot;1234blue&quot;</span>)); <span class="comment">// return 1234</span></span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">parseInt</span>(<span class="string">&quot;0xA&quot;</span>)); <span class="comment">// return 10</span></span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">parseInt</span>(<span class="string">&quot;22.5&quot;</span>)); <span class="comment">// return 22</span></span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">parseInt</span>(<span class="string">&quot;blue&quot;</span>)); <span class="comment">// return NaN</span></span><br></pre></td></tr></table></figure>

<h5 id="3-6-1-2-parseFloat"><a href="#3-6-1-2-parseFloat" class="headerlink" title="3.6.1.2. parseFloat()"></a>3.6.1.2. parseFloat()</h5><p> <code>parseFloat() </code>方法与 <code>parseInt() </code>方法的处理方式相似，从位置 0 开始查看每个字符，直到找<br>到第一个非有效的字符为止，然后把该字符之前的字符串转换成数字。不过，对于这个方法来说，第一<br>个出现的小数点是有效字符。如果有两个小数点，第二个小数点将被看作无效的，parseFloat()方法会把<br>这个小数点之前的字符串转换成数字。</p>
<figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">COPYconsole.<span class="built_in">log</span>(<span class="built_in">parseFloat</span>(<span class="string">&quot;1234blue&quot;</span>)); <span class="comment">//return 1234</span></span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">parseFloat</span>(<span class="string">&quot;22.5&quot;</span>)); <span class="comment">//return 22.5</span></span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">parseFloat</span>(<span class="string">&quot;22.34.5&quot;</span>)); <span class="comment">//return 22.34</span></span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">parseFloat</span>(<span class="string">&quot;0908&quot;</span>)); <span class="comment">//return 908</span></span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">parseFloat</span>(<span class="string">&quot;blue&quot;</span>)); <span class="comment">//return NaN</span></span><br></pre></td></tr></table></figure>

<h4 id="3-6-2-字符串"><a href="#3-6-2-字符串" class="headerlink" title="3.6.2. 字符串"></a>3.6.2. 字符串</h4><p> 几乎每个数对象都提供了toString()函数将内容转换为字符串形式。最为简单的转换为字符串的方<br>式，直接在任意数据后面 + <code>&#39;&#39; </code>或 <code>&quot;&quot; </code>即可。</p>
<figure class="highlight haskell"><table><tr><td class="code"><pre><span class="line"><span class="type">COPYvar</span> <span class="class"><span class="keyword">data</span> = 10;</span></span><br><span class="line"><span class="title">console</span>.log(<span class="class"><span class="keyword">data</span>.toString());// &quot;10&quot;</span></span><br><span class="line"><span class="class"><span class="keyword">data</span> = true;</span></span><br><span class="line"><span class="title">console</span>.log(<span class="class"><span class="keyword">data</span>.toString());// &quot;true&quot;</span></span><br><span class="line">// toString()不能对null和undefined使用</span><br><span class="line"><span class="class"><span class="keyword">data</span> = null;</span></span><br><span class="line">// 会报错<span class="type">Uncaught</span> <span class="type">TypeError</span>: <span class="type">Cannot</span> read property &#x27;toString&#x27; <span class="keyword">of</span> null</span><br><span class="line">// console.log(<span class="class"><span class="keyword">data</span>.toString());</span></span><br><span class="line"><span class="class"><span class="keyword">data</span> = undefined;</span></span><br><span class="line">// 会报错<span class="type">Uncaught</span> <span class="type">TypeError</span>: <span class="type">Cannot</span> read property &#x27;toString&#x27; <span class="keyword">of</span> null</span><br><span class="line">// console.log(<span class="class"><span class="keyword">data</span>.toString());</span></span><br><span class="line">// 拼接字符串可以对null和undefined使用</span><br><span class="line"><span class="class"><span class="keyword">data</span> = null + &#x27;&#x27;;</span></span><br><span class="line"><span class="title">console</span>.log(<span class="class"><span class="keyword">data</span>.toString());</span></span><br><span class="line"><span class="class"><span class="keyword">data</span> = undefined + &quot;&quot;;</span></span><br><span class="line"><span class="title">console</span>.log(<span class="class"><span class="keyword">data</span>.toString());</span></span><br></pre></td></tr></table></figure>

<h3 id="3-7-运算符"><a href="#3-7-运算符" class="headerlink" title="3.7. 运算符"></a>3.7. 运算符</h3><p> 运算符用于执行程序代码运算，会针对一个及其以上操作数来进行运算。</p>
<h4 id="3-7-1-算数运算符"><a href="#3-7-1-算数运算符" class="headerlink" title="3.7.1. 算数运算符"></a>3.7.1. 算数运算符</h4><table>
<thead>
<tr>
<th>运算符</th>
<th>描述</th>
<th>例子y = 5</th>
<th>结果</th>
</tr>
</thead>
<tbody><tr>
<td>+</td>
<td>加</td>
<td>x = y + 2</td>
<td>x = 7</td>
</tr>
<tr>
<td>-</td>
<td>减</td>
<td>x = y - 2</td>
<td>x = 3</td>
</tr>
<tr>
<td>*</td>
<td>乘</td>
<td>x = y * 2</td>
<td>x = 10</td>
</tr>
<tr>
<td>/</td>
<td>除</td>
<td>x = y / 2</td>
<td>x = 2.5</td>
</tr>
<tr>
<td>%</td>
<td>求余数</td>
<td>x = y % 2</td>
<td>x = 1</td>
</tr>
<tr>
<td>++</td>
<td>自增</td>
<td>x = ++y</td>
<td>x = 6</td>
</tr>
<tr>
<td>–</td>
<td>自减</td>
<td>x = –y</td>
<td>x = 4</td>
</tr>
</tbody></table>
<h4 id="3-7-2-赋值和扩展运算符"><a href="#3-7-2-赋值和扩展运算符" class="headerlink" title="3.7.2. 赋值和扩展运算符"></a>3.7.2. 赋值和扩展运算符</h4><table>
<thead>
<tr>
<th>运算符</th>
<th>例子x = 10, y = 5</th>
<th>等价于</th>
<th>结果</th>
</tr>
</thead>
<tbody><tr>
<td>=</td>
<td>x = y</td>
<td>x = 5</td>
<td></td>
</tr>
<tr>
<td>+=</td>
<td>x += y</td>
<td>x = x + y</td>
<td>x = 15</td>
</tr>
<tr>
<td>-=</td>
<td>x -= y</td>
<td>x = x - y</td>
<td>x = 5</td>
</tr>
<tr>
<td>*=</td>
<td>x *= y</td>
<td>x = x * y</td>
<td>x = 50</td>
</tr>
<tr>
<td>/=</td>
<td>x /= y</td>
<td>x = x / y</td>
<td>x = 2</td>
</tr>
<tr>
<td>%=</td>
<td>x %= y</td>
<td>x = x % y</td>
<td>x = 0</td>
</tr>
</tbody></table>
<h4 id="3-7-3-比较运算符"><a href="#3-7-3-比较运算符" class="headerlink" title="3.7.3. 比较运算符"></a>3.7.3. 比较运算符</h4><table>
<thead>
<tr>
<th>运算符</th>
<th>描述</th>
<th>例子x = 5</th>
</tr>
</thead>
<tbody><tr>
<td>==</td>
<td>等于</td>
<td>x == 8 为 false</td>
</tr>
<tr>
<td>===</td>
<td>全等（值和类型）</td>
<td><code>x===5 </code>为 true；<code>x===&quot;5&quot; </code>为 false</td>
</tr>
<tr>
<td>!=</td>
<td>不等于</td>
<td>x != 8 为 true</td>
</tr>
<tr>
<td>&gt;</td>
<td>大于</td>
<td>x &gt; 8 为 false</td>
</tr>
<tr>
<td>&lt;</td>
<td>小于</td>
<td>x &lt; 8 为 true</td>
</tr>
<tr>
<td>&gt;=</td>
<td>大于或等于</td>
<td>x &gt;= 8 为 false</td>
</tr>
<tr>
<td>&lt;=</td>
<td>小于或等于</td>
<td>x &lt;= 8 为 true</td>
</tr>
</tbody></table>
<h4 id="3-7-4-逻辑运算符"><a href="#3-7-4-逻辑运算符" class="headerlink" title="3.7.4. 逻辑运算符"></a>3.7.4. 逻辑运算符</h4><table>
<thead>
<tr>
<th>运算符</th>
<th>描述</th>
<th>例子x = 5, y = 2</th>
</tr>
</thead>
<tbody><tr>
<td>&amp;&amp;</td>
<td>and</td>
<td>(x &lt; 10 &amp;&amp; y &gt; 1) 为 true</td>
</tr>
<tr>
<td>||</td>
<td>or</td>
<td>(x == 5 || y == 5) 为 true</td>
</tr>
<tr>
<td>!</td>
<td>not</td>
<td>!(x == y) 为 true</td>
</tr>
</tbody></table>
<h4 id="3-7-5-三目运算符"><a href="#3-7-5-三目运算符" class="headerlink" title="3.7.5. 三目运算符"></a>3.7.5. 三目运算符</h4><table>
<thead>
<tr>
<th>运算符</th>
<th>描述</th>
<th>例子</th>
</tr>
</thead>
<tbody><tr>
<td>? :</td>
<td>如果…否则…</td>
<td>3 &gt; 5 ? 3 : 5</td>
</tr>
</tbody></table>
<figure class="highlight nim"><table><tr><td class="code"><pre><span class="line"><span class="type">COPYvar</span> a = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">var</span> b = <span class="number">5</span>;</span><br><span class="line">// <span class="number">3</span>大于<span class="number">5</span>吗(返回<span class="literal">true</span>|<span class="literal">false</span>) ? 大于(<span class="literal">true</span>)返回a : 小于(<span class="literal">false</span>)返回b</span><br><span class="line"><span class="keyword">var</span> <span class="literal">result</span> = a &gt; b ? a : b;</span><br><span class="line">console.log(<span class="literal">result</span>);</span><br></pre></td></tr></table></figure>

<h3 id="3-8-控制语句"><a href="#3-8-控制语句" class="headerlink" title="3.8. 控制语句"></a>3.8. 控制语句</h3><p> 我们写的JavaScript代码都是按照从上到下依次执行，很多时候我们希望代码按照我们的意愿去执<br>行，比如有选择性地执行某些代码，或者重复地执行某些代码，这就需要使用到流程控制语句。<br>​ 流程控制语句一共有三种：</p>
<p>a.流程执行: 从上到下，从左到右<br>b.选择执行: 分支选择<br>c.循环执行: 重复执行</p>
<h4 id="3-8-1-选择执行"><a href="#3-8-1-选择执行" class="headerlink" title="3.8.1. 选择执行"></a>3.8.1. 选择执行</h4><h5 id="3-8-1-1-单选择"><a href="#3-8-1-1-单选择" class="headerlink" title="3.8.1.1. 单选择"></a>3.8.1.1. 单选择</h5><figure class="highlight abnf"><table><tr><td class="code"><pre><span class="line">COPYif (条件表达式) &#123;</span><br><span class="line">语句体<span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p> 首先执行条件，如果结果为true，则执行语句体；如果结果为false，则结束if语句。注意：若语句体<br>只有一条语句，可以省略大括号，但不建议省略</p>
<h5 id="3-8-1-2-双选择"><a href="#3-8-1-2-双选择" class="headerlink" title="3.8.1.2. 双选择"></a>3.8.1.2. 双选择</h5><figure class="highlight abnf"><table><tr><td class="code"><pre><span class="line">COPYif (条件表达式) &#123;</span><br><span class="line">语句体<span class="number">1</span><span class="comment">;</span></span><br><span class="line">&#125; else &#123;</span><br><span class="line">语句体<span class="number">2</span><span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p> 首先执行条件，如果结果为true，则执行语句体1；如果结果为false，则执行语句体2。</p>
<h5 id="3-8-1-3-多选择"><a href="#3-8-1-3-多选择" class="headerlink" title="3.8.1.3. 多选择"></a>3.8.1.3. 多选择</h5><figure class="highlight aspectj"><table><tr><td class="code"><pre><span class="line">COPYif (条件表达式<span class="number">1</span>) &#123;</span><br><span class="line">语句体<span class="number">1</span>;</span><br><span class="line">&#125; <span class="function"><span class="keyword">else</span> <span class="title">if</span> <span class="params">(条件表达式<span class="number">2</span>)</span> </span>&#123;</span><br><span class="line">语句体<span class="number">2</span>;</span><br><span class="line">&#125; <span class="function"><span class="keyword">else</span> <span class="title">if</span> <span class="params">(条件表达式<span class="number">3</span>)</span> </span>&#123;</span><br><span class="line">语句体<span class="number">3</span>；</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line">[<span class="keyword">else</span> &#123;</span><br><span class="line">语句体n+<span class="number">1</span>;</span><br><span class="line">&#125;]</span><br></pre></td></tr></table></figure>

<h4 id="3-8-2-循环执行"><a href="#3-8-2-循环执行" class="headerlink" title="3.8.2. 循环执行"></a>3.8.2. 循环执行</h4><p> 循环结构用于重复执行某个操作，简单理解就是重复执行同类型的代码，它有多种形式，这里我们<br>主要掌握for循环。</p>
<figure class="highlight abnf"><table><tr><td class="code"><pre><span class="line">COPYfor (初始化语句<span class="comment">; 判断条件语句; 控制条件语句) &#123;</span></span><br><span class="line">循环体语句<span class="comment">;</span></span><br><span class="line">&#125;</span><br><span class="line">for (var i = <span class="number">0</span><span class="comment">; i &lt; 10; i++) &#123;</span></span><br><span class="line">console.log(i)<span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="3-8-2-1-break与continue"><a href="#3-8-2-1-break与continue" class="headerlink" title="3.8.2.1. break与continue"></a>3.8.2.1. break与continue</h5><p> break: 停止本层循环</p>
<p> continue: 暂停本次循环，继续下一次</p>
<h3 id="3-9-数组"><a href="#3-9-数组" class="headerlink" title="3.9. 数组"></a>3.9. 数组</h3><p> 数组（array）是按次序排列的一组数据，每个值的位置都有编号（从 0 开始），整个数组用方括号<br>表示。Js中定义数组的三种方式如下（也可先声明再赋值）：</p>
<figure class="highlight qml"><table><tr><td class="code"><pre><span class="line">COPYvar arr = []; <span class="comment">// 创建一个空数组</span></span><br><span class="line"><span class="keyword">var</span> arr = [值<span class="number">1</span>, 值<span class="number">2</span>, 值<span class="number">3</span>]; <span class="comment">// 创建一个数组并赋值</span></span><br><span class="line"><span class="keyword">var</span> arr = <span class="keyword">new</span> <span class="built_in">Array</span>(值<span class="number">1</span>, 值<span class="number">2</span>, 值<span class="number">3</span>); <span class="comment">// 直接实例化</span></span><br><span class="line"><span class="keyword">var</span> arr = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="built_in">size</span>); <span class="comment">// 创建数组并指定长度</span></span><br></pre></td></tr></table></figure>

<h4 id="3-9-1-创建"><a href="#3-9-1-创建" class="headerlink" title="3.9.1. 创建"></a>3.9.1. 创建</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">COPY<span class="comment">// 数组的创建</span></span><br><span class="line"><span class="keyword">var</span> arr1 = [];</span><br><span class="line"><span class="built_in">console</span>.log(arr1.length); <span class="comment">// 长度为0</span></span><br><span class="line"><span class="keyword">var</span> arr2 = [<span class="number">1</span>, <span class="string">&#x27;2&#x27;</span>, <span class="number">3.3</span>, <span class="literal">true</span>, <span class="literal">null</span>];</span><br><span class="line"><span class="built_in">console</span>.log(arr2.length); <span class="comment">// 长度为5</span></span><br><span class="line"><span class="keyword">var</span> arr3 = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">1</span>, <span class="string">&#x27;2&#x27;</span>, <span class="number">3.3</span>);</span><br><span class="line"><span class="built_in">console</span>.log(arr3.length); <span class="comment">// 长度为3</span></span><br><span class="line"><span class="keyword">var</span> arr4 = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">3</span>);</span><br><span class="line"><span class="built_in">console</span>.log(arr4.length); <span class="comment">// 长度为3</span></span><br></pre></td></tr></table></figure>

<h4 id="3-9-2-基本操作"><a href="#3-9-2-基本操作" class="headerlink" title="3.9.2. 基本操作"></a>3.9.2. 基本操作</h4><p> 数组的长度可以通过 <code>length </code>属性来获取，并可以任意更改</p>
<p> 获取： <code>数组名.length</code></p>
<p> 更改： <code>数组名.length = 新长度</code></p>
<p> 数组中的每一个元素都可以被访问和修改，甚至是不存在的元素，无所谓越界</p>
<p> 获取： <code>数组名[下标]</code></p>
<p> 更改：<code>数组名[下标] = 新值</code></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">COPYvar arr2 <span class="operator">=</span> [<span class="number">1</span>, <span class="string">&#x27;2&#x27;</span>, <span class="number">3.3</span>, <span class="literal">true</span>, <span class="keyword">null</span>];</span><br><span class="line">console.<span class="built_in">log</span>(arr2.length); <span class="operator">/</span><span class="operator">/</span> 长度为<span class="number">5</span></span><br><span class="line">var arr4 <span class="operator">=</span> <span class="keyword">new</span> <span class="keyword">Array</span>(<span class="number">3</span>);</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span> console.<span class="built_in">log</span>(arr4.length); <span class="operator">/</span><span class="operator">/</span> 长度为<span class="number">3</span></span><br><span class="line"><span class="operator">/</span><span class="operator">/</span> 修改长度后，原来已有的数据会被丢失，返回undefined</span><br><span class="line">arr2.length <span class="operator">=</span> <span class="number">3</span></span><br><span class="line">console.<span class="built_in">log</span>(arr2.length);</span><br><span class="line">console.<span class="built_in">log</span>(arr2[<span class="number">3</span>]);</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span> 获取一个不存在的位置，不会报错越界，会返回undefined</span><br><span class="line">console.<span class="built_in">log</span>(arr4[<span class="number">5</span>]);</span><br></pre></td></tr></table></figure>

<h4 id="3-9-3-数组的遍历"><a href="#3-9-3-数组的遍历" class="headerlink" title="3.9.3. 数组的遍历"></a>3.9.3. 数组的遍历</h4><p> 数组的遍历即依次访问数组的每一个元素 ，可以用for循环进行遍历。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">COPYfor (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; 数组.length; i++) &#123;</span><br><span class="line">数组名[i]是获取元素</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="string">&#x27;2&#x27;</span>, <span class="number">3.3</span>, <span class="literal">true</span>, <span class="literal">null</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line"><span class="built_in">console</span>.log(arr[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-10-函数"><a href="#3-10-函数" class="headerlink" title="3.10. 函数"></a>3.10. 函数</h3><p> 函数，即方法。就是一段预先设置的功能代码块，可以反复调用，根据输入参数的不同，返回不同<br>的值。函数也是对象。</p>
<h4 id="3-10-1-函数的定义"><a href="#3-10-1-函数的定义" class="headerlink" title="3.10.1. 函数的定义"></a>3.10.1. 函数的定义</h4><p> 我们可以通过函数声明语句和函数定义表达式来初始化一个函数。</p>
<h5 id="3-10-1-1-函数声明语句"><a href="#3-10-1-1-函数声明语句" class="headerlink" title="3.10.1.1. 函数声明语句"></a>3.10.1.1. 函数声明语句</h5><figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">COPYfunction</span> 函数名([参数列表])&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 声明函数</span></span><br><span class="line"><span class="selector-tag">function</span> <span class="selector-tag">foo1</span>() &#123;</span><br><span class="line"><span class="selector-tag">console</span><span class="selector-class">.log</span>(<span class="string">&#x27;foo1&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 调用函数</span></span><br><span class="line"><span class="selector-tag">foo1</span>();</span><br></pre></td></tr></table></figure>

<h5 id="3-10-1-2-函数定义表达式"><a href="#3-10-1-2-函数定义表达式" class="headerlink" title="3.10.1.2. 函数定义表达式"></a>3.10.1.2. 函数定义表达式</h5><p> 以表达式方式定义的函数，函数的名称是可以不需要的</p>
<figure class="highlight delphi"><table><tr><td class="code"><pre><span class="line">COPYvar 变量名 = <span class="function"><span class="keyword">function</span> <span class="params">([参数列表])</span> <span class="comment">&#123;</span></span></span><br><span class="line"><span class="comment"><span class="function">&#125;</span></span></span><br><span class="line"><span class="function">变量名<span class="params">()</span>;</span></span><br><span class="line"><span class="comment">// 声明函数</span></span><br><span class="line"><span class="keyword">var</span> foo2 = <span class="function"><span class="keyword">function</span> <span class="params">()</span> <span class="comment">&#123;</span></span></span><br><span class="line"><span class="comment"><span class="function">console.log(&#x27;foo2&#x27;);</span></span></span><br><span class="line"><span class="comment"><span class="function">&#125;</span></span></span><br><span class="line"><span class="function"><span class="comment">// 调用函数</span></span></span><br><span class="line"><span class="function"><span class="title">foo2</span><span class="params">()</span>;</span></span><br></pre></td></tr></table></figure>

<p>这种写法是将一个匿名函数赋值给变量。</p>
<h4 id="3-10-2-函数的参数"><a href="#3-10-2-函数的参数" class="headerlink" title="3.10.2. 函数的参数"></a>3.10.2. 函数的参数</h4><p> 函数运行的时候，有时需要提供外部数据，不同的外部数据会得到不同的结果，这种外部数据就叫<br>参数，定义时的参数称为形参，调用时的参数称为实参。</p>
<p>a. 实参可以省略，那么对应形参为undefined<br>b. 若函数形参同名（一般不会这么干），在使用时以最后一个值为准。<br>c. 可以给参数默认值：当参数为特殊值时，可以赋予默认值。<br>d. 参数为值传递，传递副本；引用传递时传递地址，操作的是同一个对象。</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">COPY<span class="regexp">//</span> 调用函数时，实参可以省略，则对应形参为undefined</span><br><span class="line"><span class="keyword">function</span> func1(a, b) &#123;</span><br><span class="line">console.log(a + <span class="string">&quot;+&quot;</span> + b + <span class="string">&quot;=&quot;</span> + (a + b));</span><br><span class="line">&#125;</span><br><span class="line">func1(<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>); <span class="regexp">//</span> <span class="number">3</span>+<span class="number">4</span>=<span class="number">7</span></span><br><span class="line">func1(<span class="number">1</span>); <span class="regexp">//</span> <span class="number">1</span>+undefined=NaN</span><br><span class="line">func1(); <span class="regexp">//</span> undefined+undefined=NaN</span><br><span class="line"><span class="regexp">//</span> 给参数默认值</span><br><span class="line"><span class="keyword">function</span> func2(a=<span class="number">1</span>, b=<span class="number">2</span>) &#123;</span><br><span class="line">return a + b;</span><br><span class="line">&#125;</span><br><span class="line">console.log(<span class="string">&#x27;参数默认值-----&#x27;</span> + func2());<span class="regexp">//</span> <span class="number">3</span></span><br><span class="line">console.log(<span class="string">&#x27;参数默认值-----&#x27;</span> + func2(<span class="number">5</span>, <span class="number">7</span>));<span class="regexp">//</span> <span class="number">12</span></span><br><span class="line"><span class="regexp">//</span> 参数为值传递，传递副本；引用传递时传递地址，操作的是同一个对象。</span><br><span class="line"><span class="keyword">function</span> func3(obj) &#123;</span><br><span class="line">obj[<span class="number">6</span>] = <span class="string">&quot;我是第六个值&quot;</span>; <span class="regexp">//</span> 在函数内操作了数组，因为是同一个对象的原因，外部也可以获取到</span><br><span class="line">&#125;</span><br><span class="line">var arr = [<span class="number">1</span>, <span class="string">&quot;2&quot;</span>, <span class="number">3.14</span>, true, null];</span><br><span class="line"><span class="regexp">//</span> 调用函数</span><br><span class="line">func3(arr);</span><br><span class="line">console.log(arr[<span class="number">6</span>]); <span class="regexp">//</span> 函数内操作的数据，因为是同一个对象的原因，外部也可以获取到</span><br></pre></td></tr></table></figure>

<h4 id="3-10-3-函数的调用"><a href="#3-10-3-函数的调用" class="headerlink" title="3.10.3. 函数的调用"></a>3.10.3. 函数的调用</h4><p> 常用调用方式： <code>函数名([实参]);</code><br>​ 存在返回值可以变量接收，若接收无返回值函数则为undefined。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">COPYfunction <span class="function"><span class="title">add</span>(<span class="params">a, b</span>)</span> &#123;</span><br><span class="line"><span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> sum = add(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"><span class="built_in">console</span>.log(sum)</span><br></pre></td></tr></table></figure>

<h4 id="3-10-4-return语句"><a href="#3-10-4-return语句" class="headerlink" title="3.10.4. return语句"></a>3.10.4. return语句</h4><p> 函数的执行可能会有返回值，需要使用return语句将结果返回。return语句不是必需的，如果没有的<br>话，该函数就不返回任何值，或者说返回undefined。<br>​ 作用：<br>​ 在没有返回值的方法中，用来结束方法。<br>​ 有返回值的方法中，一个是用来结束方法，一个是将值带给调用者。</p>
<h4 id="3-10-5-函数的作用域"><a href="#3-10-5-函数的作用域" class="headerlink" title="3.10.5. 函数的作用域"></a>3.10.5. 函数的作用域</h4><p> 函数作用域：全局(global variable)和局部(local variable)</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">COPYvar a = <span class="number">1</span>; <span class="comment">// 全局变量</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">func</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> b = <span class="number">2</span>; <span class="comment">// 局部变量</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;全局变量a--&gt;&quot;</span> + a);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;局部变量b--&gt;&quot;</span> + b);</span><br><span class="line">&#125;</span><br><span class="line">func();</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;---------------------------&quot;</span>);</span><br><span class="line"><span class="comment">// a可以访问</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;全局变量a--&gt;&quot;</span> + a);</span><br><span class="line"><span class="comment">// b不能访问</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;b--&gt;&quot;</span> + b);</span><br></pre></td></tr></table></figure>

<h2 id="4-JavaScript内置对象"><a href="#4-JavaScript内置对象" class="headerlink" title="4. JavaScript内置对象"></a>4. JavaScript内置对象</h2><h3 id="4-1-String"><a href="#4-1-String" class="headerlink" title="4.1. String"></a>4.1. String</h3><p> charAt(idx)：返回指定位置处的字符。<br>​ indexOf(Chr)：返回指定子字符串的位置，从左到右。找不到返回-1<br>​ substr(m,n)：返回给定字符串中从m位置开始，取n个字符，如果参数n省略，则意味着取到字符串末<br>尾。<br>​ substring(m,n)：返回给定字符串中从m位置开始，到n位置结束，不包含n位，如果参数n省略，则意味<br>着取到字符串末尾。<br>​ toLowerCase()：将字符串中的字符全部转化成小写。<br>​ toUpperCase()：将字符串中的字符全部转化成大写。<br>​ replace(s1, s2)：替换，将s1替换为s2。<br>​ length: 属性，不是方法，返回字符串的长度。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">COPY</span><span class="operator">/</span><span class="operator">/</span> charAt(idx)：返回指定位置处的字符</span><br><span class="line">var msg <span class="operator">=</span> <span class="string">&#x27;IT is very good!&#x27;</span>;</span><br><span class="line">var <span class="keyword">result</span> <span class="operator">=</span> msg.charAt(<span class="number">1</span>); <span class="operator">/</span><span class="operator">/</span> T</span><br><span class="line">console.<span class="built_in">log</span>(<span class="keyword">result</span>, result.length);</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span> indexOf(Chr)：返回指定子字符串的位置，从左到右。找不到返回<span class="number">-1</span></span><br><span class="line">var <span class="keyword">result</span> <span class="operator">=</span> msg.indexOf(&quot;very&quot;);<span class="operator">/</span><span class="operator">/</span> <span class="number">6</span></span><br><span class="line">console.<span class="built_in">log</span>(<span class="keyword">result</span>);</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span> substr(m, n)：返回给定字符串中从m位置开始，取n个字符，如果参数n省略，则意味着取到字符串末</span><br><span class="line">尾。</span><br><span class="line"><span class="keyword">result</span> <span class="operator">=</span> msg.substr(<span class="number">1</span>, <span class="number">8</span>); <span class="operator">/</span><span class="operator">/</span> T <span class="keyword">is</span> ver</span><br><span class="line">console.<span class="built_in">log</span>(<span class="keyword">result</span>, result.length);</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span> <span class="built_in">substring</span>(m,n)：返回给定字符串中从m位置开始，到n位置结束，不包含n位，如果参数n省略，则意味</span><br><span class="line">着取到字符串末尾。</span><br><span class="line"><span class="keyword">result</span> <span class="operator">=</span> msg.<span class="built_in">substring</span>(<span class="number">1</span>, <span class="number">8</span>); <span class="operator">/</span><span class="operator">/</span> T <span class="keyword">is</span> ve</span><br><span class="line">console.<span class="built_in">log</span>(<span class="keyword">result</span>, result.length);</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span> toLowerCase()：将字符串中的字符全部转化成小写。</span><br><span class="line"><span class="keyword">result</span> <span class="operator">=</span> msg.toLowerCase(); <span class="operator">/</span><span class="operator">/</span> it <span class="keyword">is</span> very good<span class="operator">!</span></span><br><span class="line">console.<span class="built_in">log</span>(<span class="keyword">result</span>, result.length);</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span> toUpperCase()：将字符串中的字符全部转化成大写。</span><br><span class="line"><span class="keyword">result</span> <span class="operator">=</span> msg.toUpperCase(); <span class="operator">/</span><span class="operator">/</span> IT <span class="keyword">IS</span> VERY GOOD<span class="operator">!</span></span><br><span class="line">console.<span class="built_in">log</span>(<span class="keyword">result</span>, result.length);</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span> replace(s1, s2)：将s1字符串替换为s2字符串</span><br><span class="line"><span class="keyword">result</span> <span class="operator">=</span> msg.replace(<span class="string">&#x27;IT&#x27;</span>, <span class="string">&#x27;it&#x27;</span>);</span><br><span class="line">console.<span class="built_in">log</span>(<span class="keyword">result</span>, result.length);</span><br></pre></td></tr></table></figure>

<h3 id="4-2-Math"><a href="#4-2-Math" class="headerlink" title="4.2. Math"></a>4.2. Math</h3><p> Math.random()：生成随机数<br>​ Math.ceil()：向上取整<br>​ Math.floor()：向下取整<br>​ Math.round()：四舍五入取整</p>
<figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line">COPYvar <span class="built_in">num</span> = Math.<span class="built_in">random</span>(); // 生成大于<span class="number">0</span>小于<span class="number">1</span>的浮点数</span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">num</span>);</span><br><span class="line"><span class="built_in">num</span> = Math.ceil(<span class="number">3.11223</span>); // 向上取整 <span class="number">4</span></span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">num</span>);</span><br><span class="line"><span class="built_in">num</span> = Math.<span class="built_in">floor</span>(<span class="number">3.55667</span>); // 向下取整 <span class="number">3</span></span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">num</span>);</span><br><span class="line"><span class="built_in">num</span> = Math.<span class="built_in">round</span>(<span class="number">3.11223</span>); // 四舍五入 <span class="number">3</span></span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">num</span>);</span><br></pre></td></tr></table></figure>

<h3 id="4-3-Date"><a href="#4-3-Date" class="headerlink" title="4.3. Date"></a>4.3. Date</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">COPY<span class="comment">// 获取日期时间</span></span><br><span class="line"><span class="function"><span class="title">getFullYear</span><span class="params">()</span></span>年, getMonth()月, getDate()日, getDay()周,</span><br><span class="line"><span class="function"><span class="title">getHours</span><span class="params">()</span></span>时,getMinutes()分,getSeconds()秒</span><br><span class="line"><span class="comment">// 设置日期时间</span></span><br><span class="line"><span class="function"><span class="title">setFullYear</span><span class="params">()</span></span>, setMonth(), ...</span><br><span class="line"><span class="function"><span class="title">toLoacaleString</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure>

<p> 说明：<br>​ a. <code>getMonth() </code>：得到的值： <code>0~11 </code>（1月<del>12月）<br>​ b. <code>setMonth() </code>：设置值时` 0</del>11 <code>&lt;/span&gt; ​ c. &lt;span style=&quot;color: #FD6E05;&quot;&gt;</code>toLocaleString() `：可根据本地时间把 Date 对象转换为字符串，并返回结果。</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">COPY</span>// 获取日期时间</span><br><span class="line">var <span class="built_in">current_date</span> = <span class="built_in">new</span> <span class="type">Date</span>(); // 创建一个日期对象</span><br><span class="line">console.log(<span class="built_in">current_date</span>);</span><br><span class="line">current_date_time = <span class="built_in">current_date</span>.getFullYear(); // 年</span><br><span class="line">console.log(current_date_time);</span><br><span class="line">current_date_time = <span class="built_in">current_date</span>.getMonth() + <span class="number">1</span>; // 月，返回的是<span class="number">0</span>~<span class="number">11</span></span><br><span class="line">console.log(current_date_time);</span><br><span class="line">current_date_time = <span class="built_in">current_date</span>.getDay(); // 周</span><br><span class="line">console.log(current_date_time);</span><br><span class="line">current_date_time = <span class="built_in">current_date</span>.getDate(); // 日</span><br><span class="line">console.log(current_date_time);</span><br><span class="line">current_date_time = <span class="built_in">current_date</span>.getHours(); // 时</span><br><span class="line">console.log(current_date_time);</span><br><span class="line">current_date_time = <span class="built_in">current_date</span>.getMinutes(); // 分</span><br><span class="line">console.log(current_date_time);</span><br><span class="line">current_date_time = <span class="built_in">current_date</span>.getSeconds(); // 秒</span><br><span class="line">console.log(current_date_time);</span><br><span class="line">// 返回一个本地时间的字符串</span><br><span class="line">currrent_date_time = <span class="built_in">current_date</span>.toLocaleString();</span><br><span class="line">console.log(currrent_date_time);</span><br><span class="line">// 设置日期时间</span><br><span class="line"><span class="built_in">current_date</span>.setFullYear(<span class="number">2008</span>);</span><br><span class="line"><span class="built_in">current_date</span>.setMonth(<span class="number">7</span>);</span><br><span class="line"><span class="built_in">current_date</span>.setDate(<span class="number">8</span>);</span><br><span class="line"><span class="built_in">current_date</span>.setHours(<span class="number">20</span>);</span><br><span class="line"><span class="built_in">current_date</span>.setMinutes(<span class="number">8</span>);</span><br><span class="line"><span class="built_in">current_date</span>.setSeconds(<span class="number">8</span>);</span><br><span class="line">console.log(<span class="built_in">current_date</span>.toLocaleString());</span><br></pre></td></tr></table></figure>

<h2 id="5-JavaScript操作BOM对象"><a href="#5-JavaScript操作BOM对象" class="headerlink" title="5. JavaScript操作BOM对象"></a>5. JavaScript操作BOM对象</h2><p> ECMAScript是JavaScript的核心，但如果要在Web中使用JavaScript，那么BOM（浏览器对象模型）<br>则无疑才是真正的核心。BOM提供了很多对象，用于访问浏览器的功能，这些功能与任何的网页内容无<br>关。多年来，缺少事实上的规范导致BOM既有意思又有问题，因为浏览器厂商会按照各自的想法随意去<br>扩展它。于是，浏览器之间共有的对象就成为了事实上的标准。这些对象在浏览器中得以存在，很大程<br>度上是由于他们提供了与浏览器的互操作型。W3C为了把浏览器中JavaScript最基本的部分标准化，已经<br>将BOM的主要方面纳入了HTML5的规范当中。</p>
<h3 id="5-1-window对象"><a href="#5-1-window对象" class="headerlink" title="5.1. window对象"></a>5.1. window对象</h3><p> BOM的核心对象是window，它表示浏览器的一个实例。window对象有双重角色，它既是通过<br>JavaScript访问浏览器窗口的一个接口，又是ECMAScript规定的Global对象。这意味着在网页中定义的任<br>何一个对象、变量和函数，都以window作为其Global对象，因此有权访问parseInt()等方法。如果页面中<br>包含框架，则每个框架都拥有自己的window对象，并且保存在frames集合中。在frames集合中，可以通<br>过数值索引（从0开始，从左至右，从上到下）或者框架的名称来访问相应的window对象。</p>
<h4 id="5-1-1-系统对话框"><a href="#5-1-1-系统对话框" class="headerlink" title="5.1.1. 系统对话框"></a>5.1.1. 系统对话框</h4><p> 浏览器通过（实际是window对象的方法）alert()、confirm()、prompt()方法可以调用系统对话框向<br>用户显示消息。<br>​ a. 消息框:alert， 常用。<br>​ alert() 方法用于显示带有一条指定消息和一个 OK 按钮的警告框。<br>​ b. 输入框:prompt，返回提示框中的值。<br>​ prompt() 方法用于显示可提示用户进行输入的对话框。<br>​ 参数（可选）：<br>​ 第一个参数：要在对话框中显示的纯文本。<br>​ 第二个参数：默认的输入文本。<br>​ c. 确认框:confirm，返回 true/false.<br>​ confirm() 方法用于显示一个带有指定消息和 OK 及取消按钮的对话框。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">COPY<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;dv&quot;</span>&gt;</span>this is a div<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;test_alert();&quot;</span>&gt;</span>消息框<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;test_prompt();&quot;</span>&gt;</span>输入框<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;test_comfirm();&quot;</span>&gt;</span>确认框<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="comment">// 消息框</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">test_alert</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">alert(<span class="string">&#x27;消息框！&#x27;</span>);</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"><span class="comment">// 输入框</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">test_prompt</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> item = prompt(<span class="string">&#x27;请输入年龄&#x27;</span>); <span class="comment">// item得到输入的值</span></span></span><br><span class="line"><span class="javascript">alert(item);</span></span><br><span class="line"><span class="javascript">alert(prompt(<span class="string">&#x27;请输入年龄&#x27;</span>, <span class="number">18</span>)); <span class="comment">// 将输入的值输出</span></span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"><span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="javascript">确认框</span></span></span><br><span class="line"><span class="comment"><span class="javascript">返回值：boolean（true|false）</span></span></span><br><span class="line"><span class="comment"><span class="javascript">*/</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">test_comfirm</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> result = confirm(<span class="string">&#x27;真的要改吗？&#x27;</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span> (result) &#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">// DOM操作</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> ele = <span class="built_in">document</span>.getElementById(<span class="string">&quot;dv&quot;</span>);</span></span><br><span class="line"><span class="javascript">ele.style.color = <span class="string">&quot;red&quot;</span>;</span></span><br><span class="line"><span class="javascript">ele.innerHTML = <span class="string">&quot;&lt;span&gt;div is red&lt;/span&gt;&quot;</span>;</span></span><br><span class="line"><span class="javascript">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">alert(<span class="string">&quot;没事别瞎点&quot;</span>);</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="5-1-2-打开窗口"><a href="#5-1-2-打开窗口" class="headerlink" title="5.1.2. 打开窗口"></a>5.1.2. 打开窗口</h4><p> <code>window.open() </code>方法既可以导航到一个特定的URL也可以用来打开一个新的窗口</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">COPY<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">onclick</span>=<span class="string">&#x27;openBaidu();&#x27;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">openBaidu</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.open(<span class="string">&#x27;http://www.baidu.com&#x27;</span>, <span class="string">&#x27;_blank&#x27;</span>);<span class="comment">// 新窗口打开百度</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.open(<span class="string">&quot;http://www.baidu.com&quot;</span>, <span class="string">&quot;_self&quot;</span>);<span class="comment">// 当前窗口打开百度</span></span></span><br><span class="line"><span class="javascript"><span class="comment">// window.open(); // 空白窗口</span></span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="5-1-3-时间函数"><a href="#5-1-3-时间函数" class="headerlink" title="5.1.3. 时间函数"></a>5.1.3. 时间函数</h4><p> <code>setTimeout() </code>：在指定的毫秒数后调用函数或计算表达式，只执行一次。<br>​ <code>setInterval() </code>：在指定的毫秒数后不停的调用函数或计算表达式，多次执行。<br>​ 通过返回的标识也可以 <code>clearTimeout() </code>， <code>clearInterval() </code>来清除指定函数的执行。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">COPY <span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">&quot;h1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;停止显示时间&quot;</span> <span class="attr">onclick</span>=<span class="string">&#x27;stopShow();&#x27;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="comment">// 延迟3 秒后出现 alert</span></span></span><br><span class="line"><span class="javascript"><span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="javascript">function hello() &#123;</span></span></span><br><span class="line"><span class="comment"><span class="javascript">alert(&quot;对不起, 久等了！&quot;);</span></span></span><br><span class="line"><span class="comment"><span class="javascript">&#125;</span></span></span><br><span class="line"><span class="comment"><span class="javascript">window.setTimeout(&quot;hello()&quot;, 3000);</span></span></span><br><span class="line"><span class="comment"><span class="javascript">*/</span></span></span><br><span class="line"><span class="javascript"><span class="comment">// 不停的打印当前时间，当时间秒数为0时显示为红色</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">showTime</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">// 拿到当前时间</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>();</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> time = date.toLocaleString();</span></span><br><span class="line"><span class="javascript"><span class="comment">// 拿到相应对象</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> h1 = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;h1&#x27;</span>);</span></span><br><span class="line"><span class="javascript">h1.innerHTML = time;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(date.getSeconds());</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> sec = date.getSeconds();</span></span><br><span class="line"><span class="javascript">sec = sec % <span class="number">10</span>; <span class="comment">// 对10取余</span></span></span><br><span class="line"><span class="javascript"><span class="comment">// 根据需求添加样式</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span>(<span class="number">0</span> == sec) &#123; <span class="comment">// 当时间的秒数变成0时，显示红色字体</span></span></span><br><span class="line"><span class="javascript">h1.innerHTML = <span class="string">&#x27;&lt;span style=&quot;color:red&quot;&gt;&#x27;</span> + time + <span class="string">&#x27;&lt;/span&gt;&#x27;</span>;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"><span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="javascript">* 定时操作</span></span></span><br><span class="line"><span class="comment"><span class="javascript">* 第一个参数：执行的方法；</span></span></span><br><span class="line"><span class="comment"><span class="javascript">* 第二个参数：定时，单位是毫秒</span></span></span><br><span class="line"><span class="comment"><span class="javascript">*/</span></span></span><br><span class="line"><span class="javascript"><span class="comment">// 接收setInterval()返回的标识值</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> timeout = <span class="built_in">window</span>.setInterval(showTime, <span class="number">1000</span>);</span></span><br><span class="line"><span class="javascript"><span class="comment">// 停止操作</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">stopShow</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.clearInterval(timeout); <span class="comment">// 返回的标识值用来停止函数</span></span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="5-2-location对象"><a href="#5-2-location对象" class="headerlink" title="5.2. location对象"></a>5.2. location对象</h3><p> location对象是window对象之一，提供了与当前窗口中加载的文档有关的信息，还提供了一些导航功<br>能。也<br>​ 可通过 <code>window.location </code>属性来访问。<br>​ location 对象的属性 <code>href </code>：设置或返回完整的 URL；<br>​ location 对象的方法 <code>reload() </code>：重新加载当前文档。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">COPY<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;刷新&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;window.location.reload();&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;百度&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;openBaidu();&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">openBaidu</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">// 用新的文档替换当前文档</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.location.href = <span class="string">&quot;http://www.baidu.com&quot;</span>;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="5-3-document对象"><a href="#5-3-document对象" class="headerlink" title="5.3. document对象"></a>5.3. document对象</h3><p> 每个载入浏览器的 HTML 文档都会成为 Document 对象。Document 对象使我们可以从脚本中对<br>HTML 页面中的所有元素进行访问。Document 对象是 Window 对象的一部分，也可通过<br>window.document 属性对其进行访问。<br>​ document对象的body属性，提供对 元素的直接访问，在Document对象中我们会详细的讲<br>解。该对象作为DOM中的核心对象存在。</p>
<h2 id="6-案例练习"><a href="#6-案例练习" class="headerlink" title="6. 案例练习"></a>6. 案例练习</h2><h3 id="6-1-九九乘法表"><a href="#6-1-九九乘法表" class="headerlink" title="6.1. 九九乘法表"></a>6.1. 九九乘法表</h3><p> 利用控制语句实现九九乘法表的打印。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">COPY<span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>九九乘法表<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">逻辑推导过程</span></span><br><span class="line"><span class="comment">&lt;table&gt;</span></span><br><span class="line"><span class="comment">&lt;tr&gt;</span></span><br><span class="line"><span class="comment">&lt;td style=&quot;border: 1px solid black;&quot;&gt;1 * 1 = 1&lt;/td&gt;</span></span><br><span class="line"><span class="comment">&lt;/tr&gt;</span></span><br><span class="line"><span class="comment">&lt;tr&gt;</span></span><br><span class="line"><span class="comment">&lt;td style=&quot;border: 1px solid black;&quot;&gt;1 * 2 = 2&lt;/td&gt;</span></span><br><span class="line"><span class="comment">&lt;td style=&quot;border: 1px solid black;&quot;&gt;2 * 2 = 4&lt;/td&gt;</span></span><br><span class="line"><span class="comment">&lt;/tr&gt;</span></span><br><span class="line"><span class="comment">&lt;tr&gt;</span></span><br><span class="line"><span class="comment">&lt;td style=&quot;border: 1px solid black;&quot;&gt;1 * 3 = 2&lt;/td&gt;</span></span><br><span class="line"><span class="comment">&lt;td style=&quot;border: 1px solid black;&quot;&gt;2 * 3 = 6&lt;/td&gt;</span></span><br><span class="line"><span class="comment">&lt;td style=&quot;border: 1px solid black;&quot;&gt;3 * 3 = 9&lt;/td&gt;</span></span><br><span class="line"><span class="comment">&lt;/tr&gt;</span></span><br><span class="line"><span class="comment">&lt;/table&gt;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">			<span class="comment">// 使用DOM对象创建一个table，并写入body</span></span></span><br><span class="line"><span class="javascript">			<span class="built_in">document</span>.write(<span class="string">&quot;&lt;table&gt;&quot;</span>);</span></span><br><span class="line"><span class="javascript">			<span class="comment">// 外圈控制行数</span></span></span><br><span class="line"><span class="javascript">			<span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= <span class="number">9</span>; i++) &#123;</span></span><br><span class="line"><span class="javascript">				<span class="comment">// 使用DOM对象创建一个tr，并写入到body的table中</span></span></span><br><span class="line"><span class="javascript">				<span class="built_in">document</span>.write(<span class="string">&quot;&lt;tr&gt;&quot;</span>);</span></span><br><span class="line"><span class="javascript">				<span class="comment">// 内圈控制个数</span></span></span><br><span class="line"><span class="javascript">				<span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">1</span>; j &lt;= i; j++) &#123;</span></span><br><span class="line"><span class="javascript">					<span class="comment">// 使用DOM对象创建一个td，并写入到body中的table中的tr中</span></span></span><br><span class="line"><span class="javascript">					<span class="comment">//console.log(i + &quot; * &quot; + j + &quot; = &quot; + i*j);</span></span></span><br><span class="line"><span class="javascript">					<span class="built_in">document</span>.write(<span class="string">&quot;&lt;td style=&#x27;border: 1px solid black;&#x27;&gt;&quot;</span> + j +</span></span><br><span class="line"><span class="javascript">						<span class="string">&quot; * &quot;</span> + i + <span class="string">&quot; = &quot;</span> + i * j + <span class="string">&quot;&lt;/td&gt;&quot;</span>);</span></span><br><span class="line"><span class="javascript">				&#125;</span></span><br><span class="line"><span class="javascript">				<span class="built_in">document</span>.write(<span class="string">&quot;&lt;/tr&gt;&quot;</span>);</span></span><br><span class="line"><span class="javascript">			&#125;</span></span><br><span class="line"><span class="javascript">			<span class="built_in">document</span>.write(<span class="string">&quot;&lt;/table&gt;&quot;</span>);</span></span><br><span class="line"><span class="javascript">		</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p> 演示效果：</p>
<p><img src="https://dao-1306038680.cos.ap-shanghai.myqcloud.com/img/image-20210627094244314.png" alt="image-20210627094244314"></p>
<h3 id="6-2-程序员求签"><a href="#6-2-程序员求签" class="headerlink" title="6.2. 程序员求签"></a>6.2. 程序员求签</h3><p> 利用HTML+CSS+JS开发具有动态效果的程序员求签工具。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">COPY<span class="comment">&lt;!-- 必须写在HTML文件首行 --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- HTML文档的开始 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- HTML文档的开头部分 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 文档属性 告诉浏览器采用什么编码解析文档 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 文档标题 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>程序员求签<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 引入外部css文件 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/good_luck.css&quot;</span> /&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- HTML文档的开头结束 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- HTML文档的主体部分开始 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 内容 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 标题 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;title&quot;</span>&gt;</span></span><br><span class="line">				程序员求签<span class="tag">&lt;<span class="name">sup</span>&gt;</span>beta<span class="tag">&lt;/<span class="name">sup</span>&gt;</span><span class="comment">&lt;!-- sup上标字 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 详细信息 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">b</span>&gt;</span>求<span class="tag">&lt;/<span class="name">b</span>&gt;</span>婚丧嫁娶亲友疾病编程测试升职跳槽陨石核弹各类吉凶</span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 日期时间 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;date&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 求签部分 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;good_luck&quot;</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">li</span>&gt;</span>编码测试修复提交之前求一签，可避凶趋吉<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">li</span>&gt;</span>选择所求之事并在心中默念，再单击“求”即可<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">li</span>&gt;</span>同一件事只能求一次，下次再求请刷新页面<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">table</span> <span class="attr">id</span>=<span class="string">&quot;table&quot;</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">td</span>&gt;</span>编码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">td</span>&gt;</span>测试<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">td</span>&gt;</span>修复BUG<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">td</span>&gt;</span>提交代码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">td</span>&gt;</span>其他<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 求签结果 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;result&quot;</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;check&quot;</span>&gt;</span>请点击所求之事<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;ask&quot;</span>&gt;</span>求<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;answer&quot;</span>&gt;</span>超大吉<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 引入外部js文件 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/good_luck.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- HTML文档的主体部分结束 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- HTML文档的结束 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p> good_luck.css</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">COPY<span class="comment">/* 采用什么编码解析文件 */</span></span><br><span class="line"><span class="keyword">@charset</span> <span class="string">&quot;utf-8&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 使用id选择器渲染id=&quot;container&quot;标签的样式</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-id">#container</span> &#123;</span><br><span class="line">	<span class="attribute">width</span>: <span class="number">350px</span>;</span><br><span class="line">	<span class="comment">/* 宽350px */</span></span><br><span class="line">	<span class="attribute">margin</span>: <span class="number">50px</span> auto;</span><br><span class="line">	<span class="comment">/* 顶部外间距50px 居中 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* -------------------------标题 begin------------------------- */</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 使用id选择器渲染id=&quot;title&quot;标签的样式</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-id">#title</span> &#123;</span><br><span class="line">	<span class="attribute">background</span>: gray;</span><br><span class="line">	<span class="comment">/* 背景色灰色 */</span></span><br><span class="line">	<span class="attribute">color</span>: white;</span><br><span class="line">	<span class="comment">/* 字体白色 */</span></span><br><span class="line">	<span class="attribute">font-weight</span>: bold;</span><br><span class="line">	<span class="comment">/* 字体加粗 */</span></span><br><span class="line">	<span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">	<span class="comment">/* 字体大小 */</span></span><br><span class="line">	<span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">20px</span>;</span><br><span class="line">	<span class="comment">/* 设置内间距 */</span></span><br><span class="line">	<span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span><br><span class="line">	<span class="comment">/* 设置底部外间距10px */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* -------------------------标题 end--------------------------- */</span></span><br><span class="line"><span class="comment">/* -------------------------详细信息 begin---------------------- */</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 使用id选择器渲染id=&quot;info&quot;标签的样式</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-id">#info</span> &#123;</span><br><span class="line">	<span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">	<span class="comment">/* 字体大小 */</span></span><br><span class="line">	<span class="attribute">text-align</span>: center;</span><br><span class="line">	<span class="comment">/* 文本居中 */</span></span><br><span class="line">	<span class="attribute">color</span>: red;</span><br><span class="line">	<span class="comment">/* 字体红色 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 使用id选择器定位id=&quot;info&quot;标签</span></span><br><span class="line"><span class="comment">* 然后渲染其子标签b的样式</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-id">#info</span> <span class="selector-tag">b</span> &#123;</span><br><span class="line">	<span class="attribute">background</span>: crimson;</span><br><span class="line">	<span class="comment">/* 背景色深红色 */</span></span><br><span class="line">	<span class="attribute">color</span>: white;</span><br><span class="line">	<span class="comment">/* 字体白色 */</span></span><br><span class="line">	<span class="attribute">padding</span>: <span class="number">0</span> <span class="number">3px</span>;</span><br><span class="line">	<span class="comment">/* 设置内间距 */</span></span><br><span class="line">	<span class="attribute">margin</span>: <span class="number">0</span> <span class="number">3px</span>;</span><br><span class="line">	<span class="comment">/* 设置外间距 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* -------------------------详细信息 end------------------------ */</span></span><br><span class="line"><span class="comment">/* -------------------------日期时间 begin---------------------- */</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 使用id选择器渲染id=&quot;date&quot;标签的样式</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-id">#date</span> &#123;</span><br><span class="line">	<span class="attribute">font-size</span>: <span class="number">22px</span>;</span><br><span class="line">	<span class="comment">/* 字体大小 */</span></span><br><span class="line">	<span class="attribute">font-weight</span>: bold;</span><br><span class="line">	<span class="comment">/* 字体加粗 */</span></span><br><span class="line">	<span class="attribute">line-height</span>: <span class="number">40px</span>;</span><br><span class="line">	<span class="comment">/* 行间距 */</span></span><br><span class="line">	<span class="attribute">text-align</span>: center;</span><br><span class="line">	<span class="comment">/* 居中 */</span></span><br><span class="line">	<span class="attribute">border-bottom</span>: <span class="number">1px</span> solid gray;</span><br><span class="line">	<span class="comment">/* 底部边框颜色灰色 粗细1px */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* -------------------------日期时间 end------------------------ */</span></span><br><span class="line"><span class="comment">/* -------------------------求签部分 begin---------------------- */</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 使用id选择器渲染id=&quot;good_luck&quot;标签的样式</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-id">#good_luck</span> &#123;</span><br><span class="line">	<span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">	<span class="comment">/* 字体大小 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 使用id选择器定位id=&quot;table&quot;标签</span></span><br><span class="line"><span class="comment">* 然后渲染其子标签tr的子标签td的标签样式</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-id">#table</span> <span class="selector-tag">tr</span> <span class="selector-tag">td</span> &#123;</span><br><span class="line">	<span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">	<span class="comment">/* 宽100px */</span></span><br><span class="line">	<span class="attribute">background</span>: <span class="number">#CCCCCC</span>;</span><br><span class="line">	<span class="comment">/* 背景色 */</span></span><br><span class="line">	<span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">	<span class="comment">/* 设置顶部和底部内间距10px 左右为0 */</span></span><br><span class="line">	<span class="attribute">text-align</span>: center;</span><br><span class="line">	<span class="comment">/* 居中 */</span></span><br><span class="line">	<span class="attribute">cursor</span>: pointer;</span><br><span class="line">	<span class="comment">/* 鼠标变手势 */</span></span><br><span class="line">	<span class="attribute">border-radius</span>: <span class="number">2px</span>;</span><br><span class="line">	<span class="comment">/* 边角变圆角 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 添加鼠标移动至指定元素的样式修改 */</span></span><br><span class="line"><span class="selector-id">#table</span> <span class="selector-tag">tr</span> <span class="selector-tag">td</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">	<span class="attribute">background</span>: <span class="number">#AAAAAA</span>;</span><br><span class="line">	<span class="comment">/* 背景色 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* -------------------------求签部分 end------------------------ */</span></span><br><span class="line"><span class="comment">/* -------------------------求签结果 begin---------------------- */</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 使用id选择器渲染id=&quot;result&quot;标签的样式</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-id">#result</span> &#123;</span><br><span class="line">	<span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">	<span class="comment">/* 高度200px */</span></span><br><span class="line">	<span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#FFAAAA</span>;</span><br><span class="line">	<span class="comment">/* 边框颜色 粗细2px */</span></span><br><span class="line">	<span class="attribute">margin-top</span>: <span class="number">10px</span>;</span><br><span class="line">	<span class="comment">/* 设置外间距 */</span></span><br><span class="line">	<span class="attribute">position</span>: relative;</span><br><span class="line">	<span class="comment">/* 子标签相对于父标签定位 */</span></span><br><span class="line">	<span class="attribute">overflow</span>: hidden;</span><br><span class="line">	<span class="comment">/* 超出标签范围内容隐藏 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 使用id选择器渲染id=&quot;check&quot;标签的样式</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-id">#check</span> &#123;</span><br><span class="line">	<span class="attribute">text-align</span>: center;</span><br><span class="line">	<span class="comment">/* 居中 */</span></span><br><span class="line">	<span class="attribute">font-size</span>: <span class="number">30px</span>;</span><br><span class="line">	<span class="comment">/* 字体大小 */</span></span><br><span class="line">	<span class="attribute">padding-top</span>: <span class="number">70px</span>;</span><br><span class="line">	<span class="comment">/* 设置顶部内间距70px */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 使用id选择器渲染id=&quot;ask&quot;标签的样式</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-id">#ask</span> &#123;</span><br><span class="line">	<span class="attribute">background</span>: crimson;</span><br><span class="line">	<span class="comment">/* 背景色深红色 */</span></span><br><span class="line">	<span class="attribute">position</span>: absolute;</span><br><span class="line">	<span class="comment">/* 相对于父标签使用绝对定位 */</span></span><br><span class="line">	<span class="attribute">top</span>: <span class="number">205px</span>;</span><br><span class="line">	<span class="comment">/* 从父标签顶部开始计算 */</span></span><br><span class="line">	<span class="attribute">left</span>: <span class="number">0px</span>;</span><br><span class="line">	<span class="comment">/* 从父标签左部开始计算 */</span></span><br><span class="line">	<span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">	<span class="comment">/* 宽度是其父元素的100% */</span></span><br><span class="line">	<span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">	<span class="comment">/* 高度是其父元素的100% */</span></span><br><span class="line">	<span class="attribute">font-size</span>: <span class="number">100px</span>;</span><br><span class="line">	<span class="comment">/* 字体大小 */</span></span><br><span class="line">	<span class="attribute">font-weight</span>: bold;</span><br><span class="line">	<span class="comment">/* 字体加粗 */</span></span><br><span class="line">	<span class="attribute">cursor</span>: pointer;</span><br><span class="line">	<span class="comment">/* 鼠标变手势 */</span></span><br><span class="line">	<span class="attribute">text-align</span>: center;</span><br><span class="line">	<span class="comment">/* 居中 */</span></span><br><span class="line">	<span class="attribute">line-height</span>: <span class="number">200px</span>;</span><br><span class="line">	<span class="comment">/* 行间距 */</span></span><br><span class="line">	<span class="attribute">color</span>: white;</span><br><span class="line">	<span class="comment">/* 字体白色 */</span></span><br><span class="line">	<span class="attribute">transition</span>: all <span class="number">0.5s</span>;</span><br><span class="line">	<span class="comment">/* 所有样式改变效果耗时0.5秒 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 使用id选择器渲染id=&quot;answer&quot;标签的样式</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-id">#answer</span> &#123;</span><br><span class="line">	<span class="attribute">background</span>: white;</span><br><span class="line">	<span class="comment">/* 背景色白色 */</span></span><br><span class="line">	<span class="attribute">position</span>: absolute;</span><br><span class="line">	<span class="comment">/* 相对于父标签使用绝对定位 */</span></span><br><span class="line">	<span class="attribute">top</span>: <span class="number">205px</span>;</span><br><span class="line">	<span class="comment">/* 从父标签顶部开始计算 */</span></span><br><span class="line">	<span class="attribute">left</span>: <span class="number">0px</span>;</span><br><span class="line">	<span class="comment">/* 从父标签左部开始计算 */</span></span><br><span class="line">	<span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">	<span class="comment">/* 宽度是其父元素的100% */</span></span><br><span class="line">	<span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">	<span class="comment">/* 高度是其父元素的100% */</span></span><br><span class="line">	<span class="attribute">font-size</span>: <span class="number">100px</span>;</span><br><span class="line">	<span class="comment">/* 字体大小 */</span></span><br><span class="line">	<span class="attribute">font-weight</span>: bold;</span><br><span class="line">	<span class="comment">/* 字体加粗 */</span></span><br><span class="line">	<span class="attribute">cursor</span>: pointer;</span><br><span class="line">	<span class="comment">/* 鼠标变手势 */</span></span><br><span class="line">	<span class="attribute">text-align</span>: center;</span><br><span class="line">	<span class="comment">/* 居中 */</span></span><br><span class="line">	<span class="attribute">line-height</span>: <span class="number">200px</span>;</span><br><span class="line">	<span class="comment">/* 行间距 */</span></span><br><span class="line">	<span class="attribute">transition</span>: all <span class="number">0.5s</span>;</span><br><span class="line">	<span class="comment">/* 所有样式改变效果耗时0.5秒 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* -------------------------求签结果 end------------------------ */</span></span><br></pre></td></tr></table></figure>

<p> good_luck.js</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">COPY<span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 页面加载以后就执行的函数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">	<span class="comment">// 创建日期对象</span></span><br><span class="line">	<span class="keyword">var</span> today = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">	<span class="comment">// 创建数组并初始化数组</span></span><br><span class="line">	<span class="keyword">var</span> weeks = [<span class="string">&quot;日 &quot;</span>, <span class="string">&quot;一 &quot;</span>, <span class="string">&quot;二 &quot;</span>, <span class="string">&quot;三 &quot;</span>, <span class="string">&quot;四 &quot;</span>, <span class="string">&quot;五 &quot;</span>, <span class="string">&quot;六 &quot;</span>];</span><br><span class="line">	<span class="comment">// 拼接字符串得到一个中文日期，并设置为id=&quot;date&quot;的div标签的内容</span></span><br><span class="line">	<span class="built_in">document</span>.getElementById(<span class="string">&#x27;date&#x27;</span>).innerHTML = <span class="string">&quot;今天是 &quot;</span> + today.getFullYear() +</span><br><span class="line">		<span class="string">&quot;年 &quot;</span> + (today.getMonth() + <span class="number">1</span>) + <span class="string">&quot;月 &quot;</span> + today.getDate() + <span class="string">&quot;日 星期&quot;</span> +</span><br><span class="line">		weeks[today.getDay()];</span><br><span class="line">	<span class="comment">// 根据标签名称获取所有td标签</span></span><br><span class="line">	<span class="keyword">var</span> tds = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;td&#x27;</span>);</span><br><span class="line">	<span class="comment">// 循环遍历td标签，给每一个td都添加一个点击事件</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; tds.length; i++) &#123;</span><br><span class="line">		<span class="comment">// 添加点击事件</span></span><br><span class="line">		tds[i].onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">			<span class="comment">// 根据id获取id=&quot;asd&quot;的div标签，并设置其top属性为0px(标签样式0.5秒移动至0px)</span></span><br><span class="line">			<span class="built_in">document</span>.getElementById(<span class="string">&#x27;ask&#x27;</span>).style.top = <span class="string">&#x27;0px&#x27;</span>;</span><br><span class="line">			<span class="comment">// 根据id获取id=&quot;card&quot;的div标签，并设置其display属性为none(隐藏div)</span></span><br><span class="line">			<span class="built_in">document</span>.getElementById(<span class="string">&#x27;check&#x27;</span>).style.display = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">			<span class="comment">// 根据id获取id=&quot;answer&quot;的div标签，并设置其top属性为205px(标签样式0.5秒移动至205px)</span></span><br><span class="line">		<span class="built_in">document</span>.getElementById(<span class="string">&#x27;answer&#x27;</span>).style.top = <span class="string">&#x27;205px&#x27;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 创建数组并初始化数组</span></span><br><span class="line"><span class="keyword">var</span> results = [<span class="string">&#x27;超大吉&#x27;</span>, <span class="string">&#x27;大吉&#x27;</span>, <span class="string">&#x27;吉&#x27;</span>, <span class="string">&#x27;小吉&#x27;</span>, <span class="string">&#x27;小凶&#x27;</span>, <span class="string">&#x27;凶&#x27;</span>, <span class="string">&#x27;大凶&#x27;</span>, <span class="string">&#x27;超大凶&#x27;</span>];</span><br><span class="line"><span class="comment">// 根据id获取id=&quot;asd&quot;的div标签，并添加点击事件</span></span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">&#x27;ask&#x27;</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">	<span class="comment">// 生成一个0~7的随机数</span></span><br><span class="line">	<span class="keyword">var</span> num = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">8</span>);</span><br><span class="line">	<span class="comment">// 根据随机数(下标)获取results数组内对应的求签结果，并设置为id=&quot;answer&quot;的div标签的内容</span></span><br><span class="line">	<span class="built_in">document</span>.getElementById(<span class="string">&#x27;answer&#x27;</span>).innerHTML = results[num];</span><br><span class="line">	<span class="comment">// 根据id获取id=&quot;answer&quot;的div标签，并设置其top属性为0px(标签样式0.5秒移动至0px)</span></span><br><span class="line">	<span class="built_in">document</span>.getElementById(<span class="string">&#x27;answer&#x27;</span>).style.top = <span class="string">&#x27;0px&#x27;</span>;</span><br><span class="line">	<span class="comment">// 根据id获取id=&quot;asd&quot;的div标签，并设置其top属性为205px(标签样式0.5秒移动至205px)</span></span><br><span class="line">	<span class="built_in">document</span>.getElementById(<span class="string">&#x27;ask&#x27;</span>).style.top = <span class="string">&#x27;205px&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p> 演示效果：</p>
<p><img src="https://dao-1306038680.cos.ap-shanghai.myqcloud.com/img/image-20210627095610733.png" alt="image-20210627095610733"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
</search>
